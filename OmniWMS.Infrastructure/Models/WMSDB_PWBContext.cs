using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Design;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Configuration;

namespace OmniWMS.Infrastructure.Models
{
    public partial class WMSDB_PWBContext : DbContext
    {
        public WMSDB_PWBContext()
        {
        }

        public WMSDB_PWBContext(DbContextOptions<WMSDB_PWBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<BackupViewPreparePrintCartonRf> BackupViewPreparePrintCartonRf { get; set; }
        public virtual DbSet<BaselineMsWorkarea> BaselineMsWorkarea { get; set; }
        public virtual DbSet<BaselineMsZone> BaselineMsZone { get; set; }
        public virtual DbSet<BaselineMsZoneLocation> BaselineMsZoneLocation { get; set; }
        public virtual DbSet<BaselinePickSeq> BaselinePickSeq { get; set; }
        public virtual DbSet<BaselineSyRuleConditionField> BaselineSyRuleConditionField { get; set; }
        public virtual DbSet<BaselineSyRuleConditionOperation> BaselineSyRuleConditionOperation { get; set; }
        public virtual DbSet<BaselineSySuggestPutawayByProduct> BaselineSySuggestPutawayByProduct { get; set; }
        public virtual DbSet<BaselineSySuggestPutawayByZoneProduct> BaselineSySuggestPutawayByZoneProduct { get; set; }
        public virtual DbSet<Customer> Customer { get; set; }
        public virtual DbSet<Dashboard> Dashboard { get; set; }
        public virtual DbSet<Dashboard1> Dashboard1 { get; set; }
        public virtual DbSet<DashboardTemp> DashboardTemp { get; set; }
        public virtual DbSet<Districts> Districts { get; set; }
        public virtual DbSet<ExwmsConfig> ExwmsConfig { get; set; }
        public virtual DbSet<ExwmsGradeMoving> ExwmsGradeMoving { get; set; }
        public virtual DbSet<ExwmsGradeMovingLog> ExwmsGradeMovingLog { get; set; }
        public virtual DbSet<ExwmsGradeMovingRequest> ExwmsGradeMovingRequest { get; set; }
        public virtual DbSet<ExwmsImportGradeMovingLog> ExwmsImportGradeMovingLog { get; set; }
        public virtual DbSet<ExwmsImportGradeMovingTemp> ExwmsImportGradeMovingTemp { get; set; }
        public virtual DbSet<ExwmsImportmonitorLog> ExwmsImportmonitorLog { get; set; }
        public virtual DbSet<ExwmsImportmonitorTemp> ExwmsImportmonitorTemp { get; set; }
        public virtual DbSet<ExwmsLogMinimumStock> ExwmsLogMinimumStock { get; set; }
        public virtual DbSet<ExwmsLogMoveGradeRequest> ExwmsLogMoveGradeRequest { get; set; }
        public virtual DbSet<ExwmsMonitorMaster> ExwmsMonitorMaster { get; set; }
        public virtual DbSet<ExwmsRowMapping> ExwmsRowMapping { get; set; }
        public virtual DbSet<GenIndex> GenIndex { get; set; }
        public virtual DbSet<GoodsReceiveItemTemp> GoodsReceiveItemTemp { get; set; }
        public virtual DbSet<ImCallCenter> ImCallCenter { get; set; }
        public virtual DbSet<ImCallCenterItem> ImCallCenterItem { get; set; }
        public virtual DbSet<ImConfirmMarshall> ImConfirmMarshall { get; set; }
        public virtual DbSet<ImConfirmMarshallItem> ImConfirmMarshallItem { get; set; }
        public virtual DbSet<ImDelivery> ImDelivery { get; set; }
        public virtual DbSet<ImDiscounts> ImDiscounts { get; set; }
        public virtual DbSet<ImGoodsIssue> ImGoodsIssue { get; set; }
        public virtual DbSet<ImGoodsIssueItem> ImGoodsIssueItem { get; set; }
        public virtual DbSet<ImGoodsIssueItemLocation> ImGoodsIssueItemLocation { get; set; }
        public virtual DbSet<ImGoodsIssueWaveAllocation> ImGoodsIssueWaveAllocation { get; set; }
        public virtual DbSet<ImGoodsReceive> ImGoodsReceive { get; set; }
        public virtual DbSet<ImGoodsReceiveItem> ImGoodsReceiveItem { get; set; }
        public virtual DbSet<ImGoodsReceiveItemLocation> ImGoodsReceiveItemLocation { get; set; }
        public virtual DbSet<ImGoodsTransfer> ImGoodsTransfer { get; set; }
        public virtual DbSet<ImGoodsTransferItem> ImGoodsTransferItem { get; set; }
        public virtual DbSet<ImGoodsissueLogging> ImGoodsissueLogging { get; set; }
        public virtual DbSet<ImMarshall> ImMarshall { get; set; }
        public virtual DbSet<ImMarshallItem> ImMarshallItem { get; set; }
        public virtual DbSet<ImMarshallItemLocation> ImMarshallItemLocation { get; set; }
        public virtual DbSet<ImMarshallTask> ImMarshallTask { get; set; }
        public virtual DbSet<ImMarshallTaskItem> ImMarshallTaskItem { get; set; }
        public virtual DbSet<ImMarshallTaskItemDetail> ImMarshallTaskItemDetail { get; set; }
        public virtual DbSet<ImPlanGoodsIssue> ImPlanGoodsIssue { get; set; }
        public virtual DbSet<ImPlanGoodsIssueItem> ImPlanGoodsIssueItem { get; set; }
        public virtual DbSet<ImPlanGoodsIssueItemInfo> ImPlanGoodsIssueItemInfo { get; set; }
        public virtual DbSet<ImPlanGoodsReceive> ImPlanGoodsReceive { get; set; }
        public virtual DbSet<ImPlanGoodsReceiveItem> ImPlanGoodsReceiveItem { get; set; }
        public virtual DbSet<ImPlanGoodsTransfer> ImPlanGoodsTransfer { get; set; }
        public virtual DbSet<ImPlanGoodsTransferItem> ImPlanGoodsTransferItem { get; set; }
        public virtual DbSet<ImPos> ImPos { get; set; }
        public virtual DbSet<ImPositem> ImPositem { get; set; }
        public virtual DbSet<ImPrepareData> ImPrepareData { get; set; }
        public virtual DbSet<ImPreparePrintTagOutPick> ImPreparePrintTagOutPick { get; set; }
        public virtual DbSet<ImPromotions> ImPromotions { get; set; }
        public virtual DbSet<ImSalesOrderMappingPos> ImSalesOrderMappingPos { get; set; }
        public virtual DbSet<ImSerialcapturing> ImSerialcapturing { get; set; }
        public virtual DbSet<ImStockBalance> ImStockBalance { get; set; }
        public virtual DbSet<ImStockCard> ImStockCard { get; set; }
        public virtual DbSet<ImStockCardLock> ImStockCardLock { get; set; }
        public virtual DbSet<ImStockCardReserve> ImStockCardReserve { get; set; }
        public virtual DbSet<ImStplanGoodsIssue> ImStplanGoodsIssue { get; set; }
        public virtual DbSet<ImTask> ImTask { get; set; }
        public virtual DbSet<ImTaskItem> ImTaskItem { get; set; }
        public virtual DbSet<ImTaskItemShort> ImTaskItemShort { get; set; }
        public virtual DbSet<ImTaskItemdetail> ImTaskItemdetail { get; set; }
        public virtual DbSet<ImTransferStockAdjustment> ImTransferStockAdjustment { get; set; }
        public virtual DbSet<ImTransferStockAdjustmentItem> ImTransferStockAdjustmentItem { get; set; }
        public virtual DbSet<ImTruckLoad> ImTruckLoad { get; set; }
        public virtual DbSet<ImTruckLoadItem> ImTruckLoadItem { get; set; }
        public virtual DbSet<ImTruckLoadItemDetail> ImTruckLoadItemDetail { get; set; }
        public virtual DbSet<ImportConfig> ImportConfig { get; set; }
        public virtual DbSet<ImportProductlocationLastTemp> ImportProductlocationLastTemp { get; set; }
        public virtual DbSet<ImportProductlocationTemp> ImportProductlocationTemp { get; set; }
        public virtual DbSet<Ism> Ism { get; set; }
        public virtual DbSet<LocationSuggest> LocationSuggest { get; set; }
        public virtual DbSet<LogIssuesBinbalance> LogIssuesBinbalance { get; set; }
        public virtual DbSet<LogIssuesSummary> LogIssuesSummary { get; set; }
        public virtual DbSet<LogUpdateBalanceCatchweight> LogUpdateBalanceCatchweight { get; set; }
        public virtual DbSet<LogWaveBinBalance> LogWaveBinBalance { get; set; }
        public virtual DbSet<MakeImGoodsIssueItemLocation> MakeImGoodsIssueItemLocation { get; set; }
        public virtual DbSet<MakeRefGoodsIssueItemLocation> MakeRefGoodsIssueItemLocation { get; set; }
        public virtual DbSet<Ms3pl> Ms3pl { get; set; }
        public virtual DbSet<MsAddressCountry> MsAddressCountry { get; set; }
        public virtual DbSet<MsAddressDistrict> MsAddressDistrict { get; set; }
        public virtual DbSet<MsAddressPostcode> MsAddressPostcode { get; set; }
        public virtual DbSet<MsAddressProvince> MsAddressProvince { get; set; }
        public virtual DbSet<MsAddressSubDistrict> MsAddressSubDistrict { get; set; }
        public virtual DbSet<MsContainerType> MsContainerType { get; set; }
        public virtual DbSet<MsDockDoor> MsDockDoor { get; set; }
        public virtual DbSet<MsDocumentInterim> MsDocumentInterim { get; set; }
        public virtual DbSet<MsDocumentType> MsDocumentType { get; set; }
        public virtual DbSet<MsDocumentTypeItemStatus> MsDocumentTypeItemStatus { get; set; }
        public virtual DbSet<MsDocumentTypeNumber> MsDocumentTypeNumber { get; set; }
        public virtual DbSet<MsEquipment> MsEquipment { get; set; }
        public virtual DbSet<MsEquipmentItem> MsEquipmentItem { get; set; }
        public virtual DbSet<MsEquipmentSubType> MsEquipmentSubType { get; set; }
        public virtual DbSet<MsEquipmentType> MsEquipmentType { get; set; }
        public virtual DbSet<MsItemStatus> MsItemStatus { get; set; }
        public virtual DbSet<MsLocation> MsLocation { get; set; }
        public virtual DbSet<MsLocationAisle> MsLocationAisle { get; set; }
        public virtual DbSet<MsLocationEquipment> MsLocationEquipment { get; set; }
        public virtual DbSet<MsLocationType> MsLocationType { get; set; }
        public virtual DbSet<MsLocationWorkArea> MsLocationWorkArea { get; set; }
        public virtual DbSet<MsOwner> MsOwner { get; set; }
        public virtual DbSet<MsOwnerSoldTo> MsOwnerSoldTo { get; set; }
        public virtual DbSet<MsOwnerType> MsOwnerType { get; set; }
        public virtual DbSet<MsOwnerVendor> MsOwnerVendor { get; set; }
        public virtual DbSet<MsPackStation> MsPackStation { get; set; }
        public virtual DbSet<MsPallet> MsPallet { get; set; }
        public virtual DbSet<MsPalletType> MsPalletType { get; set; }
        public virtual DbSet<MsProduct> MsProduct { get; set; }
        public virtual DbSet<MsProductCatchWeight> MsProductCatchWeight { get; set; }
        public virtual DbSet<MsProductCategory> MsProductCategory { get; set; }
        public virtual DbSet<MsProductConversion> MsProductConversion { get; set; }
        public virtual DbSet<MsProductConversionBarcode> MsProductConversionBarcode { get; set; }
        public virtual DbSet<MsProductOwner> MsProductOwner { get; set; }
        public virtual DbSet<MsProductSubType> MsProductSubType { get; set; }
        public virtual DbSet<MsProductType> MsProductType { get; set; }
        public virtual DbSet<MsProductspecialtag> MsProductspecialtag { get; set; }
        public virtual DbSet<MsProductspecialtagLastTemp> MsProductspecialtagLastTemp { get; set; }
        public virtual DbSet<MsProductspecialtagTemp> MsProductspecialtagTemp { get; set; }
        public virtual DbSet<MsReasonCode> MsReasonCode { get; set; }
        public virtual DbSet<MsRoom> MsRoom { get; set; }
        public virtual DbSet<MsRound> MsRound { get; set; }
        public virtual DbSet<MsRoundTimeTable> MsRoundTimeTable { get; set; }
        public virtual DbSet<MsRoute> MsRoute { get; set; }
        public virtual DbSet<MsRoutepostcodeMapping> MsRoutepostcodeMapping { get; set; }
        public virtual DbSet<MsRule> MsRule { get; set; }
        public virtual DbSet<MsRuleCondition> MsRuleCondition { get; set; }
        public virtual DbSet<MsRuleZone> MsRuleZone { get; set; }
        public virtual DbSet<MsShipTo> MsShipTo { get; set; }
        public virtual DbSet<MsShipToType> MsShipToType { get; set; }
        public virtual DbSet<MsSoldTo> MsSoldTo { get; set; }
        public virtual DbSet<MsSoldToShipTo> MsSoldToShipTo { get; set; }
        public virtual DbSet<MsSoldToType> MsSoldToType { get; set; }
        public virtual DbSet<MsSubRoute> MsSubRoute { get; set; }
        public virtual DbSet<MsTaskGroup> MsTaskGroup { get; set; }
        public virtual DbSet<MsTaskGroupEquipment> MsTaskGroupEquipment { get; set; }
        public virtual DbSet<MsTaskGroupUser> MsTaskGroupUser { get; set; }
        public virtual DbSet<MsTaskGroupWorkArea> MsTaskGroupWorkArea { get; set; }
        public virtual DbSet<MsUser> MsUser { get; set; }
        public virtual DbSet<MsUserEquipment> MsUserEquipment { get; set; }
        public virtual DbSet<MsUserGroup> MsUserGroup { get; set; }
        public virtual DbSet<MsUserGroupMenu> MsUserGroupMenu { get; set; }
        public virtual DbSet<MsUserGroupZone> MsUserGroupZone { get; set; }
        public virtual DbSet<MsUserMappingPrinterHdl> MsUserMappingPrinterHdl { get; set; }
        public virtual DbSet<MsVehicleType> MsVehicleType { get; set; }
        public virtual DbSet<MsVendor> MsVendor { get; set; }
        public virtual DbSet<MsVendorType> MsVendorType { get; set; }
        public virtual DbSet<MsWarehouse> MsWarehouse { get; set; }
        public virtual DbSet<MsWave> MsWave { get; set; }
        public virtual DbSet<MsWaveRule> MsWaveRule { get; set; }
        public virtual DbSet<MsWorkArea> MsWorkArea { get; set; }
        public virtual DbSet<MsZone> MsZone { get; set; }
        public virtual DbSet<MsZoneLocation> MsZoneLocation { get; set; }
        public virtual DbSet<OnwmsAdditionalOrderSplit> OnwmsAdditionalOrderSplit { get; set; }
        public virtual DbSet<OnwmsCancelledSummary> OnwmsCancelledSummary { get; set; }
        public virtual DbSet<OnwmsCartonstatus> OnwmsCartonstatuses { get; set; }
        public virtual DbSet<OnwmsConfig> OnwmsConfig { get; set; }
        public virtual DbSet<OnwmsDistroAllocation> OnwmsDistroAllocation { get; set; }
        public virtual DbSet<OnwmsDistroDtl> OnwmsDistroDtl { get; set; }
        public virtual DbSet<OnwmsDistroHdr> OnwmsDistroHdr { get; set; }
        public virtual DbSet<OnwmsImportTask> OnwmsImportTask { get; set; }
        public virtual DbSet<OnwmsLogCancelledQty> OnwmsLogCancelledQty { get; set; }
        public virtual DbSet<OnwmsLogImportSalesorder> OnwmsLogImportSalesorder { get; set; }
        public virtual DbSet<OnwmsLogLpnClosetask> OnwmsLogLpnClosetask { get; set; }
        public virtual DbSet<OnwmsLogResendShipment> OnwmsLogResendShipment { get; set; }
        public virtual DbSet<OnwmsLogStation> OnwmsLogStation { get; set; }
        public virtual DbSet<OnwmsOwnerMapping> OnwmsOwnerMapping { get; set; }
        public virtual DbSet<OnwmsPacking> OnwmsPacking { get; set; }
        public virtual DbSet<OnwmsRouteGroup> OnwmsRouteGroups { get; set; }
        public virtual DbSet<OnwmsRouteSequence> OnwmsRouteSequences { get; set; }
        public virtual DbSet<OnwmsRouteStoreMaster> OnwmsRouteStoreMasters { get; set; }
        public virtual DbSet<OnwmsStationMaster> OnwmsStationMaster { get; set; }
        public virtual DbSet<OnwmsStoreMaster> OnwmsStoreMaster { get; set; }
        public virtual DbSet<OnwmsStorePacking> OnwmsStorePacking { get; set; }
        public virtual DbSet<OnwmsPuttostoreException> OnwmsPuttostoreException { get; set; }
        public virtual DbSet<OnwmsStoreStaging> OnwmsStoreStaging { get; set; }
        public virtual DbSet<OnwmsTempImportSalesorder> OnwmsTempImportSalesorder { get; set; }
        public virtual DbSet<OverallRound> OverallRound { get; set; }
        public virtual DbSet<OverallRoundPick> OverallRoundPick { get; set; }
        public virtual DbSet<OverallRoundPickTemp> OverallRoundPickTemp { get; set; }
        public virtual DbSet<OverallRoundTemp> OverallRoundTemp { get; set; }
        public virtual DbSet<OverallRoute> OverallRoute { get; set; }
        public virtual DbSet<OverallRouteTemp> OverallRouteTemp { get; set; }
        public virtual DbSet<OverallStatus> OverallStatus { get; set; }
        public virtual DbSet<OverallStatusExpress> OverallStatusExpress { get; set; }
        public virtual DbSet<OverallStatusExpressTemp> OverallStatusExpressTemp { get; set; }
        public virtual DbSet<OverallStatusTemp> OverallStatusTemp { get; set; }
        public virtual DbSet<OverallZonePick> OverallZonePick { get; set; }
        public virtual DbSet<OverallZonePickTemp> OverallZonePickTemp { get; set; }
        public virtual DbSet<PackSku> PackSku { get; set; }
        public virtual DbSet<PrepareImportsTruckLoad> PrepareImportsTruckLoad { get; set; }
        public virtual DbSet<Provinces> Provinces { get; set; }
        public virtual DbSet<ReIndex> ReIndex { get; set; }
        public virtual DbSet<SalesReport> SalesReport { get; set; }
        public virtual DbSet<ScmManifest432Dc> ScmManifest432Dc { get; set; }
        public virtual DbSet<ScmManifest432Fdc> ScmManifest432Fdc { get; set; }
        public virtual DbSet<ShortWave1> ShortWave1 { get; set; }
        public virtual DbSet<SnapDashboard> SnapDashboard { get; set; }
        public virtual DbSet<SnapImCallcenter> SnapImCallcenter { get; set; }
        public virtual DbSet<SnapImCallcenteritem> SnapImCallcenteritem { get; set; }
        public virtual DbSet<SnapImGoodsIssue> SnapImGoodsIssue { get; set; }
        public virtual DbSet<SnapImGoodsIssueItemLocation> SnapImGoodsIssueItemLocation { get; set; }
        public virtual DbSet<SnapImPlanGoodsIssue> SnapImPlanGoodsIssue { get; set; }
        public virtual DbSet<SnapImPlanGoodsIssueItem> SnapImPlanGoodsIssueItem { get; set; }
        public virtual DbSet<SnapImPos> SnapImPos { get; set; }
        public virtual DbSet<SnapImPositem> SnapImPositem { get; set; }
        public virtual DbSet<SnapImTask> SnapImTask { get; set; }
        public virtual DbSet<SnapImTaskItem> SnapImTaskItem { get; set; }
        public virtual DbSet<SnapWmTagOut> SnapWmTagOut { get; set; }
        public virtual DbSet<SnapWmTagOutItem> SnapWmTagOutItem { get; set; }
        public virtual DbSet<SnapWmTagoutpick> SnapWmTagoutpick { get; set; }
        public virtual DbSet<Subdistricts> Subdistricts { get; set; }
        public virtual DbSet<SyAutoNumber> SyAutoNumber { get; set; }
        public virtual DbSet<SyConfig> SyConfig { get; set; }
        public virtual DbSet<SyConfigDetail> SyConfigDetail { get; set; }
        public virtual DbSet<SyDocumentTypeRef> SyDocumentTypeRef { get; set; }
        public virtual DbSet<SyLogInterface> SyLogInterface { get; set; }
        public virtual DbSet<SyMenu> SyMenu { get; set; }
        public virtual DbSet<SyMenuType> SyMenuType { get; set; }
        public virtual DbSet<SyProcess> SyProcess { get; set; }
        public virtual DbSet<SyProcessStatus> SyProcessStatus { get; set; }
        public virtual DbSet<SyRuleConditionField> SyRuleConditionField { get; set; }
        public virtual DbSet<SyRuleConditionOperation> SyRuleConditionOperation { get; set; }
        public virtual DbSet<SySuggestPutawayByProduct> SySuggestPutawayByProduct { get; set; }
        public virtual DbSet<SySuggestPutawayByZoneProduct> SySuggestPutawayByZoneProduct { get; set; }
        public virtual DbSet<SyUserLog> SyUserLog { get; set; }
        public virtual DbSet<TempDataCount> TempDataCount { get; set; }
        public virtual DbSet<TempDataSoh> TempDataSoh { get; set; }
        public virtual DbSet<TempDtlDistro20190420> TempDtlDistro20190420 { get; set; }
        public virtual DbSet<TempHdrDistro20190420> TempHdrDistro20190420 { get; set; }
        public virtual DbSet<TempImGoodReceiveItems> TempImGoodReceiveItems { get; set; }
        public virtual DbSet<TempImGoodReceiveItemsPrd> TempImGoodReceiveItemsPrd { get; set; }
        public virtual DbSet<TempImGoodsReceiveItemLocation> TempImGoodsReceiveItemLocation { get; set; }
        public virtual DbSet<TempImGoodsReceiveItemLocationPrd> TempImGoodsReceiveItemLocationPrd { get; set; }
        public virtual DbSet<TempImGoodsreceiveItem> TempImGoodsreceiveItem { get; set; }
        public virtual DbSet<TempIssue> TempIssue { get; set; }
        public virtual DbSet<TempIssueItem> TempIssueItem { get; set; }
        public virtual DbSet<TempLocation20190610> TempLocation20190610 { get; set; }
        public virtual DbSet<TempLocationChill> TempLocationChill { get; set; }
        public virtual DbSet<TempPackItem> TempPackItem { get; set; }
        public virtual DbSet<TempPackItemAmb> TempPackItemAmb { get; set; }
        public virtual DbSet<TempPickNotPos> TempPickNotPos { get; set; }
        public virtual DbSet<TempPlanGoodsIssue> TempPlanGoodsIssue { get; set; }
        public virtual DbSet<TempPlanGoodsIssueItem> TempPlanGoodsIssueItem { get; set; }
        public virtual DbSet<TempPosDeduct> TempPosDeduct { get; set; }
        public virtual DbSet<TempProductRtw> TempProductRtw { get; set; }
        public virtual DbSet<TempProductStock> TempProductStock { get; set; }
        public virtual DbSet<TempProductStockRaw> TempProductStockRaw { get; set; }
        public virtual DbSet<TempProductStockRecount> TempProductStockRecount { get; set; }
        public virtual DbSet<TempProductStockRecountRaw> TempProductStockRecountRaw { get; set; }
        public virtual DbSet<TempSnapAllocate> TempSnapAllocate { get; set; }
        public virtual DbSet<TempSnapStock> TempSnapStock { get; set; }
        public virtual DbSet<TempStockDummy> TempStockDummy { get; set; }
        public virtual DbSet<TempSySuggestputawaybyproduct> TempSySuggestputawaybyproduct { get; set; }
        public virtual DbSet<TempTableExp> TempTableExp { get; set; }
        public virtual DbSet<TempWmBinBalance> TempWmBinBalance { get; set; }
        public virtual DbSet<TempWmBinBalancePrd> TempWmBinBalancePrd { get; set; }
        public virtual DbSet<TempWmTag> TempWmTag { get; set; }
        public virtual DbSet<TempWmTagItem> TempWmTagItem { get; set; }
        public virtual DbSet<TempWmTagItemPrd> TempWmTagItemPrd { get; set; }
        public virtual DbSet<ViewAssignTask> ViewAssignTask { get; set; }
        public virtual DbSet<ViewAssignTaskCart> ViewAssignTaskCart { get; set; }
        public virtual DbSet<ViewAssignTaskCartSku> ViewAssignTaskCartSku { get; set; }
        public virtual DbSet<ViewAutoConfirmShipmentPos> ViewAutoConfirmShipmentPos { get; set; }
        public virtual DbSet<ViewAutoPosshipmentDispatch> ViewAutoPosshipmentDispatch { get; set; }
        public virtual DbSet<ViewAutoPosshippmentDispatchProduct> ViewAutoPosshippmentDispatchProduct { get; set; }
        public virtual DbSet<ViewAutoTask> ViewAutoTask { get; set; }
        public virtual DbSet<ViewBinBalance> ViewBinBalance { get; set; }
        public virtual DbSet<ViewBinBalanceLocation> ViewBinBalanceLocation { get; set; }
        public virtual DbSet<ViewBinBalanceLocationManual> ViewBinBalanceLocationManual { get; set; }
        public virtual DbSet<ViewCallCenter> ViewCallCenter { get; set; }
        public virtual DbSet<ViewCallCenterDetail> ViewCallCenterDetail { get; set; }
        public virtual DbSet<ViewCallCenterItemDetail> ViewCallCenterItemDetail { get; set; }
        public virtual DbSet<ViewCartAssign> ViewCartAssign { get; set; }
        public virtual DbSet<ViewCartAssignList> ViewCartAssignList { get; set; }
        public virtual DbSet<ViewCartAssignListV2> ViewCartAssignListV2 { get; set; }
        public virtual DbSet<ViewCartAssignListV3> ViewCartAssignListV3 { get; set; }
        public virtual DbSet<ViewCartAssignV2> ViewCartAssignV2 { get; set; }
        public virtual DbSet<ViewCartNumber> ViewCartNumber { get; set; }
        public virtual DbSet<ViewCartNumberAutoTask> ViewCartNumberAutoTask { get; set; }
        public virtual DbSet<ViewCartNumberDrop> ViewCartNumberDrop { get; set; }
        public virtual DbSet<ViewCartNumberDropAutoTask> ViewCartNumberDropAutoTask { get; set; }
        public virtual DbSet<ViewCartNumberPick> ViewCartNumberPick { get; set; }
        public virtual DbSet<ViewCartNumberPickGroup> ViewCartNumberPickGroup { get; set; }
        public virtual DbSet<ViewCartNumberPickGroupV2> ViewCartNumberPickGroupV2 { get; set; }
        public virtual DbSet<ViewCartNumberPickGroupV3> ViewCartNumberPickGroupV3 { get; set; }
        public virtual DbSet<ViewCartNumberPickGroupV3AutoTask> ViewCartNumberPickGroupV3AutoTask { get; set; }
        public virtual DbSet<ViewCartNumberPickV2> ViewCartNumberPickV2 { get; set; }
        public virtual DbSet<ViewCartNumberPickV3> ViewCartNumberPickV3 { get; set; }
        public virtual DbSet<ViewCartNumberPickV3AutoTask> ViewCartNumberPickV3AutoTask { get; set; }
        public virtual DbSet<ViewCartonList> ViewCartonList { get; set; }
        public virtual DbSet<ViewCheckCartAssignPicking> ViewCheckCartAssignPicking { get; set; }
        public virtual DbSet<ViewCheckCartAssignPickingV2> ViewCheckCartAssignPickingV2 { get; set; }
        public virtual DbSet<ViewCheckDocumentStatus> ViewCheckDocumentStatus { get; set; }
        public virtual DbSet<ViewCheckDupMarshal> ViewCheckDupMarshal { get; set; }
        public virtual DbSet<ViewCheckDupPos> ViewCheckDupPos { get; set; }
        public virtual DbSet<ViewCheckGoodsReceiveConfirm> ViewCheckGoodsReceiveConfirm { get; set; }
        public virtual DbSet<ViewCheckGr> ViewCheckGr { get; set; }
        public virtual DbSet<ViewCheckInsertCallCenter> ViewCheckInsertCallCenter { get; set; }
        public virtual DbSet<ViewCheckMarshalPos> ViewCheckMarshalPos { get; set; }
        public virtual DbSet<ViewCheckMarshall> ViewCheckMarshall { get; set; }
        public virtual DbSet<ViewCheckMarshallTaskDup> ViewCheckMarshallTaskDup { get; set; }
        public virtual DbSet<ViewCheckMaxPlletLocation> ViewCheckMaxPlletLocation { get; set; }
        public virtual DbSet<ViewCheckPlanGr> ViewCheckPlanGr { get; set; }
        public virtual DbSet<ViewCheckPosnotInsert> ViewCheckPosnotInsert { get; set; }
        public virtual DbSet<ViewCheckPosqtyPlanlessQty> ViewCheckPosqtyPlanlessQty { get; set; }
        public virtual DbSet<ViewCheckQtyPick> ViewCheckQtyPick { get; set; }
        public virtual DbSet<ViewCheckQtyPickBak> ViewCheckQtyPickBak { get; set; }
        public virtual DbSet<ViewCheckUserAssign> ViewCheckUserAssign { get; set; }
        public virtual DbSet<ViewChkTagoutpickCtn> ViewChkTagoutpickCtn { get; set; }
        public virtual DbSet<ViewChkTagoutpickCtnAutoTask> ViewChkTagoutpickCtnAutoTask { get; set; }
        public virtual DbSet<ViewConfirmDoc> ViewConfirmDoc { get; set; }
        public virtual DbSet<ViewConfirmGoodsIssue> ViewConfirmGoodsIssue { get; set; }
        public virtual DbSet<ViewConfirmMarshall> ViewConfirmMarshall { get; set; }
        public virtual DbSet<ViewConfirmMarshallDetail> ViewConfirmMarshallDetail { get; set; }
        public virtual DbSet<ViewConfirmMarshallItemPickTicket> ViewConfirmMarshallItemPickTicket { get; set; }
        public virtual DbSet<ViewConfirmMarshallpopup> ViewConfirmMarshallpopup { get; set; }
        public virtual DbSet<ViewConfirmShipmentFms> ViewConfirmShipmentFms { get; set; }
        public virtual DbSet<ViewCopyCheckPos> ViewCopyCheckPos { get; set; }
        public virtual DbSet<ViewDashboard> ViewDashboard { get; set; }
        public virtual DbSet<ViewDiscount> ViewDiscount { get; set; }
        public virtual DbSet<ViewDiscountType> ViewDiscountType { get; set; }
        public virtual DbSet<ViewGenTaskGi> ViewGenTaskGi { get; set; }
        public virtual DbSet<ViewGetIdPickingTool> ViewGetIdPickingTool { get; set; }
        public virtual DbSet<ViewGetIdPickingToolV2> ViewGetIdPickingToolV2 { get; set; }
        public virtual DbSet<ViewGetLocationEquipment> ViewGetLocationEquipment { get; set; }
        public virtual DbSet<ViewGetLocationWorkArea> ViewGetLocationWorkArea { get; set; }
        public virtual DbSet<ViewGetPlanGoodsReceiveItem> ViewGetPlanGoodsReceiveItem { get; set; }
        public virtual DbSet<ViewGetScanProductDetail> ViewGetScanProductDetail { get; set; }
        public virtual DbSet<ViewGetTagItem> ViewGetTagItem { get; set; }
        public virtual DbSet<ViewGetZoneLocation> ViewGetZoneLocation { get; set; }
        public virtual DbSet<ViewGiprocessStatus> ViewGiprocessStatus { get; set; }
        public virtual DbSet<ViewGitablelist> ViewGitablelist { get; set; }
        public virtual DbSet<ViewGitablelistV2> ViewGitablelistV2 { get; set; }
        public virtual DbSet<ViewGitablelistV3> ViewGitablelistV3 { get; set; }
        public virtual DbSet<ViewGoodsIssue> ViewGoodsIssue { get; set; }
        public virtual DbSet<ViewGoodsIssueGenTask> ViewGoodsIssueGenTask { get; set; }
        public virtual DbSet<ViewGoodsIssueGenTaskNoLock> ViewGoodsIssueGenTaskNoLock { get; set; }
        public virtual DbSet<ViewGoodsIssueGenTaskPickManual> ViewGoodsIssueGenTaskPickManual { get; set; }
        public virtual DbSet<ViewGoodsIssueItemLocation> ViewGoodsIssueItemLocation { get; set; }
        public virtual DbSet<ViewGoodsReceiveItemAllocate> ViewGoodsReceiveItemAllocate { get; set; }
        public virtual DbSet<ViewGoodsReceivePending> ViewGoodsReceivePending { get; set; }
        public virtual DbSet<ViewGrProcessStatus> ViewGrProcessStatus { get; set; }
        public virtual DbSet<ViewGrProcessStatusStock> ViewGrProcessStatusStock { get; set; }
        public virtual DbSet<ViewGrSuggest> ViewGrSuggest { get; set; }
        public virtual DbSet<ViewInquiryLocationDetails> ViewInquiryLocationDetails { get; set; }
        public virtual DbSet<ViewInquiryPutawaySuggestionLocation> ViewInquiryPutawaySuggestionLocation { get; set; }
        public virtual DbSet<ViewInquirySku> ViewInquirySku { get; set; }
        public virtual DbSet<ViewInquirySkuAllocatedBy> ViewInquirySkuAllocatedBy { get; set; }
        public virtual DbSet<ViewInquirySkuConversion> ViewInquirySkuConversion { get; set; }
        public virtual DbSet<ViewInquiryTask> ViewInquiryTask { get; set; }
        public virtual DbSet<ViewMarShallAfterGi> ViewMarShallAfterGi { get; set; }
        public virtual DbSet<ViewMarshalRelease> ViewMarshalRelease { get; set; }
        public virtual DbSet<ViewMarshallDetail> ViewMarshallDetail { get; set; }
        public virtual DbSet<ViewMsUser> ViewMsUser { get; set; }
        public virtual DbSet<ViewOrderPerformanceByRound> ViewOrderPerformanceByRound { get; set; }
        public virtual DbSet<ViewOrderPerformanceByRoute> ViewOrderPerformanceByRoute { get; set; }
        public virtual DbSet<ViewOverallPerformanceStatus> ViewOverallPerformanceStatus { get; set; }
        public virtual DbSet<ViewOverallPerformanceStatusExpress> ViewOverallPerformanceStatusExpress { get; set; }
        public virtual DbSet<ViewPickConfirm> ViewPickConfirm { get; set; }
        public virtual DbSet<ViewPickManual> ViewPickManual { get; set; }
        public virtual DbSet<ViewPickManualCheckWave> ViewPickManualCheckWave { get; set; }
        public virtual DbSet<ViewPickManualEquipmentItem> ViewPickManualEquipmentItem { get; set; }
        public virtual DbSet<ViewPickManualV2> ViewPickManualV2 { get; set; }
        public virtual DbSet<ViewPickManualV3> ViewPickManualV3 { get; set; }
        public virtual DbSet<ViewPickManualV4> ViewPickManualV4 { get; set; }
        public virtual DbSet<ViewPickManualWaveBinBalance> ViewPickManualWaveBinBalance { get; set; }
        public virtual DbSet<ViewPickShort> ViewPickShort { get; set; }
        public virtual DbSet<ViewPickingPerformanceByRound> ViewPickingPerformanceByRound { get; set; }
        public virtual DbSet<ViewPickingPerformanceByZone> ViewPickingPerformanceByZone { get; set; }
        public virtual DbSet<ViewPickingRoute> ViewPickingRoute { get; set; }
        public virtual DbSet<ViewPickingRouteOrder> ViewPickingRouteOrder { get; set; }
        public virtual DbSet<ViewPickingRouteOrderBak> ViewPickingRouteOrderBak { get; set; }
        public virtual DbSet<ViewPickingRouteOrderDetail> ViewPickingRouteOrderDetail { get; set; }
        public virtual DbSet<ViewPickingRouteOrderDetailBak> ViewPickingRouteOrderDetailBak { get; set; }
        public virtual DbSet<ViewPickingRouteOrderDetailSnap> ViewPickingRouteOrderDetailSnap { get; set; }
        public virtual DbSet<ViewPickingRouteOrderDetailStatus> ViewPickingRouteOrderDetailStatus { get; set; }
        public virtual DbSet<ViewPickingRouteOrderDetailStatusBak> ViewPickingRouteOrderDetailStatusBak { get; set; }
        public virtual DbSet<ViewPickingRouteOrderDetailStatusSnap> ViewPickingRouteOrderDetailStatusSnap { get; set; }
        public virtual DbSet<ViewPickingRouteOrderSnap> ViewPickingRouteOrderSnap { get; set; }
        public virtual DbSet<ViewPickingStatus> ViewPickingStatus { get; set; }
        public virtual DbSet<ViewPickingStatusBak> ViewPickingStatusBak { get; set; }
        public virtual DbSet<ViewPickingStatusSnap> ViewPickingStatusSnap { get; set; }
        public virtual DbSet<ViewPickingTool> ViewPickingTool { get; set; }
        public virtual DbSet<ViewPicktickketCarton> ViewPicktickketCarton { get; set; }
        public virtual DbSet<ViewPicktickketCartonPickManual> ViewPicktickketCartonPickManual { get; set; }
        public virtual DbSet<ViewPicktickketCartonV2> ViewPicktickketCartonV2 { get; set; }
        public virtual DbSet<ViewPlanCarton> ViewPlanCarton { get; set; }
        public virtual DbSet<ViewPlanGiautoPickConfirm> ViewPlanGiautoPickConfirm { get; set; }
        public virtual DbSet<ViewPlanGiautoPickConfirmForShipmentDispatch> ViewPlanGiautoPickConfirmForShipmentDispatch { get; set; }
        public virtual DbSet<ViewPlanGipickConfirm> ViewPlanGipickConfirm { get; set; }
        public virtual DbSet<ViewPlanGipopUpSearch> ViewPlanGipopUpSearch { get; set; }
        public virtual DbSet<ViewPlanGiprocessStatus> ViewPlanGiprocessStatus { get; set; }
        public virtual DbSet<ViewPlanGiprocessStatusV2> ViewPlanGiprocessStatusV2 { get; set; }
        public virtual DbSet<ViewPlanGoodsIssue> ViewPlanGoodsIssue { get; set; }
        public virtual DbSet<ViewPlanGoodsIssueAfterRunWave> ViewPlanGoodsIssueAfterRunWave { get; set; }
        public virtual DbSet<ViewPlanGoodsIssueCarton> ViewPlanGoodsIssueCarton { get; set; }
        public virtual DbSet<ViewPlanGoodsIssueItemInfo> ViewPlanGoodsIssueItemInfo { get; set; }
        public virtual DbSet<ViewPlanGoodsIssueItemPopup> ViewPlanGoodsIssueItemPopup { get; set; }
        public virtual DbSet<ViewPlanGoodsIssueProcessStatus> ViewPlanGoodsIssueProcessStatus { get; set; }
        public virtual DbSet<ViewPlanGoodsIssueReturnReceive> ViewPlanGoodsIssueReturnReceive { get; set; }
        public virtual DbSet<ViewPlanGoodsIssueReturnReceivePending> ViewPlanGoodsIssueReturnReceivePending { get; set; }
        public virtual DbSet<ViewPlanGoodsReceiveItem> ViewPlanGoodsReceiveItem { get; set; }
        public virtual DbSet<ViewPlanGrProcessStatus> ViewPlanGrProcessStatus { get; set; }
        public virtual DbSet<ViewPlanwave> ViewPlanwave { get; set; }
        public virtual DbSet<ViewPlanwavebyPlangi> ViewPlanwavebyPlangi { get; set; }
        public virtual DbSet<ViewPlanwavebyPlanginoLock> ViewPlanwavebyPlanginoLock { get; set; }
        public virtual DbSet<ViewPopupTask> ViewPopupTask { get; set; }
        public virtual DbSet<ViewPos> ViewPos { get; set; }
        public virtual DbSet<ViewPosdetail> ViewPosdetail { get; set; }
        public virtual DbSet<ViewPositem> ViewPositem { get; set; }
        public virtual DbSet<ViewPosshipmentDispatch> ViewPosshipmentDispatch { get; set; }
        public virtual DbSet<ViewPosshipmentDispatchBak> ViewPosshipmentDispatchBak { get; set; }
        public virtual DbSet<ViewPosshipmentDispatchV2> ViewPosshipmentDispatchV2 { get; set; }
        public virtual DbSet<ViewPosshippmentDispatchItem> ViewPosshippmentDispatchItem { get; set; }
        public virtual DbSet<ViewPosv2> ViewPosv2 { get; set; }
        public virtual DbSet<ViewPreparePrintCartonRf> ViewPreparePrintCartonRf { get; set; }
        public virtual DbSet<ViewPreparePrintCartonRfv2> ViewPreparePrintCartonRfv2 { get; set; }
        public virtual DbSet<ViewPrintCarton> ViewPrintCarton { get; set; }
        public virtual DbSet<ViewProductByBarcode> ViewProductByBarcode { get; set; }
        public virtual DbSet<ViewProductConversionBarcode> ViewProductConversionBarcode { get; set; }
        public virtual DbSet<ViewProductDetail> ViewProductDetail { get; set; }
        public virtual DbSet<ViewProductPopup> ViewProductPopup { get; set; }
        public virtual DbSet<ViewRelocation> ViewRelocation { get; set; }
        public virtual DbSet<ViewReportCartonLabel> ViewReportCartonLabel { get; set; }
        public virtual DbSet<ViewReportGoodsReceiveNote> ViewReportGoodsReceiveNote { get; set; }
        public virtual DbSet<ViewReportLoadManikest> ViewReportLoadManikest { get; set; }
        public virtual DbSet<ViewReportPickingSlip> ViewReportPickingSlip { get; set; }
        public virtual DbSet<ViewReturnReceive> ViewReturnReceive { get; set; }
        public virtual DbSet<ViewRunWave> ViewRunWave { get; set; }
        public virtual DbSet<ViewScanQa> ViewScanQa { get; set; }
        public virtual DbSet<ViewShipmentDispatchCancel> ViewShipmentDispatchCancel { get; set; }
        public virtual DbSet<ViewShippmentDispatch> ViewShippmentDispatch { get; set; }
        public virtual DbSet<ViewShippmentDispatchDetail> ViewShippmentDispatchDetail { get; set; }
        public virtual DbSet<ViewShippmentDispatchProduct> ViewShippmentDispatchProduct { get; set; }
        public virtual DbSet<ViewShippmentDispatchProductCancel> ViewShippmentDispatchProductCancel { get; set; }
        public virtual DbSet<ViewShippmentDispatchProductV2> ViewShippmentDispatchProductV2 { get; set; }
        public virtual DbSet<ViewShippmentDispatchTagOut> ViewShippmentDispatchTagOut { get; set; }
        public virtual DbSet<ViewStgOutptInvsnap> ViewStgOutptInvsnap { get; set; }
        public virtual DbSet<ViewSumQtyBarcodeLocation> ViewSumQtyBarcodeLocation { get; set; }
        public virtual DbSet<ViewSumQtyBinbalance> ViewSumQtyBinbalance { get; set; }
        public virtual DbSet<ViewSumQtyBinbalanceLpn> ViewSumQtyBinbalanceLpn { get; set; }
        public virtual DbSet<ViewSumQtyCarton> ViewSumQtyCarton { get; set; }
        public virtual DbSet<ViewSumQtyLocation> ViewSumQtyLocation { get; set; }
        public virtual DbSet<ViewSumQtyLpnNo> ViewSumQtyLpnNo { get; set; }
        public virtual DbSet<ViewSumTranferCarton> ViewSumTranferCarton { get; set; }
        public virtual DbSet<ViewTagOut> ViewTagOut { get; set; }
        public virtual DbSet<ViewTaskCycleCount> ViewTaskCycleCount { get; set; }
        public virtual DbSet<ViewTaskDetail> ViewTaskDetail { get; set; }
        public virtual DbSet<ViewTaskGroupLocationWorkArea> ViewTaskGroupLocationWorkArea { get; set; }
        public virtual DbSet<ViewTaskPickList> ViewTaskPickList { get; set; }
        public virtual DbSet<ViewTaskPickListDrop> ViewTaskPickListDrop { get; set; }
        public virtual DbSet<ViewTaskPickListDrop2> ViewTaskPickListDrop2 { get; set; }
        public virtual DbSet<ViewTaskPickListDrop2AutoTask> ViewTaskPickListDrop2AutoTask { get; set; }
        public virtual DbSet<ViewTaskPickListDropAutoTask> ViewTaskPickListDropAutoTask { get; set; }
        public virtual DbSet<ViewTaskPickListV1> ViewTaskPickListV1 { get; set; }
        public virtual DbSet<ViewTaskPickListV2> ViewTaskPickListV2 { get; set; }
        public virtual DbSet<ViewTaskPickShort> ViewTaskPickShort { get; set; }
        public virtual DbSet<ViewTaskPickShortV2> ViewTaskPickShortV2 { get; set; }
        public virtual DbSet<ViewTaskPicktickket> ViewTaskPicktickket { get; set; }
        public virtual DbSet<ViewTaskPicktickketPickManual> ViewTaskPicktickketPickManual { get; set; }
        public virtual DbSet<ViewTaskPicktickketV2> ViewTaskPicktickketV2 { get; set; }
        public virtual DbSet<ViewTranferCarton> ViewTranferCarton { get; set; }
        public virtual DbSet<ViewTranferCartonV2> ViewTranferCartonV2 { get; set; }
        public virtual DbSet<ViewTruckLoadCarton> ViewTruckLoadCarton { get; set; }
        public virtual DbSet<ViewUserTaskGroup> ViewUserTaskGroup { get; set; }
        public virtual DbSet<ViewWaveBinBalance> ViewWaveBinBalance { get; set; }
        public virtual DbSet<ViewWaveRule> ViewWaveRule { get; set; }
        public virtual DbSet<ViewWaveTemplate> ViewWaveTemplate { get; set; }
        public virtual DbSet<ViewZoneLocation> ViewZoneLocation { get; set; }
        public virtual DbSet<WmBinBalance> WmBinBalance { get; set; }
        public virtual DbSet<WmBinCard> WmBinCard { get; set; }
        public virtual DbSet<WmBinCardLock> WmBinCardLock { get; set; }
        public virtual DbSet<WmBinCardReserve> WmBinCardReserve { get; set; }
        public virtual DbSet<WmBinbalancebackup> WmBinbalancebackup { get; set; }
        public virtual DbSet<WmCycleCount> WmCycleCount { get; set; }
        public virtual DbSet<WmCycleCountDetail> WmCycleCountDetail { get; set; }
        public virtual DbSet<WmCycleCountItem> WmCycleCountItem { get; set; }
        public virtual DbSet<WmTag> WmTag { get; set; }
        public virtual DbSet<WmTagItem> WmTagItem { get; set; }
        public virtual DbSet<WmTagOut> WmTagOut { get; set; }
        public virtual DbSet<WmTagOutItem> WmTagOutItem { get; set; }
        public virtual DbSet<WmTagOutPick> WmTagOutPick { get; set; }
        public virtual DbSet<WmTaskCycleCount> WmTaskCycleCount { get; set; }
        public virtual DbSet<ZzLocation> ZzLocation { get; set; }
        public virtual DbSet<ZzXref> ZzXref { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer("Server=10.0.177.31\\CDSIMPUAT01;Initial Catalog = WMSDB_B2S;Trusted_Connection=True;Integrated Security=False;user id=cfrffmusr;password=ffmusr@cfr;");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<BackupViewPreparePrintCartonRf>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Backup_View_PreparePrintCartonRF");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.SuggestLocationName)
                    .HasColumnName("SuggestLocation_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");
            });

            modelBuilder.Entity<BaselineMsWorkarea>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("baseline_ms_workarea");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WorkAreaId)
                    .HasColumnName("WorkArea_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WorkAreaIndex).HasColumnName("WorkArea_Index");

                entity.Property(e => e.WorkAreaName)
                    .HasColumnName("WorkArea_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<BaselineMsZone>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("baseline_ms_Zone");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<BaselineMsZoneLocation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("baseline_ms_ZoneLocation");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneLocationId)
                    .HasColumnName("ZoneLocation_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneLocationIndex).HasColumnName("ZoneLocation_Index");
            });

            modelBuilder.Entity<BaselinePickSeq>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("baseline_pick_seq");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PickSeq).HasColumnName("Pick_Seq");
            });

            modelBuilder.Entity<BaselineSyRuleConditionField>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("baseline_sy_RuleConditionField");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ProcessIndex).HasColumnName("Process_Index");

                entity.Property(e => e.RuleConditionFieldIndex).HasColumnName("RuleConditionField_Index");

                entity.Property(e => e.RuleConditionFieldName)
                    .HasColumnName("RuleConditionField_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<BaselineSyRuleConditionOperation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("baseline_sy_RuleConditionOperation");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.RuleConditionFieldIndex).HasColumnName("RuleConditionField_Index");

                entity.Property(e => e.RuleConditionOperation).HasMaxLength(200);

                entity.Property(e => e.RuleConditionOperationIndex).HasColumnName("RuleConditionOperation_Index");

                entity.Property(e => e.RuleConditionOperationType).HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<BaselineSySuggestPutawayByProduct>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("baseline_sy_SuggestPutawayByProduct");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MaxStock)
                    .HasColumnName("Max_Stock")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.MinStock)
                    .HasColumnName("Min_Stock")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.SuggestPutawayByProductIndex).HasColumnName("SuggestPutawayByProduct_Index");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<BaselineSySuggestPutawayByZoneProduct>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("baseline_sy_SuggestPutawayByZoneProduct");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.SuggestPutawayByZoneProductIndex).HasColumnName("SuggestPutawayByZoneProduct_Index");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<Customer>(entity =>
            {
                entity.ToTable("CUSTOMER");

                entity.Property(e => e.CustomerId).ValueGeneratedNever();

                entity.Property(e => e.CustomerName).IsUnicode(false);
            });

            modelBuilder.Entity<Dashboard>(entity =>
            {
                entity.HasKey(e => e.RowIndex);

                entity.ToTable("__dashboard");

                entity.Property(e => e.DocDate).HasColumnType("date");

                entity.Property(e => e.DocZone)
                    .HasColumnName("Doc_ZONE")
                    .HasMaxLength(1000);

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(1000);

                entity.Property(e => e.OverallStatus)
                    .HasColumnName("Overall_Status")
                    .HasMaxLength(1000);

                entity.Property(e => e.OverallStatusCode)
                    .HasColumnName("Overall_StatusCode")
                    .HasMaxLength(1000);

                entity.Property(e => e.PickStatus)
                    .HasColumnName("Pick_Status")
                    .HasMaxLength(1000);

                entity.Property(e => e.PickStatusCode)
                    .HasColumnName("Pick_StatusCode")
                    .HasMaxLength(1000);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(1000);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(1000);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(1000);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(1000);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(1000);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(1000);

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(1000);
            });

            modelBuilder.Entity<Dashboard1>(entity =>
            {
                entity.HasKey(e => e.ObjectId);

                entity.ToTable("_dashboard");

                entity.Property(e => e.A)
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.B)
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.C)
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.Date).HasColumnType("date");

                entity.Property(e => e.F)
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.HasOne(d => d.PlanGoodsIssueIndexNavigation)
                    .WithMany(p => p.Dashboard1)
                    .HasForeignKey(d => d.PlanGoodsIssueIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__dashboard_im_PlanGoodsIssue");

                entity.HasOne(d => d.RoundIndexNavigation)
                    .WithMany(p => p.Dashboard1)
                    .HasForeignKey(d => d.RoundIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__dashboard_ms_Round");

                entity.HasOne(d => d.RouteIndexNavigation)
                    .WithMany(p => p.Dashboard1)
                    .HasForeignKey(d => d.RouteIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__dashboard_ms_Route");
            });

            modelBuilder.Entity<DashboardTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("__dashboard_temp");

                entity.Property(e => e.DocDate).HasMaxLength(1000);

                entity.Property(e => e.DocZone)
                    .HasColumnName("Doc_ZONE")
                    .HasMaxLength(1000);

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(1000);

                entity.Property(e => e.OverallStatus)
                    .HasColumnName("Overall_Status")
                    .HasMaxLength(1000);

                entity.Property(e => e.OverallStatusCode)
                    .HasColumnName("Overall_StatusCode")
                    .HasMaxLength(1000);

                entity.Property(e => e.PickStatus)
                    .HasColumnName("Pick_Status")
                    .HasMaxLength(1000);

                entity.Property(e => e.PickStatusCode)
                    .HasColumnName("Pick_StatusCode")
                    .HasMaxLength(1000);

                entity.Property(e => e.PlanGoodsIssueIndex)
                    .HasColumnName("PlanGoodsIssue_Index")
                    .HasMaxLength(1000);

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(1000);

                entity.Property(e => e.RoundIndex)
                    .HasColumnName("Round_Index")
                    .HasMaxLength(1000);

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(1000);

                entity.Property(e => e.RouteIndex)
                    .HasColumnName("Route_Index")
                    .HasMaxLength(1000);

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(1000);

                entity.Property(e => e.Seq).HasMaxLength(1000);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(1000);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(1000);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(1000);

                entity.Property(e => e.ZoneIndex)
                    .HasColumnName("Zone_Index")
                    .HasMaxLength(1000);

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(1000);
            });

            modelBuilder.Entity<Districts>(entity =>
            {
                entity.HasIndex(e => e.Code)
                    .HasName("UX_Districts_Code")
                    .IsUnique();

                entity.HasIndex(e => e.ProvinceId);

                entity.Property(e => e.NameInEnglish)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.NameInThai)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.HasOne(d => d.Province)
                    .WithMany(p => p.Districts)
                    .HasForeignKey(d => d.ProvinceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Districts_Provinces");
            });

            modelBuilder.Entity<ExwmsConfig>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("EXWMS_CONFIG");

                entity.Property(e => e.No).HasColumnName("no");

                entity.Property(e => e.ConfigGroupKey)
                    .HasColumnName("config_group_key")
                    .HasMaxLength(50);

                entity.Property(e => e.ConfigIssue)
                    .HasColumnName("config_issue")
                    .HasMaxLength(50);

                entity.Property(e => e.ConfigKey)
                    .HasColumnName("config_key")
                    .HasMaxLength(50);

                entity.Property(e => e.ConfigValue)
                    .HasColumnName("config_value")
                    .HasMaxLength(250);

                entity.Property(e => e.ConfigValueUdf1)
                    .HasColumnName("config_value_udf1")
                    .HasMaxLength(250);

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.IsEnabled).HasColumnName("is_enabled");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasMaxLength(500);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<ExwmsGradeMoving>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("exwms_grade_moving");

                entity.Property(e => e.BatchIdIn)
                    .HasColumnName("batch_id_in")
                    .HasMaxLength(20);

                entity.Property(e => e.BatchIdOut)
                    .HasColumnName("batch_id_out")
                    .HasMaxLength(20);

                entity.Property(e => e.BinbalanceIndex).HasColumnName("binbalance_index");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("create_by")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentStatus)
                    .HasColumnName("document_status")
                    .HasMaxLength(10);

                entity.Property(e => e.LocationId)
                    .HasColumnName("location_id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("location_index");

                entity.Property(e => e.LocationTempId)
                    .HasColumnName("location_temp_id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationTempIndex).HasColumnName("location_temp_index");

                entity.Property(e => e.ProductId)
                    .HasColumnName("product_id")
                    .HasMaxLength(20);

                entity.Property(e => e.ProductName)
                    .HasColumnName("product_name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyMove)
                    .HasColumnName("qty_move")
                    .HasColumnType("numeric(18, 3)");

                entity.Property(e => e.StatusCode)
                    .HasColumnName("status_code")
                    .HasMaxLength(10);

                entity.Property(e => e.StatusDesc)
                    .HasColumnName("status_desc")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusIndex).HasColumnName("status_index");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("update_by")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("update_date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<ExwmsGradeMovingLog>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("exwms_grade_moving_log");

                entity.Property(e => e.No).HasColumnName("no");

                entity.Property(e => e.BatchNo)
                    .HasColumnName("batch_no")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("create_by")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentStatus)
                    .HasColumnName("document_status")
                    .HasMaxLength(50);

                entity.Property(e => e.GradeMovingNo).HasColumnName("grade_moving_no");

                entity.Property(e => e.LogType)
                    .HasColumnName("log_type")
                    .HasMaxLength(50);

                entity.Property(e => e.RequestData)
                    .HasColumnName("Request_data")
                    .HasColumnType("text");

                entity.Property(e => e.ResponseData)
                    .HasColumnName("Response_data")
                    .HasColumnType("text");
            });

            modelBuilder.Entity<ExwmsGradeMovingRequest>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("exwms_grade_moving_request");

                entity.Property(e => e.No).HasColumnName("no");

                entity.Property(e => e.ActualRequestQty)
                    .HasColumnName("actual_request_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.BatchIdIn)
                    .HasColumnName("batch_id_in")
                    .HasMaxLength(20);

                entity.Property(e => e.BatchIdOut)
                    .HasColumnName("batch_id_out")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentStatus)
                    .HasColumnName("document_status")
                    .HasMaxLength(20);

                entity.Property(e => e.GradeFrom)
                    .HasColumnName("grade_from")
                    .HasMaxLength(50);

                entity.Property(e => e.GradeTo)
                    .HasColumnName("grade_to")
                    .HasMaxLength(50);

                entity.Property(e => e.MoveType)
                    .HasColumnName("move_type")
                    .HasMaxLength(50);

                entity.Property(e => e.MovingRequestQty)
                    .HasColumnName("moving_request_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.OrderType)
                    .HasColumnName("order_type")
                    .HasMaxLength(500);

                entity.Property(e => e.OrderTypeAgainst)
                    .HasColumnName("order_type_against")
                    .HasMaxLength(500);

                entity.Property(e => e.ProductId)
                    .HasColumnName("product_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("product_name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusCode)
                    .HasColumnName("status_code")
                    .HasMaxLength(20);

                entity.Property(e => e.StatusDesc)
                    .HasColumnName("status_desc")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Zone)
                    .HasColumnName("zone")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ExwmsImportGradeMovingLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("exwms_import_grade_moving_log");

                entity.Property(e => e.BatchId)
                    .HasColumnName("batch_id")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("create_by")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentStatus)
                    .HasColumnName("document_status")
                    .HasMaxLength(10);

                entity.Property(e => e.FromAvailQty)
                    .HasColumnName("from_avail_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.FromOnOrderQty)
                    .HasColumnName("from_on_order_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.FromTotalAvail)
                    .HasColumnName("from_total_avail")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.GradeFrom)
                    .HasColumnName("grade_from")
                    .HasMaxLength(20);

                entity.Property(e => e.GradeTo)
                    .HasColumnName("grade_to")
                    .HasMaxLength(20);

                entity.Property(e => e.MoveQty)
                    .HasColumnName("move_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.No)
                    .HasColumnName("no")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ProductId)
                    .HasColumnName("product_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("product_name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusCode)
                    .HasColumnName("status_code")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusDesc)
                    .HasColumnName("status_desc")
                    .HasMaxLength(200);

                entity.Property(e => e.ToAvailQty)
                    .HasColumnName("to_avail_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.ToOnOrderQty)
                    .HasColumnName("to_on_order_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.ToTotalAvail)
                    .HasColumnName("to_total_avail")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("update_by")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("update_date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<ExwmsImportGradeMovingTemp>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("exwms_import_grade_moving_temp");

                entity.Property(e => e.No).HasColumnName("no");

                entity.Property(e => e.BatchId)
                    .HasColumnName("batch_id")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("create_by")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentStatus)
                    .HasColumnName("document_status")
                    .HasMaxLength(10);

                entity.Property(e => e.FromAvailQty)
                    .HasColumnName("from_avail_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.FromOnOrderQty)
                    .HasColumnName("from_on_order_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.FromTotalAvail)
                    .HasColumnName("from_total_avail")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.GradeFrom)
                    .HasColumnName("grade_from")
                    .HasMaxLength(20);

                entity.Property(e => e.GradeTo)
                    .HasColumnName("grade_to")
                    .HasMaxLength(20);

                entity.Property(e => e.MoveQty)
                    .HasColumnName("move_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.ProductId)
                    .HasColumnName("product_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("product_name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusCode)
                    .HasColumnName("status_code")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusDesc)
                    .HasColumnName("status_desc")
                    .HasMaxLength(200);

                entity.Property(e => e.ToAvailQty)
                    .HasColumnName("to_avail_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.ToOnOrderQty)
                    .HasColumnName("to_on_order_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.ToTotalAvail)
                    .HasColumnName("to_total_avail")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("update_by")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("update_date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<ExwmsImportmonitorLog>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("exwms_importmonitor_log");

                entity.Property(e => e.No).HasColumnName("no");

                entity.Property(e => e.BatchId)
                    .HasColumnName("batch_id")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("create_by")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateByRaw)
                    .HasColumnName("create_by_raw")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateDateRaw)
                    .HasColumnName("create_date_raw")
                    .HasColumnType("datetime");

                entity.Property(e => e.ErrorCode)
                    .HasColumnName("error_code")
                    .HasMaxLength(20);

                entity.Property(e => e.ErrorDesc)
                    .HasColumnName("error_desc")
                    .HasMaxLength(50);

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasMaxLength(50);

                entity.Property(e => e.IsOver)
                    .HasColumnName("is_over")
                    .HasMaxLength(10);

                entity.Property(e => e.Line1)
                    .HasColumnName("line1")
                    .HasMaxLength(20);

                entity.Property(e => e.Line2)
                    .HasColumnName("line2")
                    .HasMaxLength(20);

                entity.Property(e => e.LocationId)
                    .HasColumnName("location_id")
                    .HasMaxLength(50);

                entity.Property(e => e.OperCode)
                    .HasColumnName("oper_code")
                    .HasMaxLength(20);

                entity.Property(e => e.PutawayType)
                    .HasColumnName("putaway_type")
                    .HasMaxLength(20);

                entity.Property(e => e.Row)
                    .HasColumnName("row")
                    .HasMaxLength(20);

                entity.Property(e => e.RowPrefix)
                    .HasColumnName("row_prefix")
                    .HasMaxLength(20);

                entity.Property(e => e.StatusCode)
                    .HasColumnName("status_code")
                    .HasMaxLength(20);

                entity.Property(e => e.Zone)
                    .HasColumnName("zone")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<ExwmsImportmonitorTemp>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("exwms_importmonitor_temp");

                entity.Property(e => e.No)
                    .HasColumnName("no")
                    .ValueGeneratedNever();

                entity.Property(e => e.BatchId)
                    .HasColumnName("batch_id")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("create_by")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateByRaw)
                    .HasColumnName("create_by_raw")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateDateRaw)
                    .HasColumnName("create_date_raw")
                    .HasColumnType("datetime");

                entity.Property(e => e.ErrorCode)
                    .HasColumnName("error_code")
                    .HasMaxLength(20);

                entity.Property(e => e.ErrorDesc)
                    .HasColumnName("error_desc")
                    .HasMaxLength(50);

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasMaxLength(50);

                entity.Property(e => e.IsOver)
                    .HasColumnName("is_over")
                    .HasMaxLength(10);

                entity.Property(e => e.Line1)
                    .HasColumnName("line1")
                    .HasMaxLength(20);

                entity.Property(e => e.Line2)
                    .HasColumnName("line2")
                    .HasMaxLength(20);

                entity.Property(e => e.LocationId)
                    .HasColumnName("location_id")
                    .HasMaxLength(50);

                entity.Property(e => e.OperCode)
                    .HasColumnName("oper_code")
                    .HasMaxLength(20);

                entity.Property(e => e.PutawayType)
                    .HasColumnName("putaway_type")
                    .HasMaxLength(20);

                entity.Property(e => e.Row)
                    .HasColumnName("row")
                    .HasMaxLength(20);

                entity.Property(e => e.RowPrefix)
                    .HasColumnName("row_prefix")
                    .HasMaxLength(20);

                entity.Property(e => e.StatusCode)
                    .HasColumnName("status_code")
                    .HasMaxLength(20);

                entity.Property(e => e.Zone)
                    .HasColumnName("zone")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<ExwmsLogMinimumStock>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("exwms_log_minimum_stock");

                entity.Property(e => e.No).HasColumnName("no");

                entity.Property(e => e.AvailDestinationQty)
                    .HasColumnName("avail_destination_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.AvailQty)
                    .HasColumnName("avail_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.BatchId)
                    .HasColumnName("batch_id")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GradeFrom)
                    .HasColumnName("grade_from")
                    .HasMaxLength(100);

                entity.Property(e => e.GradeTo)
                    .HasColumnName("grade_to")
                    .HasMaxLength(100);

                entity.Property(e => e.MinimumQty)
                    .HasColumnName("minimum_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.MovingRequestQty)
                    .HasColumnName("moving_request_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.OnOrderDestinationQty)
                    .HasColumnName("on_order_destination_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.OnOrderQty)
                    .HasColumnName("on_order_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.OrderType)
                    .HasColumnName("order_type")
                    .HasMaxLength(500);

                entity.Property(e => e.OrderTypeAgainst)
                    .HasColumnName("order_type_against")
                    .HasMaxLength(500);

                entity.Property(e => e.ProductId)
                    .HasColumnName("product_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("product_name")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Zone)
                    .HasColumnName("zone")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ExwmsLogMoveGradeRequest>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("exwms_log_move_grade_request");

                entity.Property(e => e.No).HasColumnName("no");

                entity.Property(e => e.ActualRequestQty)
                    .HasColumnName("actual_request_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.BatchIdIn)
                    .HasColumnName("batch_id_in")
                    .HasMaxLength(20);

                entity.Property(e => e.BatchIdOut)
                    .HasColumnName("batch_id_out")
                    .HasMaxLength(20);

                entity.Property(e => e.BinbalanceIndex).HasColumnName("binbalance_index");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentStatus)
                    .HasColumnName("document_status")
                    .HasMaxLength(20);

                entity.Property(e => e.GradeFrom)
                    .HasColumnName("grade_from")
                    .HasMaxLength(50);

                entity.Property(e => e.GradeTo)
                    .HasColumnName("grade_to")
                    .HasMaxLength(50);

                entity.Property(e => e.MoveType)
                    .HasColumnName("move_type")
                    .HasMaxLength(50);

                entity.Property(e => e.MovingRequestQty)
                    .HasColumnName("moving_request_qty")
                    .HasColumnType("numeric(15, 3)");

                entity.Property(e => e.OrderType)
                    .HasColumnName("order_type")
                    .HasMaxLength(500);

                entity.Property(e => e.OrderTypeAgainst)
                    .HasColumnName("order_type_against")
                    .HasMaxLength(500);

                entity.Property(e => e.ProductId)
                    .HasColumnName("product_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("product_name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusCode)
                    .HasColumnName("status_code")
                    .HasMaxLength(20);

                entity.Property(e => e.StatusDesc)
                    .HasColumnName("status_desc")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Zone)
                    .HasColumnName("zone")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ExwmsMonitorMaster>(entity =>
            {
                entity.HasKey(e => e.MonitorId)
                    .HasName("PK_exwms_monitor_master_1");

                entity.ToTable("exwms_monitor_master");

                entity.HasIndex(e => new { e.RefPutawayType, e.Row })
                    .HasName("IX_unique_puttype_row")
                    .IsUnique();

                entity.Property(e => e.MonitorId)
                    .HasColumnName("monitor_id")
                    .HasMaxLength(50);

                entity.Property(e => e.BaseStationId)
                    .HasColumnName("base_station_id")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("create_by")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.RefLocationId)
                    .HasColumnName("ref_location_id")
                    .HasMaxLength(20);

                entity.Property(e => e.RefPutawayType)
                    .IsRequired()
                    .HasColumnName("ref_putaway_type")
                    .HasMaxLength(20);

                entity.Property(e => e.RefStoreId)
                    .HasColumnName("ref_store_id")
                    .HasMaxLength(20);

                entity.Property(e => e.Row)
                    .HasColumnName("row")
                    .HasMaxLength(10);

                entity.Property(e => e.RowPrefix)
                    .HasColumnName("row_prefix")
                    .HasMaxLength(10);

                entity.Property(e => e.StationId)
                    .HasColumnName("station_id")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("udf_1")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("update_by")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("update_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Value1)
                    .HasColumnName("value_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Value2)
                    .HasColumnName("value_2")
                    .HasMaxLength(50);

                entity.HasOne(d => d.RefLocation)
                    .WithMany(p => p.ExwmsMonitorMaster)
                    .HasForeignKey(d => d.RefLocationId)
                    .HasConstraintName("FK_exwms_monitor_master_onwms_store_staging");

                entity.HasOne(d => d.Station)
                    .WithMany(p => p.ExwmsMonitorMaster)
                    .HasForeignKey(d => d.StationId)
                    .HasConstraintName("FK_exwms_monitor_master_onwms_station_master");
            });

            modelBuilder.Entity<ExwmsRowMapping>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("exwms_row_mapping");

                entity.Property(e => e.No).HasColumnName("no");

                entity.Property(e => e.Aisle).HasMaxLength(10);

                entity.Property(e => e.Row).HasMaxLength(10);
            });

            modelBuilder.Entity<GenIndex>(entity =>
            {
                entity.HasKey(e => e.Index);

                entity.ToTable("genIndex");

                entity.Property(e => e.Index)
                    .HasColumnName("_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.Name)
                    .HasColumnName("_Name")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<GoodsReceiveItemTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GoodsReceiveItem_temp");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentStatus)
                    .HasColumnName("Document_Status")
                    .HasMaxLength(255);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveDockDoor)
                    .HasColumnName("GoodsReceive_DockDoor")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveRemark)
                    .HasColumnName("GoodsReceive_Remark")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.LineNum).HasMaxLength(255);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PalletIndex).HasColumnName("Pallet_Index");

                entity.Property(e => e.Price).HasMaxLength(255);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(255);

                entity.Property(e => e.Qty).HasMaxLength(255);

                entity.Property(e => e.QtyPlan).HasMaxLength(255);

                entity.Property(e => e.Ratio).HasMaxLength(255);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(255);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(255);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TotalQty).HasMaxLength(255);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(255);

                entity.Property(e => e.UnitHeight).HasMaxLength(255);

                entity.Property(e => e.UnitLength).HasMaxLength(255);

                entity.Property(e => e.UnitPrice).HasMaxLength(255);

                entity.Property(e => e.UnitVolume).HasMaxLength(255);

                entity.Property(e => e.UnitWeight).HasMaxLength(255);

                entity.Property(e => e.UnitWidth).HasMaxLength(255);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasMaxLength(255);

                entity.Property(e => e.Weight).HasMaxLength(255);
            });

            modelBuilder.Entity<ImCallCenter>(entity =>
            {
                entity.HasKey(e => e.CallCenterIndex);

                entity.ToTable("im_CallCenter");

                entity.Property(e => e.CallCenterIndex)
                    .HasColumnName("CallCenter_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CallCenterDate)
                    .HasColumnName("CallCenter_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CallCenterNo)
                    .IsRequired()
                    .HasColumnName("CallCenter_No")
                    .HasMaxLength(50);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PutawayStatus).HasColumnName("Putaway_Status");

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(200);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ImCallCenterItem>(entity =>
            {
                entity.HasKey(e => e.CallCenterItemIndex);

                entity.ToTable("im_CallCenterItem");

                entity.HasIndex(e => e.PlanGoodsIssueIndex);

                entity.HasIndex(e => e.PlanGoodsIssueItemIndex);

                entity.HasIndex(e => e.RefDocumentIndex);

                entity.HasIndex(e => e.RefDocumentItemIndex);

                entity.HasIndex(e => new { e.QtyPlan, e.Qty, e.TotalQty, e.RefDocumentItemIndex, e.PlanGoodsIssueIndex, e.PlanGoodsIssueItemIndex, e.CallCenterIndex })
                    .HasName("im_CallCenterItem_index_1");

                entity.Property(e => e.CallCenterItemIndex)
                    .HasColumnName("CallCenterItem_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CallCenterIndex).HasColumnName("CallCenter_Index");

                entity.Property(e => e.CallCenterRemark)
                    .HasColumnName("CallCenter_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MarshalQty)
                    .HasColumnName("Marshal_Qty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.MarshalRatio)
                    .HasColumnName("Marshal_Ratio")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.MarshalTotalQty)
                    .HasColumnName("Marshal_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ImConfirmMarshall>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("im_ConfirmMarshall");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ConfirmMarshallDate)
                    .HasColumnName("ConfirmMarshall_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ConfirmMarshallIndex).HasColumnName("ConfirmMarshall_Index");

                entity.Property(e => e.ConfirmMarshallNo)
                    .IsRequired()
                    .HasColumnName("ConfirmMarshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PutawayStatus).HasColumnName("Putaway_Status");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ImConfirmMarshallItem>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("im_ConfirmMarshallItem");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ConfirmMarshallIndex).HasColumnName("ConfirmMarshall_Index");

                entity.Property(e => e.ConfirmMarshallItemIndex).HasColumnName("ConfirmMarshallItem_Index");

                entity.Property(e => e.ConfirmMarshallRemark)
                    .HasColumnName("ConfirmMarshall_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.PutToQty)
                    .HasColumnName("PutTo_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ImDelivery>(entity =>
            {
                entity.HasKey(e => e.DeliveryIndex);

                entity.ToTable("im_Delivery");

                entity.Property(e => e.DeliveryIndex)
                    .HasColumnName("Delivery_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.DeliveryAmount)
                    .HasColumnName("Delivery_Amount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.DeliveryBarcode)
                    .HasColumnName("Delivery_Barcode")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");
            });

            modelBuilder.Entity<ImDiscounts>(entity =>
            {
                entity.HasKey(e => e.DiscountsIndex);

                entity.ToTable("im_Discounts");

                entity.Property(e => e.DiscountsIndex)
                    .HasColumnName("Discounts_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.DiscountsAmount)
                    .HasColumnName("Discounts_Amount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.DiscountsBarcode)
                    .HasColumnName("Discounts_Barcode")
                    .HasMaxLength(50);

                entity.Property(e => e.DiscountsType)
                    .HasColumnName("Discounts_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");
            });

            modelBuilder.Entity<ImGoodsIssue>(entity =>
            {
                entity.HasKey(e => e.GoodsIssueIndex);

                entity.ToTable("im_GoodsIssue");

                entity.HasIndex(e => e.CreateDate);

                entity.HasIndex(e => e.DocumentStatus);

                entity.HasIndex(e => e.GoodsIssueDate);

                entity.HasIndex(e => e.GoodsIssueNo);

                entity.Property(e => e.GoodsIssueIndex)
                    .HasColumnName("GoodsIssue_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CancelStatus).HasColumnName("Cancel_Status");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CustomInterfaceFlag1)
                    .HasColumnName("Custom_Interface_Flag1")
                    .HasMaxLength(20);

                entity.Property(e => e.CustomInterfaceFlag2)
                    .HasColumnName("Custom_Interface_Flag2")
                    .HasMaxLength(20);

                entity.Property(e => e.CustomInterfaceFlag3)
                    .HasColumnName("Custom_Interface_Flag3")
                    .HasMaxLength(20);

                entity.Property(e => e.CustomInterfaceFlag4)
                    .HasColumnName("Custom_Interface_Flag4")
                    .HasMaxLength(20);

                entity.Property(e => e.CustomInterfaceFlag5)
                    .HasColumnName("Custom_Interface_Flag5")
                    .HasMaxLength(20);

                entity.Property(e => e.DocumentPriorityStatus)
                    .HasColumnName("DocumentPriority_Status")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueDate)
                    .HasColumnName("GoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.RunWaveStatus).HasColumnName("RunWave_Status");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WaveIndex).HasColumnName("Wave_Index");

                entity.HasOne(d => d.DocumentTypeIndexNavigation)
                    .WithMany(p => p.ImGoodsIssue)
                    .HasForeignKey(d => d.DocumentTypeIndex)
                    .HasConstraintName("FK_im_GoodsIssue_ms_DocumentType");

                entity.HasOne(d => d.OwnerIndexNavigation)
                    .WithMany(p => p.ImGoodsIssue)
                    .HasForeignKey(d => d.OwnerIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_GoodsIssue_ms_Owner");
            });

            modelBuilder.Entity<ImGoodsIssueItem>(entity =>
            {
                entity.HasKey(e => e.GoodsIssueItemIndex);

                entity.ToTable("im_GoodsIssueItem");

                entity.HasIndex(e => e.GoodsIssueIndex);

                entity.Property(e => e.GoodsIssueItemIndex)
                    .HasColumnName("GoodsIssueItem_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CancelStatus).HasColumnName("Cancel_Status");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");

                entity.HasOne(d => d.GoodsIssueIndexNavigation)
                    .WithMany(p => p.ImGoodsIssueItem)
                    .HasForeignKey(d => d.GoodsIssueIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_GoodsIssueItem_im_GoodsIssue");

                entity.HasOne(d => d.ItemStatusIndexNavigation)
                    .WithMany(p => p.ImGoodsIssueItem)
                    .HasForeignKey(d => d.ItemStatusIndex)
                    .HasConstraintName("FK_im_GoodsIssueItem_ms_ItemStatus");

                entity.HasOne(d => d.ProductConversionIndexNavigation)
                    .WithMany(p => p.ImGoodsIssueItem)
                    .HasForeignKey(d => d.ProductConversionIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_GoodsIssueItem_ms_ProductConversion");

                entity.HasOne(d => d.ProductIndexNavigation)
                    .WithMany(p => p.ImGoodsIssueItem)
                    .HasForeignKey(d => d.ProductIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_GoodsIssueItem_ms_Product");
            });

            modelBuilder.Entity<ImGoodsIssueItemLocation>(entity =>
            {
                entity.HasKey(e => e.GoodsIssueItemLocationIndex);

                entity.ToTable("im_GoodsIssueItemLocation");

                entity.HasIndex(e => e.DocumentStatus);

                entity.HasIndex(e => e.GoodsIssueIndex);

                entity.HasIndex(e => e.GoodsIssueItemIndex);

                entity.HasIndex(e => e.LocationIndex);

                entity.HasIndex(e => e.ProductIndex);

                entity.HasIndex(e => e.RefDocumentIndex);

                entity.HasIndex(e => e.RefDocumentItemIndex);

                entity.HasIndex(e => new { e.GoodsIssueIndex, e.RefDocumentItemIndex, e.DocumentStatus })
                    .HasName("im_GoodsIssueItemLocation_index_1");

                entity.Property(e => e.GoodsIssueItemLocationIndex)
                    .HasColumnName("GoodsIssueItemLocation_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.BinbalanceIndex).HasColumnName("binbalance_index");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CancelStatus).HasColumnName("Cancel_Status");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemIndex).HasColumnName("GoodsIssueItem_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MashallQty)
                    .HasColumnName("Mashall_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.MashallStatus).HasColumnName("Mashall_Status");

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PickingBy)
                    .HasColumnName("Picking_By")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingDate)
                    .HasColumnName("Picking_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PickingProductConversionIndex).HasColumnName("Picking_ProductConversion_Index");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingRef1)
                    .HasColumnName("Picking_Ref1")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingRef2)
                    .HasColumnName("Picking_Ref2")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.RuleId)
                    .HasColumnName("Rule_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ImGoodsIssueWaveAllocation>(entity =>
            {
                entity.HasKey(e => new { e.OwnerId, e.GoodsIssueNo, e.PlangoodsissueNo });

                entity.ToTable("im_GoodsIssueWaveAllocation");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.GoodsIssueNo)
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(20);

                entity.Property(e => e.PlangoodsissueNo)
                    .HasColumnName("Plangoodsissue_no")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentStatus)
                    .HasColumnName("Document_Status")
                    .HasMaxLength(20);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(20);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<ImGoodsReceive>(entity =>
            {
                entity.HasKey(e => e.GoodsReceiveIndex);

                entity.ToTable("im_GoodsReceive");

                entity.Property(e => e.GoodsReceiveIndex)
                    .HasColumnName("GoodsReceive_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ContainerTypeId)
                    .HasColumnName("ContainerType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ContainerTypeIndex).HasColumnName("ContainerType_Index");

                entity.Property(e => e.ContainerTypeName)
                    .HasColumnName("ContainerType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CustomInterfaceFlag1)
                    .HasColumnName("custom_interface_flag1")
                    .HasMaxLength(20);

                entity.Property(e => e.CustomInterfaceFlag2)
                    .HasColumnName("custom_interface_flag2")
                    .HasMaxLength(1);

                entity.Property(e => e.DockDoorId)
                    .HasColumnName("DockDoor_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DockDoorIndex).HasColumnName("DockDoor_Index");

                entity.Property(e => e.DockDoorName)
                    .HasColumnName("DockDoor_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentPriorityStatus)
                    .HasColumnName("DocumentPriority_Status")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsReceiveDate)
                    .HasColumnName("GoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveNo)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PutawayStatus).HasColumnName("Putaway_Status");

                entity.Property(e => e.ReasonCodeBy)
                    .HasColumnName("ReasonCode_By")
                    .HasMaxLength(200);

                entity.Property(e => e.ReasonCodeDate)
                    .HasColumnName("ReasonCode_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.VehicleTypeId)
                    .HasColumnName("VehicleType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.VehicleTypeIndex).HasColumnName("VehicleType_Index");

                entity.Property(e => e.VehicleTypeName)
                    .HasColumnName("VehicleType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);

                entity.HasOne(d => d.DocumentTypeIndexNavigation)
                    .WithMany(p => p.ImGoodsReceive)
                    .HasForeignKey(d => d.DocumentTypeIndex)
                    .HasConstraintName("FK_im_GoodsReceive_ms_DocumentType");

                entity.HasOne(d => d.OwnerIndexNavigation)
                    .WithMany(p => p.ImGoodsReceive)
                    .HasForeignKey(d => d.OwnerIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_GoodsReceive_ms_Owner");

                entity.HasOne(d => d.WarehouseIndexNavigation)
                    .WithMany(p => p.ImGoodsReceive)
                    .HasForeignKey(d => d.WarehouseIndex)
                    .HasConstraintName("FK_im_GoodsReceive_ms_Warehouse");
            });

            modelBuilder.Entity<ImGoodsReceiveItem>(entity =>
            {
                entity.HasKey(e => e.GoodsReceiveItemIndex);

                entity.ToTable("im_GoodsReceiveItem");

                entity.Property(e => e.GoodsReceiveItemIndex)
                    .HasColumnName("GoodsReceiveItem_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveDockDoor)
                    .HasColumnName("GoodsReceive_DockDoor")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveRemark)
                    .HasColumnName("GoodsReceive_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PalletIndex).HasColumnName("Pallet_Index");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(50);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");

                entity.HasOne(d => d.GoodsReceiveIndexNavigation)
                    .WithMany(p => p.ImGoodsReceiveItem)
                    .HasForeignKey(d => d.GoodsReceiveIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_GoodsReceiveItem_im_GoodsReceive");

                entity.HasOne(d => d.ItemStatusIndexNavigation)
                    .WithMany(p => p.ImGoodsReceiveItem)
                    .HasForeignKey(d => d.ItemStatusIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_GoodsReceiveItem_ms_ItemStatus");

                entity.HasOne(d => d.ProductConversionIndexNavigation)
                    .WithMany(p => p.ImGoodsReceiveItem)
                    .HasForeignKey(d => d.ProductConversionIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_GoodsReceiveItem_ms_ProductConversion");

                entity.HasOne(d => d.ProductIndexNavigation)
                    .WithMany(p => p.ImGoodsReceiveItem)
                    .HasForeignKey(d => d.ProductIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_GoodsReceiveItem_ms_Product");
            });

            modelBuilder.Entity<ImGoodsReceiveItemLocation>(entity =>
            {
                entity.HasKey(e => e.GoodsReceiveItemLocationIndex);

                entity.ToTable("im_GoodsReceiveItemLocation");

                entity.Property(e => e.GoodsReceiveItemLocationIndex)
                    .HasColumnName("GoodsReceiveItemLocation_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.PutawayBy)
                    .HasColumnName("Putaway_By")
                    .HasMaxLength(200);

                entity.Property(e => e.PutawayDate)
                    .HasColumnName("Putaway_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PutawayStatus).HasColumnName("Putaway_Status");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.SuggestLocationIndex).HasColumnName("Suggest_Location_Index");

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");

                entity.HasOne(d => d.GoodsReceiveItemIndexNavigation)
                    .WithMany(p => p.ImGoodsReceiveItemLocation)
                    .HasForeignKey(d => d.GoodsReceiveItemIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_GoodsReceiveItemLocation_im_GoodsReceiveItem");
            });

            modelBuilder.Entity<ImGoodsTransfer>(entity =>
            {
                entity.HasKey(e => e.GoodsTransferIndex);

                entity.ToTable("im_GoodsTransfer");

                entity.Property(e => e.GoodsTransferIndex)
                    .HasColumnName("GoodsTransfer_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentPriorityStatus)
                    .HasColumnName("DocumentPriority_Status")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.GoodsTransferDate)
                    .HasColumnName("GoodsTransfer_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsTransferNo)
                    .IsRequired()
                    .HasColumnName("GoodsTransfer_No")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.DocumentTypeIndexNavigation)
                    .WithMany(p => p.ImGoodsTransfer)
                    .HasForeignKey(d => d.DocumentTypeIndex)
                    .HasConstraintName("FK_im_GoodsTransfer_ms_DocumentType");

                entity.HasOne(d => d.OwnerIndexNavigation)
                    .WithMany(p => p.ImGoodsTransfer)
                    .HasForeignKey(d => d.OwnerIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_GoodsTransfer_ms_Owner");
            });

            modelBuilder.Entity<ImGoodsTransferItem>(entity =>
            {
                entity.HasKey(e => e.GoodsTransferItemIndex);

                entity.ToTable("im_GoodsTransferItem");

                entity.Property(e => e.GoodsTransferItemIndex)
                    .HasColumnName("GoodsTransferItem_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsReceiveExpDate)
                    .HasColumnName("GoodsReceive_EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveExpDateTo)
                    .HasColumnName("GoodsReceive_EXP_Date_To")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveItemLocationIndex).HasColumnName("GoodsReceiveItemLocation_Index");

                entity.Property(e => e.GoodsTransferIndex).HasColumnName("GoodsTransfer_Index");

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusIndexTo).HasColumnName("ItemStatus_Index_To");

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationIndexTo).HasColumnName("Location_Index_To");

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerIndexTo).HasColumnName("Owner_Index_To");

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductIndexTo).HasColumnName("Product_Index_To");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductLotTo)
                    .HasColumnName("Product_Lot_To")
                    .HasMaxLength(50);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagIndexTo).HasColumnName("Tag_Index_To");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");

                entity.HasOne(d => d.GoodsTransferIndexNavigation)
                    .WithMany(p => p.ImGoodsTransferItem)
                    .HasForeignKey(d => d.GoodsTransferIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_GoodsTransferItem_im_GoodsTransfer");

                entity.HasOne(d => d.ItemStatusIndexNavigation)
                    .WithMany(p => p.ImGoodsTransferItem)
                    .HasForeignKey(d => d.ItemStatusIndex)
                    .HasConstraintName("FK_im_GoodsTransferItem_ms_ItemStatus");

                entity.HasOne(d => d.LocationIndexNavigation)
                    .WithMany(p => p.ImGoodsTransferItem)
                    .HasForeignKey(d => d.LocationIndex)
                    .HasConstraintName("FK_im_GoodsTransferItem_ms_Location");

                entity.HasOne(d => d.ProductConversionIndexNavigation)
                    .WithMany(p => p.ImGoodsTransferItem)
                    .HasForeignKey(d => d.ProductConversionIndex)
                    .HasConstraintName("FK_im_GoodsTransferItem_ms_ProductConversion");

                entity.HasOne(d => d.ProductIndexNavigation)
                    .WithMany(p => p.ImGoodsTransferItem)
                    .HasForeignKey(d => d.ProductIndex)
                    .HasConstraintName("FK_im_GoodsTransferItem_ms_Product");
            });

            modelBuilder.Entity<ImGoodsissueLogging>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("im_GoodsissueLogging");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsIssueNo)
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(20);

                entity.Property(e => e.ReferenceNo1)
                    .HasColumnName("Reference_No1")
                    .HasMaxLength(20);

                entity.Property(e => e.ReferenceNo2)
                    .HasColumnName("Reference_No2")
                    .HasMaxLength(20);

                entity.Property(e => e.ReferenceNo3)
                    .HasColumnName("Reference_No3")
                    .HasMaxLength(20);

                entity.Property(e => e.RuleId)
                    .HasColumnName("Rule_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.RuleName)
                    .HasColumnName("Rule_Name")
                    .HasMaxLength(20);

                entity.Property(e => e.State).HasMaxLength(50);
            });

            modelBuilder.Entity<ImMarshall>(entity =>
            {
                entity.HasKey(e => e.MarshallIndex);

                entity.ToTable("im_Marshall");

                entity.Property(e => e.MarshallIndex)
                    .HasColumnName("Marshall_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MarshallDate)
                    .HasColumnName("Marshall_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.MarshallNo)
                    .IsRequired()
                    .HasColumnName("Marshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PutawayStatus).HasColumnName("Putaway_Status");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ImMarshallItem>(entity =>
            {
                entity.HasKey(e => e.MarshallItemIndex);

                entity.ToTable("im_MarshallItem");

                entity.HasIndex(e => e.DocumentStatus);

                entity.HasIndex(e => e.MarshallIndex);

                entity.HasIndex(e => e.RefDocumentIndex);

                entity.HasIndex(e => e.RefDocumentItemIndex);

                entity.Property(e => e.MarshallItemIndex)
                    .HasColumnName("MarshallItem_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MarshallIndex).HasColumnName("Marshall_Index");

                entity.Property(e => e.MarshallRemark)
                    .HasColumnName("Marshall_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ImMarshallItemLocation>(entity =>
            {
                entity.HasKey(e => e.MarshallItemLocationIndex);

                entity.ToTable("im_MarshallItemLocation");

                entity.Property(e => e.MarshallItemLocationIndex)
                    .HasColumnName("MarshallItemLocation_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MarshallIndex).HasColumnName("Marshall_Index");

                entity.Property(e => e.MarshallItemIndex).HasColumnName("MarshallItem_Index");

                entity.Property(e => e.MashallQty)
                    .HasColumnName("Mashall_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.MashallStatus).HasColumnName("Mashall_Status");

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PickingBy)
                    .HasColumnName("Picking_By")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingDate)
                    .HasColumnName("Picking_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PickingProductConversionIndex).HasColumnName("Picking_ProductConversion_Index");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingRef1)
                    .HasColumnName("Picking_Ref1")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingRef2)
                    .HasColumnName("Picking_Ref2")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PluNo)
                    .HasColumnName("PLU_No")
                    .HasMaxLength(200);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum).HasColumnName("Ref_Document_LineNum");

                entity.Property(e => e.RefDocumentNo).HasColumnName("Ref_Document_No");

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ImMarshallTask>(entity =>
            {
                entity.HasKey(e => e.MarshallTaskIndex);

                entity.ToTable("im_MarshallTask");

                entity.Property(e => e.MarshallTaskIndex)
                    .HasColumnName("MarshallTask_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MarshallTaskDate)
                    .HasColumnName("MarshallTask_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.MarshallTaskNo)
                    .IsRequired()
                    .HasColumnName("MarshallTask_No")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PutawayStatus).HasColumnName("Putaway_Status");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ImMarshallTaskItem>(entity =>
            {
                entity.HasKey(e => e.MarshallTaskItemIndex);

                entity.ToTable("im_MarshallTaskItem");

                entity.HasIndex(e => e.DocumentStatus);

                entity.HasIndex(e => e.MarshallTaskIndex);

                entity.HasIndex(e => e.PlanGoodsIssueIndex);

                entity.HasIndex(e => e.PlanGoodsIssueItemIndex);

                entity.HasIndex(e => e.RefDocumentIndex);

                entity.HasIndex(e => e.RefDocumentItemIndex);

                entity.Property(e => e.MarshallTaskItemIndex)
                    .HasColumnName("MarshallTaskItem_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Count).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.MarshallTaskIndex).HasColumnName("MarshallTask_Index");

                entity.Property(e => e.MarshallTaskRemark)
                    .HasColumnName("MarshallTask_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PickShortReasonCodeBy)
                    .HasColumnName("PickShort_ReasonCode_By")
                    .HasMaxLength(200);

                entity.Property(e => e.PickShortReasonCodeDate)
                    .HasColumnName("PickShort_ReasonCode_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PickShortReasonCodeId)
                    .HasColumnName("PickShort_ReasonCode_Id")
                    .HasMaxLength(200);

                entity.Property(e => e.PickShortReasonCodeIndex).HasColumnName("PickShort_ReasonCode_Index");

                entity.Property(e => e.PickShortReasonCodeName)
                    .HasColumnName("PickShort_ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingProductConversionIndex).HasColumnName("Picking_ProductConversion_Index");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingToolReasonCodeBy)
                    .HasColumnName("PickingTool_ReasonCode_By")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingToolReasonCodeDate)
                    .HasColumnName("PickingTool_ReasonCode_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PluStatus).HasColumnName("PLU_Status");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPiecePickShort)
                    .HasColumnName("Qty_Piece_PickShort")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPiecePickingTool)
                    .HasColumnName("Qty_Piece_PickingTool")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(200);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.ReplaceStatus).HasColumnName("Replace_Status");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ImMarshallTaskItemDetail>(entity =>
            {
                entity.HasKey(e => e.MarshallTaskItemDetailIndex);

                entity.ToTable("im_MarshallTaskItemDetail");

                entity.Property(e => e.MarshallTaskItemDetailIndex)
                    .HasColumnName("MarshallTaskItemDetail_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Count).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.MarshallTaskIndex).HasColumnName("MarshallTask_Index");

                entity.Property(e => e.MarshallTaskItemIndex).HasColumnName("MarshallTaskItem_Index");

                entity.Property(e => e.MarshallTaskRemark)
                    .HasColumnName("MarshallTask_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PickShortReasonCodeId)
                    .HasColumnName("PickShort_ReasonCode_Id")
                    .HasMaxLength(200);

                entity.Property(e => e.PickShortReasonCodeIndex).HasColumnName("PickShort_ReasonCode_Index");

                entity.Property(e => e.PickShortReasonCodeName)
                    .HasColumnName("PickShort_ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingProductConversionIndex).HasColumnName("Picking_ProductConversion_Index");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(200);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(200);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.ReplaceStatus).HasColumnName("Replace_Status");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ImPlanGoodsIssue>(entity =>
            {
                entity.HasKey(e => e.PlanGoodsIssueIndex);

                entity.ToTable("im_PlanGoodsIssue");

                entity.HasIndex(e => e.DocumentStatus);

                entity.HasIndex(e => e.PlanGoodsIssueDueDate);

                entity.HasIndex(e => e.PlanGoodsIssueNo);

                entity.HasIndex(e => e.RoundIndex);

                entity.HasIndex(e => e.RouteIndex);

                entity.Property(e => e.PlanGoodsIssueIndex)
                    .HasColumnName("PlanGoodsIssue_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CalCpn2Discount)
                    .HasColumnName("Cal_Cpn2Discount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalCpn9Discount)
                    .HasColumnName("Cal_Cpn9Discount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalEvoucherDiscount)
                    .HasColumnName("Cal_EvoucherDiscount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalGrandTotal)
                    .HasColumnName("Cal_GrandTotal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalPromotionDiscount)
                    .HasColumnName("Cal_PromotionDiscount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalTotalAfterDiscount)
                    .HasColumnName("Cal_TotalAfterDiscount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CountryIndex).HasColumnName("Country_Index");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateDateFile)
                    .HasColumnName("Create_Date_File")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CustomInterfaceFlag1)
                    .HasColumnName("custom_interface_flag1")
                    .HasMaxLength(20);

                entity.Property(e => e.CustomInterfaceFlag2)
                    .HasColumnName("custom_interface_flag2")
                    .HasMaxLength(20);

                entity.Property(e => e.CustomInterfaceFlag3)
                    .HasColumnName("custom_interface_flag3")
                    .HasMaxLength(20);

                entity.Property(e => e.CustomInterfaceFlag4)
                    .HasColumnName("custom_interface_flag4")
                    .HasMaxLength(20);

                entity.Property(e => e.CustomInterfaceFlag5)
                    .HasColumnName("custom_interface_flag5")
                    .HasMaxLength(20);

                entity.Property(e => e.DistrictIndex).HasColumnName("District_Index");

                entity.Property(e => e.DocumentPriorityStatus)
                    .HasColumnName("DocumentPriority_Status")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(500);

                entity.Property(e => e.DocumentRemarkSub)
                    .HasColumnName("Document_Remark_Sub")
                    .HasMaxLength(500);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.InvoiceAddress)
                    .HasColumnName("Invoice_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.InvoiceAddressName)
                    .HasColumnName("Invoice_AddressName")
                    .HasMaxLength(500);

                entity.Property(e => e.InvoiceCompanyName)
                    .HasColumnName("Invoice_CompanyName")
                    .HasMaxLength(200);

                entity.Property(e => e.InvoiceName)
                    .HasColumnName("Invoice_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.InvoiceRemark)
                    .HasColumnName("Invoice_Remark")
                    .HasMaxLength(500);

                entity.Property(e => e.InvoiceTaxNo)
                    .HasColumnName("Invoice_TaxNo")
                    .HasMaxLength(50);

                entity.Property(e => e.InvoiceTelephone)
                    .HasColumnName("Invoice_Telephone")
                    .HasMaxLength(50);

                entity.Property(e => e.IsConfirmShipmentFms).HasColumnName("IsConfirmShipmentFMS");

                entity.Property(e => e.IsConfirmShipmentFmsDate)
                    .HasColumnName("IsConfirmShipmentFMS_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.IsPostPickConfirmDate)
                    .HasColumnName("IsPostPickConfirm_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsPostShippmentDispatchDate)
                    .HasColumnName("IsPostShippmentDispatch_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentIssuer)
                    .HasColumnName("Payment_Issuer")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PostcodeIndex).HasColumnName("Postcode_Index");

                entity.Property(e => e.ProvinceIndex).HasColumnName("Province_Index");

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefPlanGoodsIssueIndex).HasColumnName("Ref_PlanGoodsIssue_Index");

                entity.Property(e => e.RefPlanGoodsIssueNo)
                    .HasColumnName("Ref_PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefWavePickIndex).HasColumnName("Ref_WavePick_index");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RoundTime)
                    .HasColumnName("Round_Time")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToAddress)
                    .HasColumnName("ShipTo_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.ShipToAddressName)
                    .HasColumnName("ShipTo_AddressName")
                    .HasMaxLength(500);

                entity.Property(e => e.ShipToCompanyName)
                    .HasColumnName("ShipTo_CompanyName")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToRemark)
                    .HasColumnName("ShipTo_Remark")
                    .HasMaxLength(500);

                entity.Property(e => e.ShipToTaxNo)
                    .HasColumnName("ShipTo_TaxNo")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToTelephone)
                    .HasColumnName("ShipTo_Telephone")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToAddress)
                    .HasColumnName("SoldTo_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.SoldToAddressCus)
                    .HasColumnName("SoldTo_Address_Cus")
                    .HasMaxLength(500);

                entity.Property(e => e.SoldToCountryIndex).HasColumnName("SoldTo_Country_Index");

                entity.Property(e => e.SoldToDistrictIndex).HasColumnName("SoldTo_District_Index");

                entity.Property(e => e.SoldToEmail)
                    .HasColumnName("SoldTo_Email")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToEmailCus)
                    .HasColumnName("SoldTo_Email_Cus")
                    .HasMaxLength(100);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToNameCus)
                    .HasColumnName("SoldTo_Name_Cus")
                    .HasMaxLength(500);

                entity.Property(e => e.SoldToPhone)
                    .HasColumnName("SoldTo_Phone")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToPhoneCus)
                    .HasColumnName("SoldTo_Phone_Cus")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToPostcodeIndex).HasColumnName("SoldTo_Postcode_Index");

                entity.Property(e => e.SoldToProvinceIndex).HasColumnName("SoldTo_Province_Index");

                entity.Property(e => e.SoldToSubDistrictIndex).HasColumnName("SoldTo_SubDistrict_Index");

                entity.Property(e => e.SoldToT1c)
                    .HasColumnName("SoldTo_T1C")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToT1cphone)
                    .HasColumnName("SoldTo_T1CPhone")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToTel)
                    .HasColumnName("SoldTo_Tel")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusDescRms)
                    .HasColumnName("Status_Desc_RMS")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusDropSt)
                    .HasColumnName("StatusDropST")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusDropStDate)
                    .HasColumnName("StatusDropST_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.StatusEdi)
                    .HasColumnName("Status_EDI")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusReason)
                    .HasColumnName("Status_Reason")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusRms)
                    .HasColumnName("Status_RMS")
                    .HasMaxLength(200);

                entity.Property(e => e.StplanGoodsIssueDueDate)
                    .HasColumnName("STPlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SubDistrictIndex).HasColumnName("SubDistrict_Index");

                entity.Property(e => e.SubOrderId)
                    .HasColumnName("SubOrderID")
                    .HasMaxLength(500);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.VendorId)
                    .HasColumnName("Vendor_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehousePhone)
                    .HasColumnName("Warehouse_Phone")
                    .HasMaxLength(200);

                entity.HasOne(d => d.DocumentTypeIndexNavigation)
                    .WithMany(p => p.ImPlanGoodsIssue)
                    .HasForeignKey(d => d.DocumentTypeIndex)
                    .HasConstraintName("FK_im_PlanGoodsIssue_ms_DocumentType");

                entity.HasOne(d => d.OwnerIndexNavigation)
                    .WithMany(p => p.ImPlanGoodsIssue)
                    .HasForeignKey(d => d.OwnerIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_PlanGoodsIssue_ms_Owner");
            });

            modelBuilder.Entity<ImPlanGoodsIssueItem>(entity =>
            {
                entity.HasKey(e => e.PlanGoodsIssueItemIndex);

                entity.ToTable("im_PlanGoodsIssueItem");

                entity.HasIndex(e => e.PlanGoodsIssueIndex);

                entity.HasIndex(e => e.ProductConversionIndex);

                entity.HasIndex(e => e.ProductIndex);

                entity.HasIndex(e => new { e.PlanGoodsIssueIndex, e.PlanGoodsIssueSize, e.DocumentStatus })
                    .HasName("im_PlanGoodsIssueItem_index_1");

                entity.Property(e => e.PlanGoodsIssueItemIndex)
                    .HasColumnName("PlanGoodsIssueItem_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ImageUri).HasMaxLength(200);

                entity.Property(e => e.IsQa).HasColumnName("IsQA");

                entity.Property(e => e.IsWeightByPiece)
                    .HasColumnName("Is_WeightByPiece")
                    .HasMaxLength(50);

                entity.Property(e => e.IsWeightItem)
                    .HasColumnName("Is_WeightItem")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueSize)
                    .HasColumnName("PlanGoodsIssue_Size")
                    .HasMaxLength(200);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.QaBy)
                    .HasColumnName("QA_By")
                    .HasMaxLength(200);

                entity.Property(e => e.QaDate)
                    .HasColumnName("QA_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyInnerPack)
                    .HasColumnName("Qty_Inner_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyQa)
                    .HasColumnName("QtyQA")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyRemark)
                    .HasColumnName("Qty_Remark")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtySupPack)
                    .HasColumnName("Qty_Sup_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RunWaveStatus).HasColumnName("RunWave_Status");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ZoneCode).HasMaxLength(50);
            });

            modelBuilder.Entity<ImPlanGoodsIssueItemInfo>(entity =>
            {
                entity.HasKey(e => e.PlanGoodsIssueItemInfoIndex);

                entity.ToTable("im_PlanGoodsIssueItemInfo");

                entity.HasIndex(e => e.PlanGoodsIssueIndex)
                    .HasName("im_PlanGoodsIssueItemInfo_index_1");

                entity.Property(e => e.PlanGoodsIssueItemInfoIndex)
                    .HasColumnName("PlanGoodsIssueItemInfo_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ImageUri).HasMaxLength(200);

                entity.Property(e => e.IsQa).HasColumnName("IsQA");

                entity.Property(e => e.IsWeightByPiece)
                    .HasColumnName("Is_WeightByPiece")
                    .HasMaxLength(50);

                entity.Property(e => e.IsWeightItem)
                    .HasColumnName("Is_WeightItem")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueSize)
                    .HasColumnName("PlanGoodsIssue_Size")
                    .HasMaxLength(200);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.QaBy)
                    .HasColumnName("QA_By")
                    .HasMaxLength(200);

                entity.Property(e => e.QaDate)
                    .HasColumnName("QA_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyCancelled)
                    .HasColumnName("Qty_Cancelled")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyInnerPack)
                    .HasColumnName("Qty_Inner_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyOrder)
                    .HasColumnName("Qty_Order")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyQa)
                    .HasColumnName("QtyQA")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyRemark)
                    .HasColumnName("Qty_Remark")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtySupPack)
                    .HasColumnName("Qty_Sup_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RunWaveStatus).HasColumnName("RunWave_Status");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.WeightCancel)
                    .HasColumnName("Weight_Cancel")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.WeightOrder)
                    .HasColumnName("Weight_Order")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ZoneCode).HasMaxLength(50);
            });

            modelBuilder.Entity<ImPlanGoodsReceive>(entity =>
            {
                entity.HasKey(e => e.PlanGoodsReceiveIndex);

                entity.ToTable("im_PlanGoodsReceive");

                entity.Property(e => e.PlanGoodsReceiveIndex)
                    .HasColumnName("PlanGoodsReceive_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CustomInterfaceFlag1)
                    .HasColumnName("custom_interface_flag1")
                    .HasMaxLength(20);

                entity.Property(e => e.DocumentPriorityStatus)
                    .HasColumnName("DocumentPriority_Status")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsReceiveDate)
                    .HasColumnName("PlanGoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsReceiveDueDate)
                    .HasColumnName("PlanGoodsReceive_Due_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsReceiveNo)
                    .HasColumnName("PlanGoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.UserAssignKey).HasMaxLength(200);

                entity.Property(e => e.VendorId)
                    .HasColumnName("Vendor_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorIndex).HasColumnName("Vendor_Index");

                entity.Property(e => e.VendorName)
                    .HasColumnName("Vendor_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);

                entity.HasOne(d => d.DocumentTypeIndexNavigation)
                    .WithMany(p => p.ImPlanGoodsReceive)
                    .HasForeignKey(d => d.DocumentTypeIndex)
                    .HasConstraintName("FK_im_PlanGoodsReceive_ms_DocumentType");

                entity.HasOne(d => d.OwnerIndexNavigation)
                    .WithMany(p => p.ImPlanGoodsReceive)
                    .HasForeignKey(d => d.OwnerIndex)
                    .HasConstraintName("FK_im_PlanGoodsReceive_ms_Owner");

                entity.HasOne(d => d.VendorIndexNavigation)
                    .WithMany(p => p.ImPlanGoodsReceive)
                    .HasForeignKey(d => d.VendorIndex)
                    .HasConstraintName("FK_im_PlanGoodsReceive_ms_Vendor");

                entity.HasOne(d => d.WarehouseIndexNavigation)
                    .WithMany(p => p.ImPlanGoodsReceive)
                    .HasForeignKey(d => d.WarehouseIndex)
                    .HasConstraintName("FK_im_PlanGoodsReceive_ms_Warehouse");
            });

            modelBuilder.Entity<ImPlanGoodsReceiveItem>(entity =>
            {
                entity.HasKey(e => e.PlanGoodsReceiveItemIndex);

                entity.ToTable("im_PlanGoodsReceiveItem");

                entity.Property(e => e.PlanGoodsReceiveItemIndex)
                    .HasColumnName("PlanGoodsReceiveItem_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsReceiveIndex).HasColumnName("PlanGoodsReceive_Index");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyInnerPack)
                    .HasColumnName("Qty_Inner_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtySupPack)
                    .HasColumnName("Qty_Sup_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");

                entity.HasOne(d => d.ItemStatusIndexNavigation)
                    .WithMany(p => p.ImPlanGoodsReceiveItem)
                    .HasForeignKey(d => d.ItemStatusIndex)
                    .HasConstraintName("FK_im_PlanGoodsReceiveItem_ms_ItemStatus");

                entity.HasOne(d => d.PlanGoodsReceiveIndexNavigation)
                    .WithMany(p => p.ImPlanGoodsReceiveItem)
                    .HasForeignKey(d => d.PlanGoodsReceiveIndex)
                    .HasConstraintName("FK_im_PlanGoodsReceiveItem_im_PlanGoodsReceive");

                entity.HasOne(d => d.ProductConversionIndexNavigation)
                    .WithMany(p => p.ImPlanGoodsReceiveItem)
                    .HasForeignKey(d => d.ProductConversionIndex)
                    .HasConstraintName("FK_im_PlanGoodsReceiveItem_ms_ProductConversion");

                entity.HasOne(d => d.ProductIndexNavigation)
                    .WithMany(p => p.ImPlanGoodsReceiveItem)
                    .HasForeignKey(d => d.ProductIndex)
                    .HasConstraintName("FK_im_PlanGoodsReceiveItem_ms_Product");
            });

            modelBuilder.Entity<ImPlanGoodsTransfer>(entity =>
            {
                entity.HasKey(e => e.PlanGoodsTransferIndex);

                entity.ToTable("im_PlanGoodsTransfer");

                entity.Property(e => e.PlanGoodsTransferIndex)
                    .HasColumnName("PlanGoodsTransfer_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentPriorityStatus)
                    .HasColumnName("DocumentPriority_Status")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.PlanGoodsTransferDate)
                    .HasColumnName("PlanGoodsTransfer_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsTransferDueDateEnd)
                    .HasColumnName("PlanGoodsTransfer_DueDate_End")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsTransferDueDateStart)
                    .HasColumnName("PlanGoodsTransfer_DueDate_Start")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsTransferNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsTransfer_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.VendorIndex).HasColumnName("Vendor_Index");

                entity.HasOne(d => d.DocumentTypeIndexNavigation)
                    .WithMany(p => p.ImPlanGoodsTransfer)
                    .HasForeignKey(d => d.DocumentTypeIndex)
                    .HasConstraintName("FK_im_PlanGoodsTransfer_ms_DocumentType");

                entity.HasOne(d => d.OwnerIndexNavigation)
                    .WithMany(p => p.ImPlanGoodsTransfer)
                    .HasForeignKey(d => d.OwnerIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_PlanGoodsTransfer_ms_Owner");
            });

            modelBuilder.Entity<ImPlanGoodsTransferItem>(entity =>
            {
                entity.HasKey(e => e.PlanGoodsTransferItemIndex);

                entity.ToTable("im_PlanGoodsTransferItem");

                entity.Property(e => e.PlanGoodsTransferItemIndex)
                    .HasColumnName("PlanGoodsTransferItem_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.PlanGoodsTransferIndex).HasColumnName("PlanGoodsTransfer_Index");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");

                entity.HasOne(d => d.PlanGoodsTransferIndexNavigation)
                    .WithMany(p => p.ImPlanGoodsTransferItem)
                    .HasForeignKey(d => d.PlanGoodsTransferIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_PlanGoodsTransferItem_im_PlanGoodsTransfer");

                entity.HasOne(d => d.ProductConversionIndexNavigation)
                    .WithMany(p => p.ImPlanGoodsTransferItem)
                    .HasForeignKey(d => d.ProductConversionIndex)
                    .HasConstraintName("FK_im_PlanGoodsTransferItem_ms_ProductConversion");

                entity.HasOne(d => d.ProductIndexNavigation)
                    .WithMany(p => p.ImPlanGoodsTransferItem)
                    .HasForeignKey(d => d.ProductIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_PlanGoodsTransferItem_ms_Product");
            });

            modelBuilder.Entity<ImPos>(entity =>
            {
                entity.HasKey(e => e.PosIndex);

                entity.ToTable("im_POS");

                entity.Property(e => e.PosIndex)
                    .HasColumnName("POS_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ConfirmBy).HasMaxLength(200);

                entity.Property(e => e.ConfirmDate).HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PosDate)
                    .HasColumnName("POS_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PosNo)
                    .IsRequired()
                    .HasColumnName("POS_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PutawayStatus).HasColumnName("Putaway_Status");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ImPositem>(entity =>
            {
                entity.HasKey(e => e.PositemIndex);

                entity.ToTable("im_POSItem");

                entity.HasIndex(e => e.PlanGoodsIssueIndex);

                entity.HasIndex(e => e.PlanGoodsIssueItemIndex);

                entity.HasIndex(e => e.RefDocumentIndex);

                entity.HasIndex(e => e.RefDocumentItemIndex);

                entity.Property(e => e.PositemIndex)
                    .HasColumnName("POSItem_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PosIndex).HasColumnName("POS_Index");

                entity.Property(e => e.PosRemark)
                    .HasColumnName("POS_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ImPrepareData>(entity =>
            {
                entity.HasKey(e => e.DataIndex);

                entity.ToTable("im_PrepareData");

                entity.Property(e => e.DataIndex)
                    .HasColumnName("Data_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DataPath)
                    .HasColumnName("Data_Path")
                    .HasMaxLength(200);

                entity.Property(e => e.DataValues).HasColumnName("Data_Values");

                entity.Property(e => e.MsgDesc)
                    .HasColumnName("MSG_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.MsgName)
                    .IsRequired()
                    .HasColumnName("MSG_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MsgStatus)
                    .HasColumnName("MSG_Status")
                    .HasMaxLength(200);

                entity.Property(e => e.SearchKey).HasColumnName("Search_Key");
            });

            modelBuilder.Entity<ImPreparePrintTagOutPick>(entity =>
            {
                entity.HasKey(e => e.PreparePrintTagOutPickIndex);

                entity.ToTable("im_PreparePrintTagOutPick");

                entity.Property(e => e.PreparePrintTagOutPickIndex)
                    .HasColumnName("PreparePrintTagOutPick_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ConfirmTagOutQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickRefNo1)
                    .HasColumnName("TagOutPickRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickRefNo2)
                    .HasColumnName("TagOutPickRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickRefNo3)
                    .HasColumnName("TagOutPickRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickRefNo4)
                    .HasColumnName("TagOutPickRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickRefNo5)
                    .HasColumnName("TagOutPickRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");
            });

            modelBuilder.Entity<ImPromotions>(entity =>
            {
                entity.HasKey(e => e.PromotionsIndex);

                entity.ToTable("im_Promotions");

                entity.Property(e => e.PromotionsIndex)
                    .HasColumnName("Promotions_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PromotionsAmount)
                    .HasColumnName("Promotions_Amount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PromotionsApplied)
                    .HasColumnName("Promotions_Applied")
                    .HasMaxLength(2000);

                entity.Property(e => e.PromotionsBarcode)
                    .HasColumnName("Promotions_Barcode")
                    .HasMaxLength(50);

                entity.Property(e => e.PromotionsCount)
                    .HasColumnName("Promotions_Count")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PromotionsLink)
                    .HasColumnName("Promotions_Link")
                    .HasMaxLength(50);

                entity.Property(e => e.PromotionsStep)
                    .HasColumnName("Promotions_Step")
                    .HasMaxLength(50);

                entity.Property(e => e.PromotionsType)
                    .HasColumnName("Promotions_Type")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ImSalesOrderMappingPos>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("im_sales_order_mapping_pos");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("create_by")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.RcptNo)
                    .HasColumnName("rcpt_no")
                    .HasMaxLength(50);

                entity.Property(e => e.RcptNoUpdate)
                    .HasColumnName("rcpt_no_update")
                    .HasMaxLength(50);

                entity.Property(e => e.SalesOrderNo)
                    .HasColumnName("sales_order_no")
                    .HasMaxLength(50);

                entity.Property(e => e.TpNo)
                    .HasColumnName("tp_no")
                    .HasMaxLength(50);

                entity.Property(e => e.TpNoUpdate)
                    .HasColumnName("tp_no_update")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("update_by")
                    .HasMaxLength(20);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("update_date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<ImSerialcapturing>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("im_serialcapturing");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("create_by")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentrefNo1)
                    .HasColumnName("documentref_no1")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentrefNo2)
                    .HasColumnName("documentref_no2")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentrefNo3)
                    .HasColumnName("documentref_no3")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentrefNo4)
                    .HasColumnName("documentref_no4")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentrefNo5)
                    .HasColumnName("documentref_no5")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessId)
                    .IsRequired()
                    .HasColumnName("process_ID")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessIndex).HasColumnName("process_Index");

                entity.Property(e => e.ProcessName)
                    .IsRequired()
                    .HasColumnName("process_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("product_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("product_index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("product_name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("ref_document_index");

                entity.Property(e => e.RefDocumentitemIndex).HasColumnName("ref_documentitem_index");

                entity.Property(e => e.SerialIndex).HasColumnName("Serial_Index");

                entity.Property(e => e.SerialNo)
                    .IsRequired()
                    .HasColumnName("serial_no")
                    .HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("udf_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf2)
                    .HasColumnName("udf_2")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf3)
                    .HasColumnName("udf_3")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf4)
                    .HasColumnName("udf_4")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf5)
                    .HasColumnName("udf_5")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("update_by")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("update_date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<ImStockBalance>(entity =>
            {
                entity.HasKey(e => e.StockBalanceIndex);

                entity.ToTable("im_StockBalance");

                entity.Property(e => e.StockBalanceIndex)
                    .HasColumnName("StockBalance_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsReceiveExpDate)
                    .HasColumnName("GoodsReceive_EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveMfgDate)
                    .HasColumnName("GoodsReceive_MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveProductConversionIndex).HasColumnName("GoodsReceive_ProductConversion_Index");

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.StockBalanceQtyBal)
                    .HasColumnName("StockBalance_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockBalanceQtyBegin)
                    .HasColumnName("StockBalance_QtyBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockBalanceQtyReserve)
                    .HasColumnName("StockBalance_QtyReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockBalanceRatio)
                    .HasColumnName("StockBalance_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockBalanceVolumeBal)
                    .HasColumnName("StockBalance_VolumeBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockBalanceVolumeBegin)
                    .HasColumnName("StockBalance_VolumeBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockBalanceVolumeReserve)
                    .HasColumnName("StockBalance_VolumeReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockBalanceWeightBal)
                    .HasColumnName("StockBalance_WeightBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockBalanceWeightBegin)
                    .HasColumnName("StockBalance_WeightBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockBalanceWeightReserve)
                    .HasColumnName("StockBalance_WeightReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<ImStockCard>(entity =>
            {
                entity.HasKey(e => e.StockCardIndex)
                    .HasName("PK_im_StockCard_1");

                entity.ToTable("im_StockCard");

                entity.Property(e => e.StockCardIndex)
                    .HasColumnName("StockCard_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.GoodsReceiveExpDate)
                    .HasColumnName("GoodsReceive_EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveExpDateTo)
                    .HasColumnName("GoodsReceive_EXP_Date_To")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusIndexTo).HasColumnName("ItemStatus_Index_To");

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerIndexTo).HasColumnName("Owner_Index_To");

                entity.Property(e => e.ProcessIndex).HasColumnName("Process_Index");

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductIndexTo).HasColumnName("Product_Index_To");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductLotTo)
                    .HasColumnName("Product_Lot_To")
                    .HasMaxLength(50);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo).HasColumnName("Ref_Document_No");

                entity.Property(e => e.StockCardDate)
                    .HasColumnName("StockCard_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.StockCardNo)
                    .HasColumnName("StockCard_No")
                    .HasMaxLength(50);

                entity.Property(e => e.StockCardQtyIn)
                    .HasColumnName("StockCard_QtyIn")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockCardQtyOut)
                    .HasColumnName("StockCard_QtyOut")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockCardQtySign)
                    .HasColumnName("StockCard_QtySign")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockCardVolumeIn)
                    .HasColumnName("StockCard_VolumeIn")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockCardVolumeOut)
                    .HasColumnName("StockCard_VolumeOut")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockCardVolumeSign)
                    .HasColumnName("StockCard_VolumeSign")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockCardWeightIn)
                    .HasColumnName("StockCard_WeightIn")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockCardWeightOut)
                    .HasColumnName("StockCard_WeightOut")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockCardWeightSign)
                    .HasColumnName("StockCard_WeightSign")
                    .HasColumnType("numeric(18, 6)");

                entity.HasOne(d => d.GoodsReceiveItemIndexNavigation)
                    .WithMany(p => p.ImStockCard)
                    .HasForeignKey(d => d.GoodsReceiveItemIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_StockCard_im_GoodsReceiveItem");

                entity.HasOne(d => d.GoodsReceiveItemIndex1)
                    .WithMany(p => p.ImStockCard)
                    .HasForeignKey(d => d.GoodsReceiveItemIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_StockCard_im_StockCardLock");
            });

            modelBuilder.Entity<ImStockCardLock>(entity =>
            {
                entity.HasKey(e => e.StockCardLockIndex)
                    .HasName("PK_im_StockCardLock_1");

                entity.ToTable("im_StockCardLock");

                entity.Property(e => e.StockCardLockIndex)
                    .HasColumnName("StockCardLock_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.StockCardLockKey).HasColumnName("StockCardLock_Key");

                entity.Property(e => e.StockCardLockQtyBal)
                    .HasColumnName("StockCardLock_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockCardLockVolumeBal)
                    .HasColumnName("StockCardLock_VolumeBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockCardLockWeightBal)
                    .HasColumnName("StockCardLock_WeightBal")
                    .HasColumnType("numeric(18, 6)");

                entity.HasOne(d => d.GoodsReceiveItemIndexNavigation)
                    .WithMany(p => p.ImStockCardLock)
                    .HasForeignKey(d => d.GoodsReceiveItemIndex)
                    .HasConstraintName("FK_im_StockCardLock_im_StockCardReserve");
            });

            modelBuilder.Entity<ImStockCardReserve>(entity =>
            {
                entity.HasKey(e => e.StockCardReserveIndex);

                entity.ToTable("im_StockCardReserve");

                entity.Property(e => e.StockCardReserveIndex)
                    .HasColumnName("StockCardReserve_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.ProcessIndex).HasColumnName("Process_Index");

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo).HasColumnName("Ref_Document_No");

                entity.Property(e => e.StockCardReserveQtyBal)
                    .HasColumnName("StockCardReserve_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockCardReserveStatus)
                    .HasColumnName("StockCardReserve_Status")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockCardReserveVolumeBal)
                    .HasColumnName("StockCardReserve_VolumeBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.StockCardReserveWeightBal)
                    .HasColumnName("StockCardReserve_WeightBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.RefDocumentItemIndexNavigation)
                    .WithMany(p => p.ImStockCardReserve)
                    .HasForeignKey(d => d.RefDocumentItemIndex)
                    .HasConstraintName("FK_im_StockCardReserve_im_GoodsIssueItem");
            });

            modelBuilder.Entity<ImStplanGoodsIssue>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("im_STPlanGoodsIssue");

                entity.Property(e => e.CalCpn2Discount)
                    .HasColumnName("Cal_Cpn2Discount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalCpn9Discount)
                    .HasColumnName("Cal_Cpn9Discount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalEvoucherDiscount)
                    .HasColumnName("Cal_EvoucherDiscount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalGrandTotal)
                    .HasColumnName("Cal_GrandTotal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalPromotionDiscount)
                    .HasColumnName("Cal_PromotionDiscount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalTotalAfterDiscount)
                    .HasColumnName("Cal_TotalAfterDiscount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CountryIndex).HasColumnName("Country_Index");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateDateFile)
                    .HasColumnName("Create_Date_File")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DistrictIndex).HasColumnName("District_Index");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemarkSub)
                    .HasColumnName("Document_Remark_Sub")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.InvoiceAddress)
                    .HasColumnName("Invoice_Address")
                    .HasMaxLength(200);

                entity.Property(e => e.InvoiceCompanyName)
                    .HasColumnName("Invoice_CompanyName")
                    .HasMaxLength(200);

                entity.Property(e => e.InvoiceName)
                    .HasColumnName("Invoice_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.InvoiceRemark)
                    .HasColumnName("Invoice_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.InvoiceTaxNo)
                    .HasColumnName("Invoice_TaxNo")
                    .HasMaxLength(50);

                entity.Property(e => e.InvoiceTelephone)
                    .HasColumnName("Invoice_Telephone")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentIssuer)
                    .HasColumnName("Payment_Issuer")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PostcodeIndex).HasColumnName("Postcode_Index");

                entity.Property(e => e.ProvinceIndex).HasColumnName("Province_Index");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RoundTime)
                    .HasColumnName("Round_Time")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToAddress)
                    .HasColumnName("ShipTo_Address")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToCompanyName)
                    .HasColumnName("ShipTo_CompanyName")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToRemark)
                    .HasColumnName("ShipTo_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToTaxNo)
                    .HasColumnName("ShipTo_TaxNo")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToTelephone)
                    .HasColumnName("ShipTo_Telephone")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToAddress)
                    .HasColumnName("SoldTo_Address")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToCountryIndex).HasColumnName("SoldTo_Country_Index");

                entity.Property(e => e.SoldToDistrictIndex).HasColumnName("SoldTo_District_Index");

                entity.Property(e => e.SoldToEmail)
                    .HasColumnName("SoldTo_Email")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToPhone)
                    .HasColumnName("SoldTo_Phone")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToPostcodeIndex).HasColumnName("SoldTo_Postcode_Index");

                entity.Property(e => e.SoldToProvinceIndex).HasColumnName("SoldTo_Province_Index");

                entity.Property(e => e.SoldToSubDistrictIndex).HasColumnName("SoldTo_SubDistrict_Index");

                entity.Property(e => e.SoldToT1c)
                    .HasColumnName("SoldTo_T1C")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToT1cphone)
                    .HasColumnName("SoldTo_T1CPhone")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusDescRms)
                    .HasColumnName("Status_Desc_RMS")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusEdi)
                    .HasColumnName("Status_EDI")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusReason)
                    .HasColumnName("Status_Reason")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusRms)
                    .HasColumnName("Status_RMS")
                    .HasMaxLength(200);

                entity.Property(e => e.StplanGoodsIssueDate)
                    .HasColumnName("STPlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.StplanGoodsIssueDesc)
                    .HasColumnName("STPlanGoodsIssue_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.StplanGoodsIssueDueDate)
                    .HasColumnName("STPlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.StplanGoodsIssueIndex).HasColumnName("STPlanGoodsIssue_Index");

                entity.Property(e => e.StplanGoodsIssueNo)
                    .HasColumnName("STPlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.StplanGoodsIssueStatus).HasColumnName("STPlanGoodsIssue_Status");

                entity.Property(e => e.SubDistrictIndex).HasColumnName("SubDistrict_Index");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.VendorId)
                    .HasColumnName("Vendor_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehousePhone)
                    .HasColumnName("Warehouse_Phone")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ImTask>(entity =>
            {
                entity.HasKey(e => e.TaskIndex);

                entity.ToTable("im_Task");

                entity.HasIndex(e => e.TagNo)
                    .HasName("IDX_TagNo");

                entity.Property(e => e.TaskIndex)
                    .HasColumnName("Task_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DoTaskBy)
                    .HasColumnName("DoTask_By")
                    .HasMaxLength(200);

                entity.Property(e => e.DoTaskDate)
                    .HasColumnName("DoTask_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ProcessIndex).HasColumnName("Process_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(20);

                entity.Property(e => e.TaskGroupId)
                    .HasColumnName("TaskGroup_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskGroupIndex).HasColumnName("TaskGroup_Index");

                entity.Property(e => e.TaskGroupName)
                    .HasColumnName("TaskGroup_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(20);
            });

            modelBuilder.Entity<ImTaskItem>(entity =>
            {
                entity.HasKey(e => e.TaskItemIndex);

                entity.ToTable("im_TaskItem");

                entity.HasIndex(e => e.DocumentStatus);

                entity.HasIndex(e => e.RefDocumentIndex);

                entity.HasIndex(e => e.RefDocumentItemIndex);

                entity.HasIndex(e => e.RefDocumentNo);

                entity.HasIndex(e => e.TagOutPickIndex);

                entity.HasIndex(e => e.TagOutPickNo);

                entity.HasIndex(e => e.TaskIndex);

                entity.HasIndex(e => new { e.TaskIndex, e.LineNum, e.TagItemIndex, e.TagIndex, e.TagNo, e.ProductIndex, e.ProductId, e.ProductName, e.ProductSecondName, e.ProductThirdName, e.ProductLot, e.ItemStatusIndex, e.ItemStatusId, e.ItemStatusName, e.LocationIndex, e.LocationId, e.LocationName, e.Qty, e.Ratio, e.TotalQty, e.ProductConversionIndex, e.ProductConversionId, e.ProductConversionName, e.MfgDate, e.ExpDate, e.UnitWeight, e.Weight, e.UnitWidth, e.UnitLength, e.UnitHeight, e.UnitVolume, e.Volume, e.UnitPrice, e.Price, e.DocumentRefNo1, e.DocumentRefNo2, e.DocumentRefNo3, e.DocumentRefNo4, e.DocumentRefNo5, e.Udf1, e.Udf2, e.Udf3, e.Udf4, e.Udf5, e.RefProcessIndex, e.RefDocumentNo, e.RefDocumentLineNum, e.RefDocumentIndex, e.RefDocumentItemIndex, e.ReasonCodeIndex, e.ReasonCodeId, e.ReasonCodeName, e.CreateBy, e.CreateDate, e.UpdateBy, e.UpdateDate, e.CancelBy, e.CancelDate, e.TagOutPickIndex, e.TagOutPickNo, e.PickingQty, e.PickingRatio, e.PickingTotalQty, e.SplitQty, e.PlanGoodsIssueIndex, e.PlanGoodsIssueNo, e.PlanGoodsIssueItemIndex, e.PlanProductConversionIndex, e.PlanProductConversionId, e.PlanProductConversionName, e.PlanRatio, e.ImageUri, e.ProductConversionBarcode, e.PickingBy, e.PickingDate, e.PickingStatus, e.TagOutIndex, e.TagOutNo, e.PickingSeq, e.QtyPiece, e.StoreNo, e.PutawaySeq, e.LocationToIndex, e.LocationToId, e.LocationToName, e.RuleId, e.BatchId, e.DistroNo, e.LineNo, e.TaskNo, e.DocumentStatus })
                    .HasName("IDX_im_TaskItem");

                entity.Property(e => e.TaskItemIndex)
                    .HasColumnName("TaskItem_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DistroNo)
                    .HasColumnName("Distro_No")
                    .HasMaxLength(50);

                entity.Property(e => e.DistroPrecessStatus).HasMaxLength(5);

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ImageUri).HasMaxLength(400);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNo).HasColumnName("Line_No");

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationToId)
                    .HasColumnName("LocationTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationToIndex).HasColumnName("LocationTo_Index");

                entity.Property(e => e.LocationToName)
                    .HasColumnName("LocationTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PickingBy)
                    .HasColumnName("Picking_By")
                    .HasMaxLength(100);

                entity.Property(e => e.PickingDate)
                    .HasColumnName("Picking_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionId)
                    .HasColumnName("Plan_ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionIndex).HasColumnName("Plan_ProductConversion_Index");

                entity.Property(e => e.PlanProductConversionName)
                    .HasColumnName("Plan_ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanRatio)
                    .HasColumnName("Plan_Ratio")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionBarcode).HasMaxLength(400);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.PutawaySeq).HasColumnName("Putaway_Seq");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPiece).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.RuleId)
                    .HasColumnName("Rule_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.SplitQty)
                    .HasColumnName("splitQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.StoreNo)
                    .HasColumnName("Store_No")
                    .HasMaxLength(20);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ImTaskItemShort>(entity =>
            {
                entity.HasKey(e => e.TaskItemShortIndex);

                entity.ToTable("im_TaskItemShort");

                entity.Property(e => e.TaskItemShortIndex)
                    .HasColumnName("TaskItemShort_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ImageUri).HasMaxLength(400);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PickingBy)
                    .HasColumnName("Picking_By")
                    .HasMaxLength(100);

                entity.Property(e => e.PickingDate)
                    .HasColumnName("Picking_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionId)
                    .HasColumnName("Plan_ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionIndex).HasColumnName("Plan_ProductConversion_Index");

                entity.Property(e => e.PlanProductConversionName)
                    .HasColumnName("Plan_ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanRatio)
                    .HasColumnName("Plan_Ratio")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionBarcode).HasMaxLength(400);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.SplitQty)
                    .HasColumnName("splitQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ImTaskItemdetail>(entity =>
            {
                entity.HasKey(e => new { e.TaskNo, e.TaskItemIndex, e.TaskItemdetailSeq })
                    .HasName("PK_im_taskItemdetail_1");

                entity.ToTable("im_taskItemdetail");

                entity.Property(e => e.TaskNo)
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TaskItemdetailSeq).HasColumnName("TaskItemdetail_Seq");

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.BinbalanceIndex).HasColumnName("Binbalance_Index");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProcessId)
                    .HasColumnName("Process_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDistroLineNo).HasColumnName("Ref_Distro_line_no");

                entity.Property(e => e.RefDistroNo)
                    .HasColumnName("Ref_Distro_No")
                    .HasMaxLength(20);

                entity.Property(e => e.RefDistroSeqNo).HasColumnName("Ref_Distro_seq_no");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(20);

                entity.Property(e => e.RefLineNo).HasColumnName("Ref_Line_No");

                entity.Property(e => e.RefSeqNo).HasColumnName("Ref_Seq_No");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskItemSeq).HasColumnName("TaskItem_Seq");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_ID")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<ImTransferStockAdjustment>(entity =>
            {
                entity.HasKey(e => e.StockAdjustmentIndex)
                    .HasName("PK_im_StockAdjustment");

                entity.ToTable("im_TransferStockAdjustment");

                entity.Property(e => e.StockAdjustmentIndex)
                    .HasColumnName("StockAdjustment_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentPriorityStatus)
                    .HasColumnName("DocumentPriority_Status")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(200);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StockAdjustmentDate)
                    .HasColumnName("StockAdjustment_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.StockAdjustmentNo)
                    .IsRequired()
                    .HasColumnName("StockAdjustment_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.DocumentTypeIndexNavigation)
                    .WithMany(p => p.ImTransferStockAdjustment)
                    .HasForeignKey(d => d.DocumentTypeIndex)
                    .HasConstraintName("FK_im_StockAdjustment_ms_DocumentType");

                entity.HasOne(d => d.OwnerIndexNavigation)
                    .WithMany(p => p.ImTransferStockAdjustment)
                    .HasForeignKey(d => d.OwnerIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_StockAdjustment_ms_Owner");
            });

            modelBuilder.Entity<ImTransferStockAdjustmentItem>(entity =>
            {
                entity.HasKey(e => e.StockAdjustmentItemItemIndex)
                    .HasName("PK_im_StockAdjustmentItem");

                entity.ToTable("im_TransferStockAdjustmentItem");

                entity.Property(e => e.StockAdjustmentItemItemIndex)
                    .HasColumnName("StockAdjustmentItemItem_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsReceiveExpDate)
                    .HasColumnName("GoodsReceive_EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveExpDateTo)
                    .HasColumnName("GoodsReceive_EXP_Date_To")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveItemLocationIndex).HasColumnName("GoodsReceiveItemLocation_Index");

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusIndexTo).HasColumnName("ItemStatus_Index_To");

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationIndexTo).HasColumnName("Location_Index_To");

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerIndexTo).HasColumnName("Owner_Index_To");

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductIndexTo).HasColumnName("Product_Index_To");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductLotTo)
                    .HasColumnName("Product_Lot_To")
                    .HasMaxLength(50);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo).HasColumnName("Ref_Document_No");

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.StockAdjustmentIndex).HasColumnName("StockAdjustment_Index");

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagIndexTo).HasColumnName("Tag_Index_To");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");

                entity.HasOne(d => d.ItemStatusIndexNavigation)
                    .WithMany(p => p.ImTransferStockAdjustmentItem)
                    .HasForeignKey(d => d.ItemStatusIndex)
                    .HasConstraintName("FK_im_StockAdjustmentItem_ms_ItemStatus");

                entity.HasOne(d => d.LocationIndexNavigation)
                    .WithMany(p => p.ImTransferStockAdjustmentItem)
                    .HasForeignKey(d => d.LocationIndex)
                    .HasConstraintName("FK_im_StockAdjustmentItem_ms_Location");

                entity.HasOne(d => d.ProductConversionIndexNavigation)
                    .WithMany(p => p.ImTransferStockAdjustmentItem)
                    .HasForeignKey(d => d.ProductConversionIndex)
                    .HasConstraintName("FK_im_StockAdjustmentItem_ms_ProductConversion");

                entity.HasOne(d => d.ProductIndexNavigation)
                    .WithMany(p => p.ImTransferStockAdjustmentItem)
                    .HasForeignKey(d => d.ProductIndex)
                    .HasConstraintName("FK_im_StockAdjustmentItem_ms_Product");

                entity.HasOne(d => d.StockAdjustmentIndexNavigation)
                    .WithMany(p => p.ImTransferStockAdjustmentItem)
                    .HasForeignKey(d => d.StockAdjustmentIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_im_StockAdjustmentItem_im_StockAdjustment");
            });

            modelBuilder.Entity<ImTruckLoad>(entity =>
            {
                entity.HasKey(e => e.TruckLoadIndex);

                entity.ToTable("im_TruckLoad");

                entity.Property(e => e.TruckLoadIndex)
                    .HasColumnName("TruckLoad_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ContainerNo)
                    .HasColumnName("Container_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ContainerTypeId)
                    .HasColumnName("ContainerType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ContainerTypeIndex).HasColumnName("ContainerType_Index");

                entity.Property(e => e.ContainerTypeName)
                    .HasColumnName("ContainerType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnName("Delivery_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DockDoorId)
                    .HasColumnName("DockDoor_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DockDoorIndex).HasColumnName("DockDoor_Index");

                entity.Property(e => e.DockDoorName)
                    .HasColumnName("DockDoor_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Driver).HasMaxLength(200);

                entity.Property(e => e.IsPostShippmentDispatchDate)
                    .HasColumnName("IsPostShippmentDispatch_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PutawayStatus).HasColumnName("Putaway_Status");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToAddress)
                    .HasColumnName("ShipTo_Address")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToAddress)
                    .HasColumnName("SoldTo_Address")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TruckLoadDate)
                    .HasColumnName("TruckLoad_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TruckLoadNo)
                    .IsRequired()
                    .HasColumnName("TruckLoad_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TruckLoadRound)
                    .HasColumnName("TruckLoad_Round")
                    .HasMaxLength(200);

                entity.Property(e => e.TruckloadcloseDate)
                    .HasColumnName("truckloadclose_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.VehicleRegistration)
                    .HasColumnName("Vehicle_Registration")
                    .HasMaxLength(200);

                entity.Property(e => e.VehicleTypeId)
                    .HasColumnName("VehicleType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.VehicleTypeIndex).HasColumnName("VehicleType_Index");

                entity.Property(e => e.VehicleTypeName)
                    .HasColumnName("VehicleType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e._3plId)
                    .HasColumnName("3PL_Id")
                    .HasMaxLength(50);

                entity.Property(e => e._3plIndex).HasColumnName("3PL_Index");

                entity.Property(e => e._3plName)
                    .HasColumnName("3PL_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ImTruckLoadItem>(entity =>
            {
                entity.HasKey(e => e.TruckLoadItemIndex);

                entity.ToTable("im_TruckLoadItem");

                entity.Property(e => e.TruckLoadItemIndex)
                    .HasColumnName("TruckLoadItem_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CtnConfirmQty).HasColumnName("CTN_Confirm_Qty");

                entity.Property(e => e.CtnPrintQty).HasColumnName("CTN_Print_Qty");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .IsRequired()
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToAddress)
                    .HasColumnName("ShipTo_Address")
                    .HasMaxLength(4000);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToAddress)
                    .HasColumnName("SoldTo_Address")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(200);

                entity.Property(e => e.TruckLoadIndex).HasColumnName("TruckLoad_Index");

                entity.Property(e => e.TruckLoadRemark).HasColumnName("TruckLoad_Remark");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(2000);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(2000);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(2000);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ImTruckLoadItemDetail>(entity =>
            {
                entity.HasKey(e => e.TruckLoadItemDetailIndex);

                entity.ToTable("im_TruckLoadItemDetail");

                entity.Property(e => e.TruckLoadItemDetailIndex)
                    .HasColumnName("TruckLoadItemDetail_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.IsLoadCarton).HasColumnName("IsLoad_Carton");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(200);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TruckLoadIndex).HasColumnName("TruckLoad_Index");

                entity.Property(e => e.TruckLoadItemIndex).HasColumnName("TruckLoadItem_Index");

                entity.Property(e => e.TruckLoadRemark)
                    .HasColumnName("TruckLoad_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ImportConfig>(entity =>
            {
                entity.HasKey(e => e.ConfigId);

                entity.ToTable("Import_Config");

                entity.Property(e => e.ConfigId).HasColumnName("Config_ID");

                entity.Property(e => e.ConfigKey)
                    .HasColumnName("Config_Key")
                    .HasMaxLength(50);

                entity.Property(e => e.ConfigName)
                    .HasColumnName("Config_Name")
                    .HasMaxLength(100);

                entity.Property(e => e.ConfigValue)
                    .HasColumnName("Config_Value")
                    .HasMaxLength(200);

                entity.Property(e => e.ProgramName)
                    .HasColumnName("program_name")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ImportProductlocationLastTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("import_productlocation_last_temp");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Location)
                    .HasColumnName("location")
                    .HasMaxLength(20);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("product_id")
                    .HasMaxLength(20);

                entity.Property(e => e.ProductNameEng)
                    .HasColumnName("product_name_eng")
                    .HasMaxLength(500);

                entity.Property(e => e.ProductNameThai)
                    .HasColumnName("product_name_thai")
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<ImportProductlocationTemp>(entity =>
            {
                entity.HasKey(e => e.ProductId);

                entity.ToTable("import_productlocation_temp");

                entity.Property(e => e.ProductId)
                    .HasColumnName("product_id")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Location)
                    .HasColumnName("location")
                    .HasMaxLength(20);

                entity.Property(e => e.ProductNameEng)
                    .HasColumnName("product_name_eng")
                    .HasMaxLength(500);

                entity.Property(e => e.ProductNameThai)
                    .HasColumnName("product_name_thai")
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<Ism>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ISM");

                entity.Property(e => e.Location)
                    .HasColumnName("LOCATION")
                    .HasMaxLength(255);

                entity.Property(e => e.Sku)
                    .HasColumnName("SKU")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<LocationSuggest>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Barcode).HasMaxLength(255);

                entity.Property(e => e.Dept).HasMaxLength(255);

                entity.Property(e => e.F13).HasMaxLength(255);

                entity.Property(e => e.Group).HasMaxLength(255);

                entity.Property(e => e.Location).HasMaxLength(255);

                entity.Property(e => e.Location1)
                    .HasColumnName("Location_1")
                    .HasMaxLength(255);

                entity.Property(e => e.NonSale)
                    .HasColumnName("Non-sale")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductDiscruptionEng)
                    .HasColumnName("Product discruption ENG")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductDiscruptionTha)
                    .HasColumnName("Product discruption THA")
                    .HasMaxLength(255);

                entity.Property(e => e.RecevingBarcode)
                    .HasColumnName("Receving barcode")
                    .HasMaxLength(255);

                entity.Property(e => e.SubZone)
                    .HasColumnName("Sub zone")
                    .HasMaxLength(255);

                entity.Property(e => e.ZoneCode)
                    .HasColumnName("Zone Code")
                    .HasMaxLength(255);

                entity.Property(e => e.ZoneColor)
                    .HasColumnName("Zone color")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<LogIssuesBinbalance>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("log_issues_binbalance");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("create_by")
                    .HasMaxLength(30);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DeductedBinbalanceIndex).HasColumnName("deducted_binbalance_index");

                entity.Property(e => e.DeductedLocationIndex).HasColumnName("deducted_location_index");

                entity.Property(e => e.DeductedQty)
                    .HasColumnName("deducted_qty")
                    .HasColumnType("numeric(18, 3)");

                entity.Property(e => e.MarshalltaskIndex).HasColumnName("marshalltask_index");

                entity.Property(e => e.MarshalltaskitemIndex).HasColumnName("marshalltaskitem_index");

                entity.Property(e => e.PlangoodsissueIndex).HasColumnName("plangoodsissue_index");

                entity.Property(e => e.PlangoodsissueNo)
                    .HasColumnName("plangoodsissue_no")
                    .HasMaxLength(20);

                entity.Property(e => e.PlangoodsissueitemIndex).HasColumnName("plangoodsissueitem_index");

                entity.Property(e => e.ProcessIndex).HasColumnName("process_index");

                entity.Property(e => e.ProcessRemark)
                    .HasColumnName("process_remark")
                    .HasMaxLength(100);

                entity.Property(e => e.ProductId)
                    .HasColumnName("product_id")
                    .HasMaxLength(20);

                entity.Property(e => e.ProductIndex).HasColumnName("product_index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("product_name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyBeginShortchase)
                    .HasColumnName("qty_begin_shortchase")
                    .HasColumnType("numeric(18, 3)");
            });

            modelBuilder.Entity<LogIssuesSummary>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("log_issues_summary");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("create_by")
                    .HasMaxLength(30);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.MarshalltaskIndex).HasColumnName("marshalltask_index");

                entity.Property(e => e.MarshalltaskitemIndex).HasColumnName("marshalltaskitem_index");

                entity.Property(e => e.PlangoodsissueIndex).HasColumnName("plangoodsissue_index");

                entity.Property(e => e.PlangoodsissueNo)
                    .HasColumnName("plangoodsissue_no")
                    .HasMaxLength(20);

                entity.Property(e => e.PlangoodsissueitemIndex).HasColumnName("plangoodsissueitem_index");

                entity.Property(e => e.ProcessIndex).HasColumnName("process_index");

                entity.Property(e => e.ProcessRemark)
                    .HasColumnName("process_remark")
                    .HasMaxLength(100);

                entity.Property(e => e.ProductId)
                    .HasColumnName("product_id")
                    .HasMaxLength(20);

                entity.Property(e => e.ProductIndex).HasColumnName("product_index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("product_name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyBeginShortchase)
                    .HasColumnName("qty_begin_shortchase")
                    .HasColumnType("numeric(18, 3)");

                entity.Property(e => e.SumDeductedQty)
                    .HasColumnName("sum_deducted_qty")
                    .HasColumnType("numeric(18, 3)");
            });

            modelBuilder.Entity<LogUpdateBalanceCatchweight>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("log_update_balance_catchweight");

                entity.Property(e => e.BinBalanceIndex).HasColumnName("BinBalance_Index");

                entity.Property(e => e.BinBalanceIndexTo).HasColumnName("BinBalance_Index_to");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyReserve)
                    .HasColumnName("BinBalance_QtyReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.OldQtybal)
                    .HasColumnName("old_qtybal")
                    .HasColumnType("numeric(18, 3)");

                entity.Property(e => e.OldQtyres)
                    .HasColumnName("old_qtyres")
                    .HasColumnType("numeric(18, 3)");

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("product_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<LogWaveBinBalance>(entity =>
            {
                entity.HasKey(e => e.Index);

                entity.ToTable("log_WaveBinBalance");

                entity.Property(e => e.Index).HasColumnName("_Index");

                entity.Property(e => e.AddDate)
                    .HasColumnName("add_date")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.BinBalanceIndex).HasColumnName("BinBalance_Index");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyBegin)
                    .HasColumnName("BinBalance_QtyBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyReserve)
                    .HasColumnName("BinBalance_QtyReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceRatio)
                    .HasColumnName("BinBalance_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceStatus).HasColumnName("BinBalance_Status");

                entity.Property(e => e.BinBalanceVolumeBal)
                    .HasColumnName("BinBalance_VolumeBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceVolumeBegin)
                    .HasColumnName("BinBalance_VolumeBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceVolumeReserve)
                    .HasColumnName("BinBalance_VolumeReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightBal)
                    .HasColumnName("BinBalance_WeightBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightBegin)
                    .HasColumnName("BinBalance_WeightBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightReserve)
                    .HasColumnName("BinBalance_WeightReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveDate)
                    .HasColumnName("GoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveExpDate)
                    .HasColumnName("GoodsReceive_EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveItemLocationIndex).HasColumnName("GoodsReceiveItemLocation_Index");

                entity.Property(e => e.GoodsReceiveMfgDate)
                    .HasColumnName("GoodsReceive_MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveNo)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.GoodsReceiveProductConversionId)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.GoodsReceiveProductConversionIndex).HasColumnName("GoodsReceive_ProductConversion_Index");

                entity.Property(e => e.GoodsReceiveProductConversionName)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.IsUse).HasMaxLength(200);

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductShelfLifeD).HasColumnName("ProductShelfLife_D");

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.RefWavePickIndex)
                    .HasColumnName("Ref_WavePick_index")
                    .HasMaxLength(200);

                entity.Property(e => e.SqlCmd)
                    .HasColumnName("sqlCmd")
                    .HasMaxLength(3000);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign)
                    .HasColumnName("User_Assign")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<MakeImGoodsIssueItemLocation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("make_im_GoodsIssueItemLocation");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CancelStatus).HasColumnName("Cancel_Status");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemIndex)
                    .HasColumnName("GoodsIssueItem_Index")
                    .HasMaxLength(100);

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsReceiveItemIndex)
                    .HasColumnName("GoodsReceiveItem_Index")
                    .HasMaxLength(200);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MashallQty)
                    .HasColumnName("Mashall_Qty")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.MashallStatus).HasColumnName("Mashall_Status");

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PickingBy)
                    .HasColumnName("Picking_By")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingDate)
                    .HasColumnName("Picking_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PickingProductConversionIndex)
                    .HasColumnName("Picking_ProductConversion_Index")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingRef1)
                    .HasColumnName("Picking_Ref1")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingRef2)
                    .HasColumnName("Picking_Ref2")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex)
                    .HasColumnName("Ref_Document_Index")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentItemIndex)
                    .HasColumnName("Ref_DocumentItem_Index")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex)
                    .HasColumnName("Ref_Process_Index")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<MakeRefGoodsIssueItemLocation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("make_Ref_GoodsIssueItemLocation");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemIndex).HasColumnName("GoodsIssueItem_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");
            });

            modelBuilder.Entity<Ms3pl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ms_3PL");

                entity.Property(e => e.C3plId)
                    .HasColumnName("C3PL_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.C3plIndex).HasColumnName("C3PL_Index");

                entity.Property(e => e.C3plName)
                    .HasColumnName("C3PL_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsAddressCountry>(entity =>
            {
                entity.HasKey(e => e.CountryIndex)
                    .HasName("PK_ms_Address_Country");

                entity.ToTable("ms_AddressCountry");

                entity.Property(e => e.CountryIndex)
                    .HasColumnName("Country_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CountryId)
                    .HasColumnName("Country_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.CountryName)
                    .HasColumnName("Country_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.CountryNameEn)
                    .HasColumnName("Country_NameEN")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsAddressDistrict>(entity =>
            {
                entity.HasKey(e => e.DistrictIndex)
                    .HasName("PK_ms_Address_District");

                entity.ToTable("ms_AddressDistrict");

                entity.Property(e => e.DistrictIndex)
                    .HasColumnName("District_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CountryIndex).HasColumnName("Country_Index");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DistrictId)
                    .HasColumnName("District_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DistrictName)
                    .HasColumnName("District_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.DistrictNameEn)
                    .HasColumnName("District_NameEN")
                    .HasMaxLength(200);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.ProvinceIndex).HasColumnName("Province_Index");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsAddressPostcode>(entity =>
            {
                entity.HasKey(e => e.PostcodeIndex)
                    .HasName("PK_ms_Address_Postcode");

                entity.ToTable("ms_AddressPostcode");

                entity.Property(e => e.PostcodeIndex)
                    .HasColumnName("Postcode_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CountryIndex).HasColumnName("Country_Index");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DistrictIndex).HasColumnName("District_Index");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostcodeId)
                    .HasColumnName("Postcode_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PostcodeName)
                    .HasColumnName("Postcode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProvinceIndex).HasColumnName("Province_Index");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SubDistrictIndex).HasColumnName("SubDistrict_Index");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsAddressProvince>(entity =>
            {
                entity.HasKey(e => e.ProvinceIndex)
                    .HasName("PK_ms_Address_Province");

                entity.ToTable("ms_AddressProvince");

                entity.Property(e => e.ProvinceIndex)
                    .HasColumnName("Province_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CountryIndex).HasColumnName("Country_Index");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.ProvinceId)
                    .HasColumnName("Province_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProvinceName)
                    .HasColumnName("Province_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProvinceNameEn)
                    .HasColumnName("Province_NameEN")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsAddressSubDistrict>(entity =>
            {
                entity.HasKey(e => e.SubDistrictIndex)
                    .HasName("PK_ms_Address_SubDistrict");

                entity.ToTable("ms_AddressSubDistrict");

                entity.Property(e => e.SubDistrictIndex)
                    .HasColumnName("SubDistrict_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CountryIndex).HasColumnName("Country_Index");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DistrictIndex).HasColumnName("District_Index");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.ProvinceIndex).HasColumnName("Province_Index");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SubDistrictId)
                    .HasColumnName("SubDistrict__Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SubDistrictName)
                    .HasColumnName("SubDistrict_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsContainerType>(entity =>
            {
                entity.HasKey(e => e.ContainerTypeIndex);

                entity.ToTable("ms_ContainerType");

                entity.Property(e => e.ContainerTypeIndex)
                    .HasColumnName("ContainerType_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ContainerTypeId)
                    .HasColumnName("ContainerType_ID")
                    .HasMaxLength(50);

                entity.Property(e => e.ContainerTypeName)
                    .HasColumnName("ContainerType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsDockDoor>(entity =>
            {
                entity.HasKey(e => e.DockDoorIndex);

                entity.ToTable("ms_DockDoor");

                entity.Property(e => e.DockDoorIndex)
                    .HasColumnName("DockDoor_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DockDoorId)
                    .HasColumnName("DockDoor_ID")
                    .HasMaxLength(50);

                entity.Property(e => e.DockDoorName)
                    .HasColumnName("DockDoor_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsDocumentInterim>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ms_document_interim");

                entity.Property(e => e.DoctypeId)
                    .HasColumnName("doctype_id")
                    .HasMaxLength(10);

                entity.Property(e => e.DoctypeName)
                    .HasColumnName("doctype_name")
                    .HasMaxLength(50);

                entity.Property(e => e.LastNumber).HasColumnName("last_number");

                entity.Property(e => e.Prefix)
                    .HasColumnName("prefix")
                    .HasMaxLength(4);

                entity.Property(e => e.RunningSize).HasColumnName("running_size");
            });

            modelBuilder.Entity<MsDocumentType>(entity =>
            {
                entity.HasKey(e => e.DocumentTypeIndex);

                entity.ToTable("ms_DocumentType");

                entity.Property(e => e.DocumentTypeIndex)
                    .HasColumnName("DocumentType_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.FormatDate)
                    .HasColumnName("Format_Date")
                    .HasMaxLength(200);

                entity.Property(e => e.FormatDocument)
                    .HasColumnName("Format_Document")
                    .HasMaxLength(200);

                entity.Property(e => e.FormatRunning)
                    .HasColumnName("Format_Running")
                    .HasMaxLength(200);

                entity.Property(e => e.FormatText)
                    .HasColumnName("Format_Text")
                    .HasMaxLength(200);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.ProcessIndex).HasColumnName("Process_Index");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.ProcessIndexNavigation)
                    .WithMany(p => p.MsDocumentType)
                    .HasForeignKey(d => d.ProcessIndex)
                    .HasConstraintName("FK_ms_DocumentType_sy_Process");
            });

            modelBuilder.Entity<MsDocumentTypeItemStatus>(entity =>
            {
                entity.HasKey(e => e.DocumentTypeItemStatusIndex);

                entity.ToTable("ms_DocumentTypeItemStatus");

                entity.Property(e => e.DocumentTypeItemStatusIndex)
                    .HasColumnName("DocumentTypeItemStatus_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.DocumentTypeIndexNavigation)
                    .WithMany(p => p.MsDocumentTypeItemStatus)
                    .HasForeignKey(d => d.DocumentTypeIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_DocumentTypeItemStatus_ms_DocumentType");

                entity.HasOne(d => d.ItemStatusIndexNavigation)
                    .WithMany(p => p.MsDocumentTypeItemStatus)
                    .HasForeignKey(d => d.ItemStatusIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_DocumentTypeItemStatus_ms_ItemStatus");
            });

            modelBuilder.Entity<MsDocumentTypeNumber>(entity =>
            {
                entity.HasKey(e => e.DocumentTypeNumberIndex);

                entity.ToTable("ms_DocumentTypeNumber");

                entity.Property(e => e.DocumentTypeNumberIndex)
                    .HasColumnName("DocumentTypeNumber_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeNumberDay)
                    .HasColumnName("DocumentTypeNumber_Day")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentTypeNumberMonth)
                    .HasColumnName("DocumentTypeNumber_Month")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentTypeNumberRunning).HasColumnName("DocumentTypeNumber_Running");

                entity.Property(e => e.DocumentTypeNumberYear)
                    .HasColumnName("DocumentTypeNumber_Year")
                    .HasMaxLength(200);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .IsRowVersion()
                    .IsConcurrencyToken();

                entity.HasOne(d => d.DocumentTypeIndexNavigation)
                    .WithMany(p => p.MsDocumentTypeNumber)
                    .HasForeignKey(d => d.DocumentTypeIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_DocumentTypeNumber_ms_DocumentType");
            });

            modelBuilder.Entity<MsEquipment>(entity =>
            {
                entity.HasKey(e => e.EquipmentIndex)
                    .HasName("PK_ms_Equipment_1");

                entity.ToTable("ms_Equipment");

                entity.Property(e => e.EquipmentIndex)
                    .HasColumnName("Equipment_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentSubTypeIndex).HasColumnName("EquipmentSubType_Index");

                entity.Property(e => e.EquipmentTypeIndex).HasColumnName("EquipmentType_Index");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.EquipmentSubTypeIndexNavigation)
                    .WithMany(p => p.MsEquipment)
                    .HasForeignKey(d => d.EquipmentSubTypeIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_Equipment_ms_EquipmentSubType");

                entity.HasOne(d => d.EquipmentTypeIndexNavigation)
                    .WithMany(p => p.MsEquipment)
                    .HasForeignKey(d => d.EquipmentTypeIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_Equipment_ms_EquipmentType");
            });

            modelBuilder.Entity<MsEquipmentItem>(entity =>
            {
                entity.HasKey(e => e.EquipmentItemIndex);

                entity.ToTable("ms_EquipmentItem");

                entity.Property(e => e.EquipmentItemIndex)
                    .HasColumnName("EquipmentItem_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsEquipmentSubType>(entity =>
            {
                entity.HasKey(e => e.EquipmentSubTypeIndex)
                    .HasName("PK_ms_EquipmentSubType_1");

                entity.ToTable("ms_EquipmentSubType");

                entity.Property(e => e.EquipmentSubTypeIndex)
                    .HasColumnName("EquipmentSubType_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EquipmentSubTypeId)
                    .HasColumnName("EquipmentSubType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentSubTypeName)
                    .HasColumnName("EquipmentSubType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentTypeIndex).HasColumnName("EquipmentType_Index");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.EquipmentTypeIndexNavigation)
                    .WithMany(p => p.MsEquipmentSubType)
                    .HasForeignKey(d => d.EquipmentTypeIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_EquipmentSubType_ms_EquipmentType");
            });

            modelBuilder.Entity<MsEquipmentType>(entity =>
            {
                entity.HasKey(e => e.EquipmentTypeIndex)
                    .HasName("PK_ms_EquipmentType_1");

                entity.ToTable("ms_EquipmentType");

                entity.Property(e => e.EquipmentTypeIndex)
                    .HasColumnName("EquipmentType_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EquipmentTypeId)
                    .HasColumnName("EquipmentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentTypeName)
                    .HasColumnName("EquipmentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsItemStatus>(entity =>
            {
                entity.HasKey(e => e.ItemStatusIndex);

                entity.ToTable("ms_ItemStatus");

                entity.Property(e => e.ItemStatusIndex)
                    .HasColumnName("ItemStatus_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsLocation>(entity =>
            {
                entity.HasKey(e => e.LocationIndex);

                entity.ToTable("ms_Location");

                entity.Property(e => e.LocationIndex)
                    .HasColumnName("Location_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.LocationAisleIndex).HasColumnName("LocationAisle_Index");

                entity.Property(e => e.LocationAspect)
                    .HasColumnName("Location_Aspect")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationBay).HasColumnName("Location_Bay");

                entity.Property(e => e.LocationChekDigit)
                    .HasColumnName("Location_ChekDigit")
                    .HasMaxLength(10);

                entity.Property(e => e.LocationDepth).HasColumnName("Location_Depth");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationLevel).HasColumnName("Location_Level");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationTypeIndex).HasColumnName("LocationType_Index");

                entity.Property(e => e.LocationVolDepth)
                    .HasColumnName("LocationVol_Depth")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.LocationVolHeight)
                    .HasColumnName("LocationVol_Height")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.LocationVolWidth)
                    .HasColumnName("LocationVol_Width")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.MaxPallet)
                    .HasColumnName("Max_Pallet")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.MaxQty)
                    .HasColumnName("Max_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.MaxVolume)
                    .HasColumnName("Max_Volume")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.MaxWeight)
                    .HasColumnName("Max_Weight")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PutAwaySeq).HasColumnName("PutAway_Seq");

                entity.Property(e => e.RoomIndex).HasColumnName("Room_Index");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.HasOne(d => d.LocationAisleIndexNavigation)
                    .WithMany(p => p.MsLocation)
                    .HasForeignKey(d => d.LocationAisleIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_Location_ms_LocationLock");

                entity.HasOne(d => d.LocationTypeIndexNavigation)
                    .WithMany(p => p.MsLocation)
                    .HasForeignKey(d => d.LocationTypeIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_Location_ms_LocationType");

                entity.HasOne(d => d.RoomIndexNavigation)
                    .WithMany(p => p.MsLocation)
                    .HasForeignKey(d => d.RoomIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_Location_ms_Room");

                entity.HasOne(d => d.WarehouseIndexNavigation)
                    .WithMany(p => p.MsLocation)
                    .HasForeignKey(d => d.WarehouseIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_Location_ms_Warehouse");
            });

            modelBuilder.Entity<MsLocationAisle>(entity =>
            {
                entity.HasKey(e => e.LocationAisleIndex)
                    .HasName("PK_ms_LocationLock");

                entity.ToTable("ms_LocationAisle");

                entity.Property(e => e.LocationAisleIndex)
                    .HasColumnName("LocationAisle_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.LocationLockId)
                    .HasColumnName("LocationLock_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationLockName)
                    .HasColumnName("LocationLock_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsLocationEquipment>(entity =>
            {
                entity.HasKey(e => e.LocationEquipmentIndex);

                entity.ToTable("ms_LocationEquipment");

                entity.Property(e => e.LocationEquipmentIndex)
                    .HasColumnName("LocationEquipment_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.LocationEquipmentId)
                    .HasColumnName("LocationEquipment_Id")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.EquipmentIndexNavigation)
                    .WithMany(p => p.MsLocationEquipment)
                    .HasForeignKey(d => d.EquipmentIndex)
                    .HasConstraintName("FK_ms_LocationEquipment_ms_Equipment");

                entity.HasOne(d => d.LocationIndexNavigation)
                    .WithMany(p => p.MsLocationEquipment)
                    .HasForeignKey(d => d.LocationIndex)
                    .HasConstraintName("FK_ms_LocationEquipment_ms_Location");
            });

            modelBuilder.Entity<MsLocationType>(entity =>
            {
                entity.HasKey(e => e.LocationTypeIndex);

                entity.ToTable("ms_LocationType");

                entity.Property(e => e.LocationTypeIndex)
                    .HasColumnName("LocationType_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.LocationTypeId)
                    .HasColumnName("LocationType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationTypeName)
                    .HasColumnName("LocationType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsLocationWorkArea>(entity =>
            {
                entity.HasKey(e => e.LocationWorkAreaIndex);

                entity.ToTable("ms_LocationWorkArea");

                entity.HasIndex(e => e.LocationIndex);

                entity.HasIndex(e => e.WorkAreaIndex);

                entity.Property(e => e.LocationWorkAreaIndex)
                    .HasColumnName("LocationWorkArea_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationWorkAreaId)
                    .HasColumnName("LocationWorkArea_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WorkAreaIndex).HasColumnName("WorkArea_Index");

                entity.HasOne(d => d.LocationIndexNavigation)
                    .WithMany(p => p.MsLocationWorkArea)
                    .HasForeignKey(d => d.LocationIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_LocationWorkArea_ms_Location");

                entity.HasOne(d => d.WorkAreaIndexNavigation)
                    .WithMany(p => p.MsLocationWorkArea)
                    .HasForeignKey(d => d.WorkAreaIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_LocationWorkArea_ms_WorkArea");
            });

            modelBuilder.Entity<MsOwner>(entity =>
            {
                entity.HasKey(e => e.OwnerIndex);

                entity.ToTable("ms_Owner");

                entity.Property(e => e.OwnerIndex)
                    .HasColumnName("Owner_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ContactEmail)
                    .HasColumnName("Contact_Email")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactEmail2)
                    .HasColumnName("Contact_Email2")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactEmail3)
                    .HasColumnName("Contact_Email3")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactPerson)
                    .HasColumnName("Contact_Person")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactPerson2)
                    .HasColumnName("Contact_Person2")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactPerson3)
                    .HasColumnName("Contact_Person3")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactTel)
                    .HasColumnName("Contact_Tel")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactTel2)
                    .HasColumnName("Contact_Tel2")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactTel3)
                    .HasColumnName("Contact_Tel3")
                    .HasMaxLength(200);

                entity.Property(e => e.CountryIndex).HasColumnName("Country_Index");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DistrictIndex).HasColumnName("District_Index");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.OwnerAddress)
                    .HasColumnName("Owner_Address")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerBarcode)
                    .HasColumnName("Owner_Barcode")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerEmail)
                    .HasColumnName("Owner_Email")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerFax)
                    .HasColumnName("Owner_Fax")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerMobile)
                    .HasColumnName("Owner_Mobile")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerTaxId)
                    .HasColumnName("Owner_TaxID")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerTel)
                    .HasColumnName("Owner_Tel")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerTypeIndex).HasColumnName("OwnerType_Index");

                entity.Property(e => e.PostcodeIndex).HasColumnName("Postcode_Index");

                entity.Property(e => e.ProvinceIndex).HasColumnName("Province_Index");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SubDistrictIndex).HasColumnName("SubDistrict_Index");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.OwnerTypeIndexNavigation)
                    .WithMany(p => p.MsOwner)
                    .HasForeignKey(d => d.OwnerTypeIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_Owner_ms_OwnerType");
            });

            modelBuilder.Entity<MsOwnerSoldTo>(entity =>
            {
                entity.HasKey(e => e.OwnerSoldToIndex);

                entity.ToTable("ms_OwnerSoldTo");

                entity.Property(e => e.OwnerSoldToIndex)
                    .HasColumnName("OwnerSoldTo_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerSoldToId)
                    .HasColumnName("OwnerSoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.OwnerIndexNavigation)
                    .WithMany(p => p.MsOwnerSoldTo)
                    .HasForeignKey(d => d.OwnerIndex)
                    .HasConstraintName("FK_ms_OwnerSoldTo_ms_Owner");

                entity.HasOne(d => d.SoldToIndexNavigation)
                    .WithMany(p => p.MsOwnerSoldTo)
                    .HasForeignKey(d => d.SoldToIndex)
                    .HasConstraintName("FK_ms_OwnerSoldTo_ms_SoldTo");
            });

            modelBuilder.Entity<MsOwnerType>(entity =>
            {
                entity.HasKey(e => e.OwnerTypeIndex);

                entity.ToTable("ms_OwnerType");

                entity.Property(e => e.OwnerTypeIndex)
                    .HasColumnName("OwnerType_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.OwnerTypeId)
                    .HasColumnName("OwnerType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerTypeName)
                    .HasColumnName("OwnerType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsOwnerVendor>(entity =>
            {
                entity.HasKey(e => e.OwnerVendorIndex);

                entity.ToTable("ms_OwnerVendor");

                entity.Property(e => e.OwnerVendorIndex)
                    .HasColumnName("OwnerVendor_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerVendorId)
                    .HasColumnName("OwnerVendor_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.VendorIndex).HasColumnName("Vendor_Index");

                entity.HasOne(d => d.OwnerIndexNavigation)
                    .WithMany(p => p.MsOwnerVendor)
                    .HasForeignKey(d => d.OwnerIndex)
                    .HasConstraintName("FK_ms_OwnerVendor_ms_Owner");

                entity.HasOne(d => d.VendorIndexNavigation)
                    .WithMany(p => p.MsOwnerVendor)
                    .HasForeignKey(d => d.VendorIndex)
                    .HasConstraintName("FK_ms_OwnerVendor_ms_Vendor");
            });

            modelBuilder.Entity<MsPackStation>(entity =>
            {
                entity.HasKey(e => e.PackStationIndex);

                entity.ToTable("ms_PackStation");

                entity.Property(e => e.PackStationIndex)
                    .HasColumnName("PackStation_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.PackStationId)
                    .HasColumnName("PackStation_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PackStationName)
                    .HasColumnName("PackStation_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsPallet>(entity =>
            {
                entity.HasKey(e => e.PalletIndex);

                entity.ToTable("ms_Pallet");

                entity.Property(e => e.PalletIndex)
                    .HasColumnName("Pallet_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.PalletId)
                    .HasColumnName("Pallet_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PalletName)
                    .HasColumnName("Pallet_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PalletTypeIndex).HasColumnName("PalletType_Index");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.PalletTypeIndexNavigation)
                    .WithMany(p => p.MsPallet)
                    .HasForeignKey(d => d.PalletTypeIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_Pallet_ms_PalletType");
            });

            modelBuilder.Entity<MsPalletType>(entity =>
            {
                entity.HasKey(e => e.PalletTypeIndex);

                entity.ToTable("ms_PalletType");

                entity.Property(e => e.PalletTypeIndex)
                    .HasColumnName("PalletType_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.PalletTypeId)
                    .HasColumnName("PalletType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PalletTypeName)
                    .HasColumnName("PalletType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsProduct>(entity =>
            {
                entity.HasKey(e => e.ProductIndex);

                entity.ToTable("ms_Product");

                entity.HasIndex(e => e.ProductCategoryIndex);

                entity.HasIndex(e => e.ProductConversionIndex);

                entity.HasIndex(e => e.ProductId)
                    .HasName("IX_ms_ProductID");

                entity.HasIndex(e => e.ProductSubTypeIndex);

                entity.HasIndex(e => e.ProductTypeIndex);

                entity.Property(e => e.ProductIndex)
                    .HasColumnName("Product_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_Id")
                    .HasMaxLength(10);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CustomAttribute1).HasColumnName("custom_attribute_1");

                entity.Property(e => e.CustomAttribute1DateFrom)
                    .HasColumnName("custom_attribute_1_date_from")
                    .HasColumnType("date");

                entity.Property(e => e.CustomAttribute1DateTo)
                    .HasColumnName("custom_attribute_1_date_to")
                    .HasColumnType("date");

                entity.Property(e => e.CustomAttribute2).HasColumnName("custom_attribute_2");

                entity.Property(e => e.CustomAttribute3).HasColumnName("custom_attribute_3");

                entity.Property(e => e.CustomAttribute4).HasColumnName("custom_attribute_4");

                entity.Property(e => e.CustomAttribute5).HasColumnName("custom_attribute_5");

                entity.Property(e => e.CustomAttributeInterfaceFlag).HasColumnName("custom_attribute_interface_flag");

                entity.Property(e => e.CustomAttributeValue1)
                    .HasColumnName("custom_attribute_value_1")
                    .HasMaxLength(20);

                entity.Property(e => e.DeptId)
                    .HasColumnName("Dept_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.DeptName)
                    .HasColumnName("Dept_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ErrorInterface)
                    .HasColumnName("Error_Interface")
                    .HasMaxLength(9);

                entity.Property(e => e.ErrorInterfaceDesc)
                    .HasColumnName("Error_Interface_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsExpDate).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsLot).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsPack).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSerial).HasDefaultValueSql("((0))");

                entity.Property(e => e.MinimumStock).HasColumnName("minimum_stock");

                entity.Property(e => e.MlorDay).HasColumnName("MLOR_day");

                entity.Property(e => e.ProductCategoryIndex).HasColumnName("ProductCategory_Index");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductImagePath)
                    .HasColumnName("ProductImage_Path")
                    .HasMaxLength(500);

                entity.Property(e => e.ProductItemLifeD).HasColumnName("ProductItemLife_D");

                entity.Property(e => e.ProductItemLifeM).HasColumnName("ProductItemLife_M");

                entity.Property(e => e.ProductItemLifeY).HasColumnName("ProductItemLife_Y");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductShelfLifeD).HasColumnName("ProductShelfLife_D");

                entity.Property(e => e.ProductSubTypeIndex).HasColumnName("ProductSubType_Index");

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductTypeIndex).HasColumnName("ProductType_Index");

                entity.Property(e => e.PutawayType)
                    .HasColumnName("putaway_type")
                    .HasMaxLength(20);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.StatusInsertInterface)
                    .HasColumnName("Status_Insert_Interface")
                    .HasMaxLength(2);

                entity.Property(e => e.StatusInterface)
                    .HasColumnName("Status_Interface")
                    .HasMaxLength(1);

                entity.Property(e => e.SubDeptId)
                    .HasColumnName("SubDept_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.SubDeptName)
                    .HasColumnName("SubDept_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.ProductCategoryIndexNavigation)
                    .WithMany(p => p.MsProduct)
                    .HasForeignKey(d => d.ProductCategoryIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_Product_ms_ProductCategory");

                entity.HasOne(d => d.ProductSubTypeIndexNavigation)
                    .WithMany(p => p.MsProduct)
                    .HasForeignKey(d => d.ProductSubTypeIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_Product_ms_ProductSubType");

                entity.HasOne(d => d.ProductTypeIndexNavigation)
                    .WithMany(p => p.MsProduct)
                    .HasForeignKey(d => d.ProductTypeIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_Product_ms_ProductType");
            });

            modelBuilder.Entity<MsProductCatchWeight>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ms_ProductCatchWeight");

                entity.HasIndex(e => e.SkuBrcd)
                    .HasName("IX_ms_ProductCatchWeight");

                entity.Property(e => e.Division)
                    .HasColumnName("DIVISION")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemType)
                    .HasColumnName("ITEM_TYPE")
                    .HasMaxLength(200);

                entity.Property(e => e.SkuBrcd)
                    .HasColumnName("SKU_BRCD")
                    .HasMaxLength(20);

                entity.Property(e => e.SkuDesc)
                    .HasColumnName("SKU_DESC")
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<MsProductCategory>(entity =>
            {
                entity.HasKey(e => e.ProductCategoryIndex)
                    .HasName("PK_ms_ProductCategory_1");

                entity.ToTable("ms_ProductCategory");

                entity.Property(e => e.ProductCategoryIndex)
                    .HasColumnName("ProductCategory_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.ProductCategoryId)
                    .IsRequired()
                    .HasColumnName("ProductCategory_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductCategoryName)
                    .IsRequired()
                    .HasColumnName("ProductCategory_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsProductConversion>(entity =>
            {
                entity.HasKey(e => e.ProductConversionIndex);

                entity.ToTable("ms_ProductConversion");

                entity.HasIndex(e => e.ProductIndex)
                    .HasName("IX_ms_ProductConversion");

                entity.Property(e => e.ProductConversionIndex)
                    .HasColumnName("ProductConversion_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.ProductConversionHeight)
                    .HasColumnName("ProductConversion_Height")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionLength)
                    .HasColumnName("ProductConversion_Length")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionRatio)
                    .HasColumnName("ProductConversion_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionVolume)
                    .HasColumnName("ProductConversion_Volume")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionVolumeRatio)
                    .HasColumnName("ProductConversion_VolumeRatio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionWeight)
                    .HasColumnName("ProductConversion_Weight")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionWidth)
                    .HasColumnName("ProductConversion_Width")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsProductConversionBarcode>(entity =>
            {
                entity.HasKey(e => e.ProductConversionBarcodeIndex);

                entity.ToTable("ms_ProductConversionBarcode");

                entity.HasIndex(e => e.ProductConversionBarcode)
                    .HasName("ms_ProductConversionBarcode_index_2");

                entity.HasIndex(e => e.ProductConversionIndex);

                entity.HasIndex(e => e.ProductIndex);

                entity.HasIndex(e => new { e.ProductIndex, e.ProductConversionBarcode })
                    .HasName("ms_ProductConversionBarcode_index_1");

                entity.Property(e => e.ProductConversionBarcodeIndex)
                    .HasColumnName("ProductConversionBarcode_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionBarcodeId)
                    .IsRequired()
                    .HasColumnName("ProductConversionBarcode_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.OwnerIndexNavigation)
                    .WithMany(p => p.MsProductConversionBarcode)
                    .HasForeignKey(d => d.OwnerIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_ProductConversionBarcode_ms_Owner");

                entity.HasOne(d => d.ProductConversionIndexNavigation)
                    .WithMany(p => p.MsProductConversionBarcode)
                    .HasForeignKey(d => d.ProductConversionIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_ProductConversionBarcode_ms_ProductConversion");

                entity.HasOne(d => d.ProductIndexNavigation)
                    .WithMany(p => p.MsProductConversionBarcode)
                    .HasForeignKey(d => d.ProductIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_ProductConversionBarcode_ms_Product");
            });

            modelBuilder.Entity<MsProductOwner>(entity =>
            {
                entity.HasKey(e => e.ProductOwnerIndex);

                entity.ToTable("ms_ProductOwner");

                entity.Property(e => e.ProductOwnerIndex)
                    .HasColumnName("ProductOwner_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductOwnerId)
                    .HasColumnName("ProductOwner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.OwnerIndexNavigation)
                    .WithMany(p => p.MsProductOwner)
                    .HasForeignKey(d => d.OwnerIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_ProductOwner_ms_Owner");

                entity.HasOne(d => d.ProductIndexNavigation)
                    .WithMany(p => p.MsProductOwner)
                    .HasForeignKey(d => d.ProductIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_ProductOwner_ms_Product");
            });

            modelBuilder.Entity<MsProductSubType>(entity =>
            {
                entity.HasKey(e => e.ProductSubTypeIndex)
                    .HasName("PK_ms_ProductSubType_Index");

                entity.ToTable("ms_ProductSubType");

                entity.Property(e => e.ProductSubTypeIndex)
                    .HasColumnName("ProductSubType_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.ProductSubTypeId)
                    .IsRequired()
                    .HasColumnName("ProductSubType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductSubTypeName)
                    .IsRequired()
                    .HasColumnName("ProductSubType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductTypeIndex).HasColumnName("ProductType_Index");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.ProductTypeIndexNavigation)
                    .WithMany(p => p.MsProductSubType)
                    .HasForeignKey(d => d.ProductTypeIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_ProductSubType_ms_ProductType");
            });

            modelBuilder.Entity<MsProductType>(entity =>
            {
                entity.HasKey(e => e.ProductTypeIndex);

                entity.ToTable("ms_ProductType");

                entity.Property(e => e.ProductTypeIndex)
                    .HasColumnName("ProductType_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.ProductCategoryIndex).HasColumnName("ProductCategory_Index");

                entity.Property(e => e.ProductTypeId)
                    .IsRequired()
                    .HasColumnName("ProductType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductTypeName)
                    .IsRequired()
                    .HasColumnName("ProductType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsProductspecialtag>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ms_productspecialtag");

                entity.Property(e => e.IsCatchweight)
                    .HasColumnName("is_catchweight")
                    .HasMaxLength(1);

                entity.Property(e => e.ProductId)
                    .HasColumnName("product_id")
                    .HasMaxLength(20);

                entity.Property(e => e.ProductIndex).HasColumnName("product_index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("product_name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondname)
                    .HasColumnName("product_secondname")
                    .HasMaxLength(200);

                entity.Property(e => e.TagKey)
                    .HasColumnName("tag_key")
                    .HasMaxLength(20);

                entity.Property(e => e.TagType)
                    .HasColumnName("tag_type")
                    .HasMaxLength(10);

                entity.Property(e => e.TagValue)
                    .HasColumnName("tag_value")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<MsProductspecialtagLastTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ms_productspecialtag_last_temp");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ProductId)
                    .HasColumnName("product_id")
                    .HasMaxLength(20);

                entity.Property(e => e.ProductIndex).HasColumnName("product_index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("product_name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondname)
                    .HasColumnName("product_secondname")
                    .HasMaxLength(200);

                entity.Property(e => e.TagKey)
                    .HasColumnName("tag_key")
                    .HasMaxLength(20);

                entity.Property(e => e.TagType)
                    .HasColumnName("tag_type")
                    .HasMaxLength(10);

                entity.Property(e => e.TagValue)
                    .HasColumnName("tag_value")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<MsProductspecialtagTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ms_productspecialtag_temp");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ProductId)
                    .HasColumnName("product_id")
                    .HasMaxLength(20);

                entity.Property(e => e.ProductIndex).HasColumnName("product_index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("product_name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondname)
                    .HasColumnName("product_secondname")
                    .HasMaxLength(200);

                entity.Property(e => e.TagKey)
                    .HasColumnName("tag_key")
                    .HasMaxLength(20);

                entity.Property(e => e.TagType)
                    .HasColumnName("tag_type")
                    .HasMaxLength(10);

                entity.Property(e => e.TagValue)
                    .HasColumnName("tag_value")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<MsReasonCode>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ms_ReasonCode");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ProcessIndex).HasColumnName("Process_Index");

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsRoom>(entity =>
            {
                entity.HasKey(e => e.RoomIndex);

                entity.ToTable("ms_Room");

                entity.Property(e => e.RoomIndex)
                    .HasColumnName("Room_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.RoomId)
                    .HasColumnName("Room_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoomName)
                    .HasColumnName("Room_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.HasOne(d => d.WarehouseIndexNavigation)
                    .WithMany(p => p.MsRoom)
                    .HasForeignKey(d => d.WarehouseIndex)
                    .HasConstraintName("FK_ms_Room_ms_Warehouse");
            });

            modelBuilder.Entity<MsRound>(entity =>
            {
                entity.HasKey(e => e.RoundIndex);

                entity.ToTable("ms_Round");

                entity.Property(e => e.RoundIndex)
                    .HasColumnName("Round_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsRoundTimeTable>(entity =>
            {
                entity.HasKey(e => new { e.OrderType, e.OrderRound, e.LineNo })
                    .HasName("PK__ms_Round__AA01F225F0F3AC13");

                entity.ToTable("ms_RoundTimeTable");

                entity.Property(e => e.OrderType)
                    .HasColumnName("order_type")
                    .HasMaxLength(20);

                entity.Property(e => e.OrderRound).HasColumnName("order_round");

                entity.Property(e => e.LineNo).HasColumnName("line_no");

                entity.Property(e => e.Dateend).HasColumnName("dateend");

                entity.Property(e => e.Datestart).HasColumnName("datestart");

                entity.Property(e => e.DuedateAdd).HasColumnName("duedate_add");

                entity.Property(e => e.OrderTime)
                    .HasColumnName("order_time")
                    .HasMaxLength(20);

                entity.Property(e => e.Timeend)
                    .HasColumnName("timeend")
                    .HasMaxLength(20);

                entity.Property(e => e.Timestart)
                    .HasColumnName("timestart")
                    .HasMaxLength(20);

                entity.Property(e => e.TruckRound).HasColumnName("truck_round");
            });

            modelBuilder.Entity<MsRoute>(entity =>
            {
                entity.HasKey(e => e.RouteIndex);

                entity.ToTable("ms_Route");

                entity.HasIndex(e => e.RouteName);

                entity.HasIndex(e => e.SubRouteIndex);

                entity.Property(e => e.RouteIndex)
                    .HasColumnName("Route_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.SubRouteIndex).HasColumnName("SubRoute_Index");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsRoutepostcodeMapping>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ms_routepostcode_mapping");

                entity.Property(e => e.PostCode)
                    .HasColumnName("post_code")
                    .HasMaxLength(10);

                entity.Property(e => e.RouteId)
                    .HasColumnName("route_id")
                    .HasMaxLength(20);

                entity.Property(e => e.RouteIndex).HasColumnName("route_index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("route_name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<MsRule>(entity =>
            {
                entity.HasKey(e => e.RuleIndex);

                entity.ToTable("ms_Rule");

                entity.Property(e => e.RuleIndex)
                    .HasColumnName("Rule_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.ProcessIndex).HasColumnName("Process_Index");

                entity.Property(e => e.RuleId)
                    .HasColumnName("Rule_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RuleName)
                    .HasColumnName("Rule_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RuleSeq).HasColumnName("Rule_Seq");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.ProcessIndexNavigation)
                    .WithMany(p => p.MsRule)
                    .HasForeignKey(d => d.ProcessIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_Rule_sy_Process");
            });

            modelBuilder.Entity<MsRuleCondition>(entity =>
            {
                entity.HasKey(e => e.RuleConditionIndex);

                entity.ToTable("ms_RuleCondition");

                entity.Property(e => e.RuleConditionIndex)
                    .HasColumnName("RuleCondition_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsDestination).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSearch).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSort).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSource).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.RuleConditionFieldIndex).HasColumnName("RuleConditionField_Index");

                entity.Property(e => e.RuleConditionOperationIndex).HasColumnName("RuleConditionOperation_Index");

                entity.Property(e => e.RuleConditionParam)
                    .HasColumnName("RuleCondition_Param")
                    .HasMaxLength(200);

                entity.Property(e => e.RuleConditionSeq).HasColumnName("RuleCondition_Seq");

                entity.Property(e => e.RuleIndex).HasColumnName("Rule_Index");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.RuleConditionFieldIndexNavigation)
                    .WithMany(p => p.MsRuleCondition)
                    .HasForeignKey(d => d.RuleConditionFieldIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_RuleCondition_sy_RuleConditionField");

                entity.HasOne(d => d.RuleConditionOperationIndexNavigation)
                    .WithMany(p => p.MsRuleCondition)
                    .HasForeignKey(d => d.RuleConditionOperationIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_RuleCondition_sy_RuleConditionOperation");

                entity.HasOne(d => d.RuleIndexNavigation)
                    .WithMany(p => p.MsRuleCondition)
                    .HasForeignKey(d => d.RuleIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_RuleCondition_ms_Rule");
            });

            modelBuilder.Entity<MsRuleZone>(entity =>
            {
                entity.HasKey(e => e.RuleZoneIndex);

                entity.ToTable("ms_RuleZone");

                entity.Property(e => e.RuleZoneIndex)
                    .HasColumnName("RuleZone_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.RuleIndex).HasColumnName("Rule_Index");

                entity.Property(e => e.RuleZoneSeq).HasColumnName("RuleZone_Seq");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.HasOne(d => d.RuleIndexNavigation)
                    .WithMany(p => p.MsRuleZone)
                    .HasForeignKey(d => d.RuleIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_RuleZone_ms_Rule");

                entity.HasOne(d => d.ZoneIndexNavigation)
                    .WithMany(p => p.MsRuleZone)
                    .HasForeignKey(d => d.ZoneIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_RuleZone_ms_Zone");
            });

            modelBuilder.Entity<MsShipTo>(entity =>
            {
                entity.HasKey(e => e.ShipToIndex);

                entity.ToTable("ms_ShipTo");

                entity.Property(e => e.ShipToIndex)
                    .HasColumnName("ShipTo_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ContactEmail)
                    .HasColumnName("Contact_Email")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactEmail2)
                    .HasColumnName("Contact_Email2")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactEmail3)
                    .HasColumnName("Contact_Email3")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactPerson)
                    .HasColumnName("Contact_Person")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactPerson2)
                    .HasColumnName("Contact_Person2")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactPerson3)
                    .HasColumnName("Contact_Person3")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactTel)
                    .HasColumnName("Contact_Tel")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactTel2)
                    .HasColumnName("Contact_Tel2")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactTel3)
                    .HasColumnName("Contact_Tel3")
                    .HasMaxLength(200);

                entity.Property(e => e.CountryIndex).HasColumnName("Country_Index");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DistrictIndex).HasColumnName("District_Index");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostcodeIndex).HasColumnName("Postcode_Index");

                entity.Property(e => e.ProvinceIndex).HasColumnName("Province_Index");

                entity.Property(e => e.ShipToAddress)
                    .HasColumnName("ShipTo_Address")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToBarcode)
                    .HasColumnName("ShipTo_Barcode")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToEmail)
                    .HasColumnName("ShipTo_Email")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToFax)
                    .HasColumnName("ShipTo_Fax")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToMobile)
                    .HasColumnName("ShipTo_Mobile")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToTaxId)
                    .HasColumnName("ShipTo_TaxID")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToTel)
                    .HasColumnName("ShipTo_Tel")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToTypeIndex).HasColumnName("ShipToType_Index");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SubDistrictIndex).HasColumnName("SubDistrict_Index");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.ShipToTypeIndexNavigation)
                    .WithMany(p => p.MsShipTo)
                    .HasForeignKey(d => d.ShipToTypeIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_ShipTo_ms_ShipToType");
            });

            modelBuilder.Entity<MsShipToType>(entity =>
            {
                entity.HasKey(e => e.ShipToTypeIndex);

                entity.ToTable("ms_ShipToType");

                entity.Property(e => e.ShipToTypeIndex)
                    .HasColumnName("ShipToType_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.ShipToTypeId)
                    .HasColumnName("ShipToType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToTypeName)
                    .HasColumnName("ShipToType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsSoldTo>(entity =>
            {
                entity.HasKey(e => e.SoldToIndex);

                entity.ToTable("ms_SoldTo");

                entity.Property(e => e.SoldToIndex)
                    .HasColumnName("SoldTo_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ContactEmail)
                    .HasColumnName("Contact_Email")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactEmail2)
                    .HasColumnName("Contact_Email2")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactEmail3)
                    .HasColumnName("Contact_Email3")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactPerson)
                    .HasColumnName("Contact_Person")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactPerson2)
                    .HasColumnName("Contact_Person2")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactPerson3)
                    .HasColumnName("Contact_Person3")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactTel)
                    .HasColumnName("Contact_Tel")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactTel2)
                    .HasColumnName("Contact_Tel2")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactTel3)
                    .HasColumnName("Contact_Tel3")
                    .HasMaxLength(200);

                entity.Property(e => e.CountryIndex).HasColumnName("Country_Index");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DistrictIndex).HasColumnName("District_Index");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostcodeIndex).HasColumnName("Postcode_Index");

                entity.Property(e => e.ProvinceIndex).HasColumnName("Province_Index");

                entity.Property(e => e.SoldToAddress)
                    .HasColumnName("SoldTo_Address")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToBarcode)
                    .HasColumnName("SoldTo_Barcode")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToClose)
                    .HasColumnName("SoldTo_Close")
                    .HasColumnType("datetime");

                entity.Property(e => e.SoldToEmail)
                    .HasColumnName("SoldTo_Email")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToFax)
                    .HasColumnName("SoldTo_Fax")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToMobile)
                    .HasColumnName("SoldTo_Mobile")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToOpen)
                    .HasColumnName("SoldTo_Open")
                    .HasColumnType("datetime");

                entity.Property(e => e.SoldToSource)
                    .HasColumnName("SoldTo_Source")
                    .HasMaxLength(4);

                entity.Property(e => e.SoldToTaxId)
                    .HasColumnName("SoldTo_TaxID")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToTel)
                    .HasColumnName("SoldTo_Tel")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToTypeIndex).HasColumnName("SoldToType_Index");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusInterface)
                    .HasColumnName("Status_Interface")
                    .HasMaxLength(1);

                entity.Property(e => e.SubDistrictIndex).HasColumnName("SubDistrict_Index");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.SoldToTypeIndexNavigation)
                    .WithMany(p => p.MsSoldTo)
                    .HasForeignKey(d => d.SoldToTypeIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_SoldTo_ms_SoldToType");
            });

            modelBuilder.Entity<MsSoldToShipTo>(entity =>
            {
                entity.HasKey(e => e.SoldToShipToIndex);

                entity.ToTable("ms_SoldToShipTo");

                entity.Property(e => e.SoldToShipToIndex)
                    .HasColumnName("SoldToShipTo_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToShipToId)
                    .HasColumnName("SoldToShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.ShipToIndexNavigation)
                    .WithMany(p => p.MsSoldToShipTo)
                    .HasForeignKey(d => d.ShipToIndex)
                    .HasConstraintName("FK_ms_SoldToShipTo_ms_ShipTo");

                entity.HasOne(d => d.SoldToIndexNavigation)
                    .WithMany(p => p.MsSoldToShipTo)
                    .HasForeignKey(d => d.SoldToIndex)
                    .HasConstraintName("FK_ms_SoldToShipTo_ms_SoldTo");
            });

            modelBuilder.Entity<MsSoldToType>(entity =>
            {
                entity.HasKey(e => e.SoldToTypeIndex);

                entity.ToTable("ms_SoldToType");

                entity.Property(e => e.SoldToTypeIndex)
                    .HasColumnName("SoldToType_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.SoldToTypeId)
                    .HasColumnName("SoldToType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToTypeName)
                    .HasColumnName("SoldToType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsSubRoute>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ms_SubRoute");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.SubRouteId)
                    .HasColumnName("SubRoute_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SubRouteIndex).HasColumnName("SubRoute_Index");

                entity.Property(e => e.SubRouteName)
                    .HasColumnName("SubRoute_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsTaskGroup>(entity =>
            {
                entity.HasKey(e => e.TaskGroupIndex);

                entity.ToTable("ms_TaskGroup");

                entity.Property(e => e.TaskGroupIndex)
                    .HasColumnName("TaskGroup_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaskGroupId)
                    .IsRequired()
                    .HasColumnName("TaskGroup_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskGroupName)
                    .IsRequired()
                    .HasColumnName("TaskGroup_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<MsTaskGroupEquipment>(entity =>
            {
                entity.HasKey(e => e.TaskGroupEquipmentIndex);

                entity.ToTable("ms_TaskGroupEquipment");

                entity.Property(e => e.TaskGroupEquipmentIndex)
                    .HasColumnName("TaskGroupEquipment_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaskGroupEquipmentId)
                    .HasColumnName("TaskGroupEquipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskGroupIndex).HasColumnName("TaskGroup_Index");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.EquipmentIndexNavigation)
                    .WithMany(p => p.MsTaskGroupEquipment)
                    .HasForeignKey(d => d.EquipmentIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_TaskGroupEquipment_ms_Equipment");

                entity.HasOne(d => d.TaskGroupIndexNavigation)
                    .WithMany(p => p.MsTaskGroupEquipment)
                    .HasForeignKey(d => d.TaskGroupIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_TaskGroupEquipment_ms_TaskGroup");
            });

            modelBuilder.Entity<MsTaskGroupUser>(entity =>
            {
                entity.HasKey(e => e.TaskGroupUserIndex);

                entity.ToTable("ms_TaskGroupUser");

                entity.Property(e => e.TaskGroupUserIndex)
                    .HasColumnName("TaskGroupUser_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDefault).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaskGroupIndex).HasColumnName("TaskGroup_Index");

                entity.Property(e => e.TaskGroupUserId)
                    .HasColumnName("TaskGroupUser_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.UserIndex).HasColumnName("User_Index");

                entity.HasOne(d => d.TaskGroupIndexNavigation)
                    .WithMany(p => p.MsTaskGroupUser)
                    .HasForeignKey(d => d.TaskGroupIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_TaskGroupUser_ms_TaskGroup");

                entity.HasOne(d => d.UserIndexNavigation)
                    .WithMany(p => p.MsTaskGroupUser)
                    .HasForeignKey(d => d.UserIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_TaskGroupUser_ms_TaskGroupUser");
            });

            modelBuilder.Entity<MsTaskGroupWorkArea>(entity =>
            {
                entity.HasKey(e => e.TaskGroupWorkAreaIndex);

                entity.ToTable("ms_TaskGroupWorkArea");

                entity.HasIndex(e => e.TaskGroupIndex);

                entity.HasIndex(e => e.WorkAreaIndex);

                entity.Property(e => e.TaskGroupWorkAreaIndex)
                    .HasColumnName("TaskGroupWorkArea_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaskGroupIndex).HasColumnName("TaskGroup_Index");

                entity.Property(e => e.TaskGroupWorkAreaId)
                    .HasColumnName("TaskGroupWorkArea_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WorkAreaIndex).HasColumnName("WorkArea_Index");

                entity.HasOne(d => d.TaskGroupIndexNavigation)
                    .WithMany(p => p.MsTaskGroupWorkArea)
                    .HasForeignKey(d => d.TaskGroupIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_TaskGroupWorkArea_ms_TaskGroup");

                entity.HasOne(d => d.WorkAreaIndexNavigation)
                    .WithMany(p => p.MsTaskGroupWorkArea)
                    .HasForeignKey(d => d.WorkAreaIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_TaskGroupWorkArea_ms_WorkArea");
            });

            modelBuilder.Entity<MsUser>(entity =>
            {
                entity.HasKey(e => e.UserIndex);

                entity.ToTable("ms_User");

                entity.Property(e => e.UserIndex)
                    .HasColumnName("User_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.UserGroupIndex).HasColumnName("UserGroup_Index");

                entity.Property(e => e.UserId)
                    .HasColumnName("User_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.UserName)
                    .HasColumnName("User_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.UserPassword)
                    .HasColumnName("User_Password")
                    .HasMaxLength(50);

                entity.HasOne(d => d.UserGroupIndexNavigation)
                    .WithMany(p => p.MsUser)
                    .HasForeignKey(d => d.UserGroupIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_User_ms_UserGroup");
            });

            modelBuilder.Entity<MsUserEquipment>(entity =>
            {
                entity.HasKey(e => e.UserEquipmentIndex);

                entity.ToTable("ms_UserEquipment");

                entity.Property(e => e.UserEquipmentIndex)
                    .HasColumnName("UserEquipment_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.UserIndex).HasColumnName("User_Index");

                entity.HasOne(d => d.EquipmentIndexNavigation)
                    .WithMany(p => p.MsUserEquipment)
                    .HasForeignKey(d => d.EquipmentIndex)
                    .HasConstraintName("FK_ms_UserEquipment_ms_Equipment");

                entity.HasOne(d => d.UserIndexNavigation)
                    .WithMany(p => p.MsUserEquipment)
                    .HasForeignKey(d => d.UserIndex)
                    .HasConstraintName("FK_ms_UserEquipment_ms_User");
            });

            modelBuilder.Entity<MsUserGroup>(entity =>
            {
                entity.HasKey(e => e.UserGroupIndex)
                    .HasName("PK_ms_GroupUser");

                entity.ToTable("ms_UserGroup");

                entity.Property(e => e.UserGroupIndex)
                    .HasColumnName("UserGroup_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.UserGroupId)
                    .HasColumnName("UserGroup_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.UserGroupName)
                    .HasColumnName("UserGroup_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<MsUserGroupMenu>(entity =>
            {
                entity.HasKey(e => e.UserGroupMenuIndex);

                entity.ToTable("ms_UserGroupMenu");

                entity.Property(e => e.UserGroupMenuIndex)
                    .HasColumnName("UserGroupMenu_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.MenuIndex).HasColumnName("Menu_Index");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.UserGroupIndex).HasColumnName("UserGroup_Index");

                entity.Property(e => e.UserGroupMenuId)
                    .HasColumnName("UserGroupMenu_Id")
                    .HasMaxLength(50);

                entity.HasOne(d => d.MenuIndexNavigation)
                    .WithMany(p => p.MsUserGroupMenu)
                    .HasForeignKey(d => d.MenuIndex)
                    .HasConstraintName("FK_ms_UserGroupMenu_sy_Menu");

                entity.HasOne(d => d.UserGroupIndexNavigation)
                    .WithMany(p => p.MsUserGroupMenu)
                    .HasForeignKey(d => d.UserGroupIndex)
                    .HasConstraintName("FK_ms_UserGroupMenu_ms_UserGroup");
            });

            modelBuilder.Entity<MsUserGroupZone>(entity =>
            {
                entity.HasKey(e => e.UserGroupZoneIndex)
                    .HasName("PK_ms_UserGroupZone_Index");

                entity.ToTable("ms_UserGroupZone");

                entity.Property(e => e.UserGroupZoneIndex)
                    .HasColumnName("UserGroupZone_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.UserGroupIndex).HasColumnName("UserGroup_Index");

                entity.Property(e => e.UserGroupZoneId)
                    .HasColumnName("UserGroupZone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.HasOne(d => d.UserGroupIndexNavigation)
                    .WithMany(p => p.MsUserGroupZone)
                    .HasForeignKey(d => d.UserGroupIndex)
                    .HasConstraintName("FK_ms_UserGroupZone_ms_UserGroup");

                entity.HasOne(d => d.ZoneIndexNavigation)
                    .WithMany(p => p.MsUserGroupZone)
                    .HasForeignKey(d => d.ZoneIndex)
                    .HasConstraintName("FK_ms_UserGroupZone_ms_Zone");
            });

            modelBuilder.Entity<MsUserMappingPrinterHdl>(entity =>
            {
                entity.HasKey(e => e.UsermappingprinterIndex)
                    .HasName("PK__ms_UserM__DFE526F6AE384D07");

                entity.ToTable("ms_UserMappingPrinterHDL");

                entity.Property(e => e.UsermappingprinterIndex)
                    .HasColumnName("usermappingprinter_index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CreateBy)
                    .HasColumnName("create_by")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumenttypeName)
                    .HasColumnName("documenttype_name")
                    .HasMaxLength(50);

                entity.Property(e => e.IsActive).HasColumnName("is_active");

                entity.Property(e => e.PrinterName)
                    .HasColumnName("printer_name")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("update_by")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("update_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserId)
                    .HasColumnName("user_id")
                    .HasMaxLength(50);

                entity.Property(e => e.UserIndex).HasColumnName("user_index");

                entity.Property(e => e.UserName)
                    .HasColumnName("user_name")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<MsVehicleType>(entity =>
            {
                entity.HasKey(e => e.VehicleTypeIndex);

                entity.ToTable("ms_VehicleType");

                entity.Property(e => e.VehicleTypeIndex)
                    .HasColumnName("VehicleType_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.VehicleTypeId)
                    .HasColumnName("VehicleType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.VehicleTypeName)
                    .HasColumnName("VehicleType_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<MsVendor>(entity =>
            {
                entity.HasKey(e => e.VendorIndex);

                entity.ToTable("ms_Vendor");

                entity.Property(e => e.VendorIndex)
                    .HasColumnName("Vendor_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ContactEmail)
                    .HasColumnName("Contact_Email")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactEmail2)
                    .HasColumnName("Contact_Email2")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactEmail3)
                    .HasColumnName("Contact_Email3")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactPerson)
                    .HasColumnName("Contact_Person")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactPerson2)
                    .HasColumnName("Contact_Person2")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactPerson3)
                    .HasColumnName("Contact_Person3")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactTel)
                    .HasColumnName("Contact_Tel")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactTel2)
                    .HasColumnName("Contact_Tel2")
                    .HasMaxLength(200);

                entity.Property(e => e.ContactTel3)
                    .HasColumnName("Contact_Tel3")
                    .HasMaxLength(200);

                entity.Property(e => e.CountryIndex).HasColumnName("Country_Index");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DistrictIndex).HasColumnName("District_Index");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.PostcodeIndex).HasColumnName("Postcode_Index");

                entity.Property(e => e.ProvinceIndex).HasColumnName("Province_Index");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.SubDistrictIndex).HasColumnName("SubDistrict_Index");

                entity.Property(e => e.Udf1)
                    .HasColumnName("udf_1")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.VendorAddress)
                    .HasColumnName("Vendor_Address")
                    .HasMaxLength(200);

                entity.Property(e => e.VendorBarcode)
                    .HasColumnName("Vendor_Barcode")
                    .HasMaxLength(200);

                entity.Property(e => e.VendorEmail)
                    .HasColumnName("Vendor_Email")
                    .HasMaxLength(200);

                entity.Property(e => e.VendorFax)
                    .HasColumnName("Vendor_Fax")
                    .HasMaxLength(200);

                entity.Property(e => e.VendorId)
                    .IsRequired()
                    .HasColumnName("Vendor_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorMobile)
                    .HasColumnName("Vendor_Mobile")
                    .HasMaxLength(200);

                entity.Property(e => e.VendorName)
                    .IsRequired()
                    .HasColumnName("Vendor_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.VendorTaxId)
                    .HasColumnName("Vendor_TaxID")
                    .HasMaxLength(200);

                entity.Property(e => e.VendorTel)
                    .HasColumnName("Vendor_Tel")
                    .HasMaxLength(200);

                entity.Property(e => e.VendorTypeIndex).HasColumnName("VendorType_Index");

                entity.HasOne(d => d.VendorTypeIndexNavigation)
                    .WithMany(p => p.MsVendor)
                    .HasForeignKey(d => d.VendorTypeIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_Vendor_ms_VendorType");
            });

            modelBuilder.Entity<MsVendorType>(entity =>
            {
                entity.HasKey(e => e.VendorTypeIndex);

                entity.ToTable("ms_VendorType");

                entity.Property(e => e.VendorTypeIndex)
                    .HasColumnName("VendorType_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.VendorTypeId)
                    .IsRequired()
                    .HasColumnName("VendorType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorTypeName)
                    .IsRequired()
                    .HasColumnName("VendorType_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<MsWarehouse>(entity =>
            {
                entity.HasKey(e => e.WarehouseIndex);

                entity.ToTable("ms_Warehouse");

                entity.Property(e => e.WarehouseIndex)
                    .HasColumnName("Warehouse_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<MsWave>(entity =>
            {
                entity.HasKey(e => e.WaveIndex);

                entity.ToTable("ms_Wave");

                entity.Property(e => e.WaveIndex)
                    .HasColumnName("Wave_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WaveCase)
                    .HasColumnName("Wave_Case")
                    .HasMaxLength(200);

                entity.Property(e => e.WaveId)
                    .HasColumnName("Wave_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WaveName)
                    .HasColumnName("Wave_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<MsWaveRule>(entity =>
            {
                entity.HasKey(e => e.WaveRuleIndex);

                entity.ToTable("ms_WaveRule");

                entity.Property(e => e.WaveRuleIndex)
                    .HasColumnName("WaveRule_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.RuleId)
                    .HasColumnName("Rule_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RuleIndex).HasColumnName("Rule_Index");

                entity.Property(e => e.RuleName)
                    .HasColumnName("Rule_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WaveId)
                    .HasColumnName("Wave_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WaveIndex).HasColumnName("Wave_Index");

                entity.Property(e => e.WaveName)
                    .HasColumnName("Wave_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WaveRuleId)
                    .HasColumnName("WaveRule_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WaveRuleSeq).HasColumnName("WaveRule_Seq");

                entity.HasOne(d => d.RuleIndexNavigation)
                    .WithMany(p => p.MsWaveRule)
                    .HasForeignKey(d => d.RuleIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_WaveRule_ms_Rule");

                entity.HasOne(d => d.WaveIndexNavigation)
                    .WithMany(p => p.MsWaveRule)
                    .HasForeignKey(d => d.WaveIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ms_WaveRule_ms_Wave");
            });

            modelBuilder.Entity<MsWorkArea>(entity =>
            {
                entity.HasKey(e => e.WorkAreaIndex);

                entity.ToTable("ms_WorkArea");

                entity.Property(e => e.WorkAreaIndex)
                    .HasColumnName("WorkArea_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WorkAreaId)
                    .HasColumnName("WorkArea_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WorkAreaName)
                    .HasColumnName("WorkArea_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<MsZone>(entity =>
            {
                entity.HasKey(e => e.ZoneIndex);

                entity.ToTable("ms_Zone");

                entity.Property(e => e.ZoneIndex)
                    .HasColumnName("Zone_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<MsZoneLocation>(entity =>
            {
                entity.HasKey(e => e.ZoneLocationIndex);

                entity.ToTable("ms_ZoneLocation");

                entity.HasIndex(e => e.LocationIndex);

                entity.HasIndex(e => e.ZoneIndex);

                entity.Property(e => e.ZoneLocationIndex)
                    .HasColumnName("ZoneLocation_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneLocationId)
                    .HasColumnName("ZoneLocation_Id")
                    .HasMaxLength(50);

                entity.HasOne(d => d.LocationIndexNavigation)
                    .WithMany(p => p.MsZoneLocation)
                    .HasForeignKey(d => d.LocationIndex)
                    .HasConstraintName("FK_ms_ZoneLocation_ms_Location");

                entity.HasOne(d => d.ZoneIndexNavigation)
                    .WithMany(p => p.MsZoneLocation)
                    .HasForeignKey(d => d.ZoneIndex)
                    .HasConstraintName("FK_ms_ZoneLocation_ms_Zone");
            });

            modelBuilder.Entity<OnwmsAdditionalOrderSplit>(entity =>
            {
                entity.HasKey(e => new { e.OwnerId, e.PlanGoodsIssueNo, e.PlanGoodsIssueNoRef, e.ProductId })
                    .HasName("PK_onwms_additional_order_split_1");

                entity.ToTable("onwms_additional_order_split");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueNoRef)
                    .HasColumnName("PlanGoodsIssue_No_Ref")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UoM).HasMaxLength(20);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<OnwmsCancelledSummary>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("onwms_cancelled_summary");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrderNo)
                    .IsRequired()
                    .HasColumnName("Order_No")
                    .HasMaxLength(20);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalQtyCancelled)
                    .HasColumnName("TotalQty_Cancelled")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.TotalQtyClear)
                    .HasColumnName("TotalQty_Clear")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.UomCancelled)
                    .IsRequired()
                    .HasColumnName("UOM_Cancelled")
                    .HasMaxLength(20);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<OnwmsCartonstatus>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("onwms_cartonstatus");

                entity.Property(e => e.CartonStatusId).HasColumnName("CartonStatus_ID");

                entity.Property(e => e.CartonStatusName)
                    .HasColumnName("CartonStatus_Name")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_by")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.IsActive).HasColumnName("Is_Active");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(20);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<OnwmsConfig>(entity =>
            {
                entity.HasKey(e => e.No)
                    .HasName("PK_ONMMS_CONFIG");

                entity.ToTable("ONWMS_CONFIG");

                entity.Property(e => e.No).HasColumnName("no");

                entity.Property(e => e.ConfigGroupKey)
                    .HasColumnName("config_group_key")
                    .HasMaxLength(50);

                entity.Property(e => e.ConfigIssue)
                    .HasColumnName("config_issue")
                    .HasMaxLength(50);

                entity.Property(e => e.ConfigKey)
                    .HasColumnName("config_key")
                    .HasMaxLength(50);

                entity.Property(e => e.ConfigValue)
                    .HasColumnName("config_value")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.IsEnabled).HasColumnName("is_enabled");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasMaxLength(500);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<OnwmsDistroAllocation>(entity =>
            {
                entity.HasKey(e => new { e.OwnerId, e.DistroNo, e.LineNo, e.SeqNo, e.BatchId });

                entity.ToTable("onwms_distro_allocation");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.DistroNo)
                    .HasColumnName("Distro_No")
                    .HasMaxLength(50);

                entity.Property(e => e.LineNo).HasColumnName("Line_No");

                entity.Property(e => e.SeqNo).HasColumnName("Seq_No");

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.BinbalanceIndex).HasColumnName("Binbalance_Index");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentstatusId)
                    .IsRequired()
                    .HasColumnName("Documentstatus_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.QtyAllocated)
                    .HasColumnName("Qty_Allocated")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.Ratio)
                    .HasColumnName("ratio")
                    .HasColumnType("numeric(12, 4)");

                entity.Property(e => e.RefGoodsissueitemlocationIndex).HasColumnName("Ref_goodsissueitemlocation_index");

                entity.Property(e => e.RefGoodsreceiveitemlocationIndex).HasColumnName("Ref_Goodsreceiveitemlocation_index");

                entity.Property(e => e.RefPlangoodsreceiveitemIndex).HasColumnName("Ref_Plangoodsreceiveitem_index");

                entity.Property(e => e.RefPoLine)
                    .HasColumnName("Ref_PO_Line")
                    .HasMaxLength(20);

                entity.Property(e => e.RefPoNo)
                    .HasColumnName("Ref_PO_No")
                    .HasMaxLength(20);

                entity.Property(e => e.RefReceiveNo)
                    .HasColumnName("Ref_Receive_No")
                    .HasMaxLength(20);

                entity.Property(e => e.ReferenceNo1)
                    .HasColumnName("Reference_No_1")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo2)
                    .HasColumnName("Reference_No_2")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo3)
                    .HasColumnName("Reference_No_3")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo4)
                    .HasColumnName("Reference_No_4")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo5)
                    .HasColumnName("Reference_No_5")
                    .HasMaxLength(50);

                entity.Property(e => e.StoreNo)
                    .HasColumnName("Store_No")
                    .HasMaxLength(20);

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(20);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.WeightAllocated)
                    .HasColumnName("Weight_Allocated")
                    .HasColumnType("numeric(15, 4)");

                entity.HasOne(d => d.OnwmsDistroDtl)
                    .WithMany(p => p.OnwmsDistroAllocation)
                    .HasForeignKey(d => new { d.OwnerId, d.DistroNo, d.LineNo })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_onwms_distro_allocation_onwms_distro_dtl");
            });

            modelBuilder.Entity<OnwmsDistroDtl>(entity =>
            {
                entity.HasKey(e => new { e.OwnerId, e.DistroNo, e.LineNo });

                entity.ToTable("onwms_distro_dtl");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.DistroNo)
                    .HasColumnName("Distro_No")
                    .HasMaxLength(50);

                entity.Property(e => e.LineNo).HasColumnName("Line_No");

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentstatusId)
                    .IsRequired()
                    .HasColumnName("Documentstatus_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.Qty).HasColumnType("numeric(15, 4)");

                entity.Property(e => e.QtyAllocated)
                    .HasColumnName("Qty_Allocated")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.QtyFulfilled)
                    .HasColumnName("Qty_Fulfilled")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.Ratio)
                    .HasColumnName("ratio")
                    .HasColumnType("numeric(12, 3)");

                entity.Property(e => e.ReferenceNo1)
                    .HasColumnName("Reference_No_1")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo12)
                    .HasColumnName("Reference_No_12")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo2)
                    .HasColumnName("Reference_No_2")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo3)
                    .HasColumnName("Reference_No_3")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo4)
                    .HasColumnName("Reference_No_4")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo5)
                    .HasColumnName("Reference_No_5")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferencePoNo)
                    .HasColumnName("Reference_PO_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferencePoSeq).HasColumnName("Reference_PO_Seq");

                entity.Property(e => e.Remark).HasMaxLength(500);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Weight).HasColumnType("numeric(15, 4)");

                entity.Property(e => e.WeightAllocated)
                    .HasColumnName("Weight_Allocated")
                    .HasColumnType("numeric(15, 4)");

                entity.HasOne(d => d.OnwmsDistroHdr)
                    .WithMany(p => p.OnwmsDistroDtl)
                    .HasForeignKey(d => new { d.OwnerId, d.DistroNo })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_onwms_distro_dtl_onwms_distro_hdr");
            });

            modelBuilder.Entity<OnwmsDistroHdr>(entity =>
            {
                entity.HasKey(e => new { e.OwnerId, e.DistroNo });

                entity.ToTable("onwms_distro_hdr");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.DistroNo)
                    .HasColumnName("Distro_No")
                    .HasMaxLength(50);

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CustomInterfaceFlag1)
                    .HasColumnName("custom_interface_flag1")
                    .HasMaxLength(20);

                entity.Property(e => e.DocumentstatusId)
                    .IsRequired()
                    .HasColumnName("Documentstatus_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.DueDate)
                    .HasColumnName("Due_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ReferenceNo1)
                    .HasColumnName("Reference_No_1")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo2)
                    .HasColumnName("Reference_No_2")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo3)
                    .HasColumnName("Reference_No_3")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo4)
                    .HasColumnName("Reference_No_4")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo5)
                    .HasColumnName("Reference_No_5")
                    .HasMaxLength(50);

                entity.Property(e => e.Remark).HasMaxLength(500);

                entity.Property(e => e.StoreNo)
                    .IsRequired()
                    .HasColumnName("Store_No")
                    .HasMaxLength(20);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.WarehouseId)
                    .IsRequired()
                    .HasColumnName("Warehouse_ID")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<OnwmsImportTask>(entity =>
            {
                entity.ToTable("onwms_import_task");

                entity.HasIndex(e => e.TaskNo)
                    .HasName("IX_onwms_import_task");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FileName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TaskNo).HasColumnName("Task_No");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<OnwmsLogCancelledQty>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("onwms_log_cancelled_qty");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrderNo)
                    .IsRequired()
                    .HasColumnName("Order_No")
                    .HasMaxLength(20);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(100);

                entity.Property(e => e.QtyCancelled)
                    .HasColumnName("Qty_Cancelled")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.UomCancelled)
                    .IsRequired()
                    .HasColumnName("UOM_Cancelled")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<OnwmsLogImportSalesorder>(entity =>
            {
                entity.HasKey(e => e.LogId);

                entity.ToTable("onwms_log_import_salesorder");

                entity.Property(e => e.LogId).HasColumnName("Log_ID");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentstatusId)
                    .IsRequired()
                    .HasColumnName("Documentstatus_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.DueDate)
                    .HasColumnName("Due_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.LineNo).HasColumnName("Line_No");

                entity.Property(e => e.OrderNo)
                    .IsRequired()
                    .HasColumnName("Order_No")
                    .HasMaxLength(20);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.PathFile).HasMaxLength(300);

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Qty).HasColumnType("numeric(15, 4)");

                entity.Property(e => e.ReferenceNo1)
                    .HasColumnName("Reference_No_1")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo2)
                    .HasColumnName("Reference_No_2")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo3)
                    .HasColumnName("Reference_No_3")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo4)
                    .HasColumnName("Reference_No_4")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo5)
                    .HasColumnName("Reference_No_5")
                    .HasMaxLength(50);

                entity.Property(e => e.Remark).HasMaxLength(500);

                entity.Property(e => e.StatusRemark).HasMaxLength(100);

                entity.Property(e => e.StatusValidate).HasMaxLength(20);

                entity.Property(e => e.StoreId)
                    .IsRequired()
                    .HasColumnName("Store_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.TaskNo).HasColumnName("Task_No");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(50);

                entity.Property(e => e.Uom).HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.WarehouseId)
                    .IsRequired()
                    .HasColumnName("Warehouse_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.Weight).HasColumnType("numeric(15, 4)");
            });

            modelBuilder.Entity<OnwmsLogLpnClosetask>(entity =>
            {
                entity.HasKey(e => e.LogId);

                entity.ToTable("onwms_log_lpn_closetask");

                entity.Property(e => e.LogId).HasColumnName("Log_ID");

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<OnwmsLogResendShipment>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("onwms_log_resend_shipment");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("create_by")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Frequency).HasColumnName("frequency");

                entity.Property(e => e.OrderNo)
                    .HasColumnName("order_no")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<OnwmsLogStation>(entity =>
            {
                entity.HasKey(e => e.LogId);

                entity.ToTable("onwms_log_station");

                entity.Property(e => e.LogId).HasColumnName("Log_ID");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.StationEvent)
                    .HasColumnName("Station_event")
                    .HasMaxLength(20);

                entity.Property(e => e.StationId).HasColumnName("Station_ID");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<OnwmsOwnerMapping>(entity =>
            {
                entity.HasKey(e => e.OwnerId);

                entity.ToTable("onwms_owner_mapping");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("owner_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.OwnerIndex).HasColumnName("owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("owner_name")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .IsRequired()
                    .HasColumnName("udf_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf2)
                    .HasColumnName("udf_2")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf3)
                    .HasColumnName("udf_3")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf4)
                    .HasColumnName("udf_4")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf5)
                    .HasColumnName("udf_5")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<OnwmsPacking>(entity =>
            {
                entity.HasKey(e => new { e.OwnerId, e.PackStationId, e.PlanGoodsIssueIndex, e.TagOutNo })
                    .HasName("PK_onwms_Packing_1");

                entity.ToTable("onwms_Packing");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PackStationId)
                    .HasColumnName("PackStation_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<OnwmsRouteGroup>(entity =>
            {
                entity.HasKey(e => e.RoutegroupId)
                    .HasName("PK__onwms_ro__46116ECF28899587");

                entity.ToTable("onwms_route_group");

                entity.Property(e => e.RoutegroupId)
                    .HasColumnName("Routegroup_ID")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.RoutegroupName)
                    .HasColumnName("Routegroup_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<OnwmsRouteSequence>(entity =>
            {
                entity.HasKey(e => e.RouteseqNo);

                entity.ToTable("onwms_route_sequence");

                entity.Property(e => e.RouteseqNo).HasColumnName("Routeseq_No");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.IsActive).HasColumnName("Is_Active");

                entity.Property(e => e.RouteId)
                    .IsRequired()
                    .HasColumnName("Route_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.SeqNo).HasColumnName("Seq_No");

                entity.Property(e => e.StoreNo)
                    .IsRequired()
                    .HasColumnName("Store_No")
                    .HasMaxLength(20);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<OnwmsRouteStoreMaster>(entity =>
            {
                entity.HasKey(e => e.RouteId);

                entity.ToTable("onwms_route_store_master");

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.IsActive).HasColumnName("Is_Active");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(100);

                entity.Property(e => e.RoutegroupId)
                    .HasColumnName("routegroup_id")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<OnwmsStationMaster>(entity =>
            {
                entity.HasKey(e => e.StationId)
                    .HasName("PK_onwms_station_master_1");

                entity.ToTable("onwms_station_master");

                entity.Property(e => e.StationId)
                    .HasColumnName("Station_ID")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("create_by")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PutawayType)
                    .HasColumnName("putaway_type")
                    .HasMaxLength(50);

                entity.Property(e => e.PutawayTypeAlias)
                    .HasColumnName("putaway_type_alias")
                    .HasMaxLength(50);

                entity.Property(e => e.StationName)
                    .HasColumnName("station_name")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_ID")
                    .HasMaxLength(10);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("update_by")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(50);
            });

            modelBuilder.Entity<OnwmsStoreMaster>(entity =>
            {
                entity.HasKey(e => e.StoreNo);

                entity.ToTable("onwms_store_master");

                entity.Property(e => e.StoreNo)
                    .HasColumnName("Store_No")
                    .HasMaxLength(20);

                entity.Property(e => e.CloseDate)
                    .HasColumnName("close_date")
                    .HasColumnType("date");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DeliveryFri).HasColumnName("delivery_fri");

                entity.Property(e => e.DeliveryLeadtimeDay).HasColumnName("Delivery_Leadtime_Day");

                entity.Property(e => e.DeliveryLeadtimeMinutes).HasColumnName("Delivery_Leadtime_Minutes");

                entity.Property(e => e.DeliveryMon).HasColumnName("delivery_mon");

                entity.Property(e => e.DeliverySat).HasColumnName("delivery_sat");

                entity.Property(e => e.DeliverySun).HasColumnName("delivery_sun");

                entity.Property(e => e.DeliveryThu).HasColumnName("delivery_thu");

                entity.Property(e => e.DeliveryTue).HasColumnName("delivery_tue");

                entity.Property(e => e.DeliveryWed).HasColumnName("delivery_wed");

                entity.Property(e => e.IsActive).HasColumnName("Is_Active");

                entity.Property(e => e.IsFranchise).HasColumnName("is_franchise");

                entity.Property(e => e.IsNewstore).HasColumnName("is_newstore");

                entity.Property(e => e.OpenDate)
                    .HasColumnName("open_date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.PriorityNo).HasColumnName("Priority_No");

                entity.Property(e => e.Remark).HasMaxLength(500);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_ID")
                    .HasMaxLength(500);

                entity.Property(e => e.StoreAddress)
                    .HasColumnName("Store_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.StoreChkDigit)
                    .HasColumnName("Store_Chk_Digit")
                    .HasMaxLength(20);

                entity.Property(e => e.StoreDistrictId)
                    .HasColumnName("Store_District_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.StoreName)
                    .HasColumnName("Store_Name")
                    .HasMaxLength(100);

                entity.Property(e => e.StorePostcode)
                    .HasColumnName("Store_Postcode")
                    .HasMaxLength(10);

                entity.Property(e => e.StoreProvinceId)
                    .HasColumnName("Store_Province_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.StoreSubdistrictId)
                    .HasColumnName("Store_Subdistrict_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("warehouse_ID")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<OnwmsStorePacking>(entity =>
            {
                entity.HasKey(e => new { e.StoreNo, e.LocationIndex });

                entity.ToTable("onwms_store_packing");

                entity.HasIndex(e => e.PackStationNo)
                    .HasName("IX_onwms_store_packing")
                    .IsUnique();

                entity.Property(e => e.StoreNo)
                    .HasColumnName("Store_No")
                    .HasMaxLength(20);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.IsActive).HasColumnName("Is_Active");

                entity.Property(e => e.PackStationName)
                    .IsRequired()
                    .HasColumnName("Pack_Station_Name")
                    .HasMaxLength(100);

                entity.Property(e => e.PackStationNo)
                    .IsRequired()
                    .HasColumnName("Pack_Station_No")
                    .HasMaxLength(20);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.HasOne(d => d.StoreNoNavigation)
                    .WithMany(p => p.OnwmsStorePacking)
                    .HasForeignKey(d => d.StoreNo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_onwms_store_packing_onwms_store_master");
            });

            modelBuilder.Entity<OnwmsStoreStaging>(entity =>
            {
                entity.HasKey(e => e.LocationId)
                    .HasName("PK_onwms_store_staging_1");

                entity.ToTable("onwms_store_staging");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.IsActive).HasColumnName("Is_Active");

                entity.Property(e => e.PutawayType)
                    .HasColumnName("putaway_type")
                    .HasMaxLength(20);

                entity.Property(e => e.StoreNo)
                    .IsRequired()
                    .HasColumnName("Store_No")
                    .HasMaxLength(20);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<OnwmsTempImportSalesorder>(entity =>
            {
                entity.HasKey(e => new { e.OwnerId, e.OrderNo, e.LineNo });

                entity.ToTable("onwms_temp_import_salesorder");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.OrderNo)
                    .HasColumnName("Order_No")
                    .HasMaxLength(20);

                entity.Property(e => e.LineNo).HasColumnName("Line_No");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentstatusId)
                    .IsRequired()
                    .HasColumnName("Documentstatus_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.DueDate)
                    .HasColumnName("Due_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PathFile).HasMaxLength(300);

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Qty).HasColumnType("numeric(15, 4)");

                entity.Property(e => e.ReferenceNo1)
                    .HasColumnName("Reference_No_1")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo2)
                    .HasColumnName("Reference_No_2")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo3)
                    .HasColumnName("Reference_No_3")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo4)
                    .HasColumnName("Reference_No_4")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceNo5)
                    .HasColumnName("Reference_No_5")
                    .HasMaxLength(50);

                entity.Property(e => e.Remark).HasMaxLength(500);

                entity.Property(e => e.StatusRemark).HasMaxLength(100);

                entity.Property(e => e.StatusValidate).HasMaxLength(20);

                entity.Property(e => e.StoreId)
                    .IsRequired()
                    .HasColumnName("Store_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.TaskNo).HasColumnName("Task_No");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(50);

                entity.Property(e => e.Uom).HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.WarehouseId)
                    .IsRequired()
                    .HasColumnName("Warehouse_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.Weight).HasColumnType("numeric(15, 4)");
            });

            modelBuilder.Entity<OverallRound>(entity =>
            {
                entity.HasKey(e => e.RowIndex);

                entity.ToTable("__overall_round");

                entity.Property(e => e.CanceledQty)
                    .HasColumnName("canceledQty")
                    .HasMaxLength(1000);

                entity.Property(e => e.DocDate).HasColumnType("date");

                entity.Property(e => e.DoneQty)
                    .HasColumnName("doneQty")
                    .HasMaxLength(1000);

                entity.Property(e => e.OrderQty)
                    .HasColumnName("orderQty")
                    .HasMaxLength(1000);

                entity.Property(e => e.RemainQty)
                    .HasColumnName("remainQty")
                    .HasMaxLength(1000);

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(1000);
            });

            modelBuilder.Entity<OverallRoundPick>(entity =>
            {
                entity.HasKey(e => e.RowIndex);

                entity.ToTable("__overall_round_pick");

                entity.Property(e => e.DocDate).HasColumnType("date");

                entity.Property(e => e.Fulfilled)
                    .HasColumnName("fulfilled")
                    .HasMaxLength(1000);

                entity.Property(e => e.PickQty)
                    .HasColumnName("pickQty")
                    .HasMaxLength(1000);

                entity.Property(e => e.Remain).HasMaxLength(1000);

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(1000);

                entity.Property(e => e.UnFulfilled)
                    .HasColumnName("unFulfilled")
                    .HasMaxLength(1000);
            });

            modelBuilder.Entity<OverallRoundPickTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("__overall_round_pick_temp");

                entity.Property(e => e.DocDate).HasMaxLength(1000);

                entity.Property(e => e.Fulfilled)
                    .HasColumnName("fulfilled")
                    .HasMaxLength(1000);

                entity.Property(e => e.PickQty)
                    .HasColumnName("pickQty")
                    .HasMaxLength(1000);

                entity.Property(e => e.Remain).HasMaxLength(1000);

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(1000);

                entity.Property(e => e.UnFulfilled)
                    .HasColumnName("unFulfilled")
                    .HasMaxLength(1000);
            });

            modelBuilder.Entity<OverallRoundTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("__overall_round_temp");

                entity.Property(e => e.CanceledQty)
                    .HasColumnName("canceledQty")
                    .HasMaxLength(1000);

                entity.Property(e => e.DocDate).HasMaxLength(1000);

                entity.Property(e => e.DoneQty)
                    .HasColumnName("doneQty")
                    .HasMaxLength(1000);

                entity.Property(e => e.OrderQty)
                    .HasColumnName("orderQty")
                    .HasMaxLength(1000);

                entity.Property(e => e.RemainQty)
                    .HasColumnName("remainQty")
                    .HasMaxLength(1000);

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(1000);
            });

            modelBuilder.Entity<OverallRoute>(entity =>
            {
                entity.HasKey(e => e.RowIndex);

                entity.ToTable("__overall_route");

                entity.Property(e => e.DocDate).HasColumnType("date");

                entity.Property(e => e.OrderQty)
                    .HasColumnName("orderQty")
                    .HasMaxLength(1000);

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(1000);
            });

            modelBuilder.Entity<OverallRouteTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("__overall_route_temp");

                entity.Property(e => e.DocDate).HasMaxLength(1000);

                entity.Property(e => e.OrderQty)
                    .HasColumnName("orderQty")
                    .HasMaxLength(1000);

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(1000);
            });

            modelBuilder.Entity<OverallStatus>(entity =>
            {
                entity.HasKey(e => e.RowIndex);

                entity.ToTable("__overall_status");

                entity.Property(e => e.DocDate).HasColumnType("date");

                entity.Property(e => e.Qty).HasMaxLength(1000);

                entity.Property(e => e.StatusName).HasMaxLength(1000);
            });

            modelBuilder.Entity<OverallStatusExpress>(entity =>
            {
                entity.HasKey(e => e.RowIndex)
                    .HasName("PK__overall_status_Express");

                entity.ToTable("__overall_status_Express");

                entity.Property(e => e.DocDate).HasColumnType("date");

                entity.Property(e => e.Qty).HasMaxLength(1000);

                entity.Property(e => e.StatusName).HasMaxLength(1000);
            });

            modelBuilder.Entity<OverallStatusExpressTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("__overall_status_Express_temp");

                entity.Property(e => e.DocDate).HasMaxLength(1000);

                entity.Property(e => e.Qty).HasMaxLength(1000);

                entity.Property(e => e.StatusName).HasMaxLength(1000);
            });

            modelBuilder.Entity<OverallStatusTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("__overall_status_temp");

                entity.Property(e => e.DocDate).HasMaxLength(1000);

                entity.Property(e => e.Qty).HasMaxLength(1000);

                entity.Property(e => e.StatusName).HasMaxLength(1000);
            });

            modelBuilder.Entity<OverallZonePick>(entity =>
            {
                entity.HasKey(e => e.RowIndex)
                    .HasName("PK__overall_zone_pick");

                entity.ToTable("__overall_zone_pick");

                entity.Property(e => e.DocDate).HasColumnType("date");

                entity.Property(e => e.Fulfilled)
                    .HasColumnName("fulfilled")
                    .HasMaxLength(1000);

                entity.Property(e => e.PickQty)
                    .HasColumnName("pickQty")
                    .HasMaxLength(1000);

                entity.Property(e => e.Remain).HasMaxLength(1000);

                entity.Property(e => e.UnFulfilled)
                    .HasColumnName("unFulfilled")
                    .HasMaxLength(1000);

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(1000);
            });

            modelBuilder.Entity<OverallZonePickTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("__overall_zone_pick_temp");

                entity.Property(e => e.DocDate).HasMaxLength(1000);

                entity.Property(e => e.Fulfilled)
                    .HasColumnName("fulfilled")
                    .HasMaxLength(1000);

                entity.Property(e => e.PickQty)
                    .HasColumnName("pickQty")
                    .HasMaxLength(1000);

                entity.Property(e => e.Remain).HasMaxLength(1000);

                entity.Property(e => e.UnFulfilled)
                    .HasColumnName("unFulfilled")
                    .HasMaxLength(1000);

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(1000);
            });

            modelBuilder.Entity<PackSku>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pack_sku");

                entity.Property(e => e.PackSglItemBarcode)
                    .HasColumnName("PACK_SGL_ITEM_BARCODE")
                    .HasMaxLength(20);

                entity.Property(e => e.PackSize)
                    .HasColumnName("pack_size")
                    .HasColumnType("numeric(6, 2)");

                entity.Property(e => e.SkuNumber)
                    .HasColumnName("sku_number")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<PrepareImportsTruckLoad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("_Prepare_Imports_TruckLoad");

                entity.Property(e => e.AddDate)
                    .HasColumnName("Add_Date")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FileName)
                    .HasColumnName("File_Name")
                    .HasMaxLength(4000);

                entity.Property(e => e.GuId).HasColumnName("GuID");

                entity.Property(e => e.GuIdLog).HasColumnName("GuID_Log");

                entity.Property(e => e.Message).HasMaxLength(4000);

                entity.Property(e => e._0)
                    .HasColumnName("0")
                    .HasMaxLength(4000);

                entity.Property(e => e._1)
                    .HasColumnName("1")
                    .HasMaxLength(4000);

                entity.Property(e => e._10)
                    .HasColumnName("10")
                    .HasMaxLength(4000);

                entity.Property(e => e._11)
                    .HasColumnName("11")
                    .HasMaxLength(4000);

                entity.Property(e => e._12)
                    .HasColumnName("12")
                    .HasMaxLength(4000);

                entity.Property(e => e._13)
                    .HasColumnName("13")
                    .HasMaxLength(4000);

                entity.Property(e => e._14)
                    .HasColumnName("14")
                    .HasMaxLength(4000);

                entity.Property(e => e._15)
                    .HasColumnName("15")
                    .HasMaxLength(4000);

                entity.Property(e => e._16)
                    .HasColumnName("16")
                    .HasMaxLength(4000);

                entity.Property(e => e._17)
                    .HasColumnName("17")
                    .HasMaxLength(4000);

                entity.Property(e => e._18)
                    .HasColumnName("18")
                    .HasMaxLength(4000);

                entity.Property(e => e._19)
                    .HasColumnName("19")
                    .HasMaxLength(4000);

                entity.Property(e => e._2)
                    .HasColumnName("2")
                    .HasMaxLength(4000);

                entity.Property(e => e._20)
                    .HasColumnName("20")
                    .HasMaxLength(4000);

                entity.Property(e => e._200)
                    .HasColumnName("200")
                    .HasMaxLength(4000);

                entity.Property(e => e._21)
                    .HasColumnName("21")
                    .HasMaxLength(4000);

                entity.Property(e => e._22)
                    .HasColumnName("22")
                    .HasMaxLength(4000);

                entity.Property(e => e._23)
                    .HasColumnName("23")
                    .HasMaxLength(4000);

                entity.Property(e => e._24)
                    .HasColumnName("24")
                    .HasMaxLength(4000);

                entity.Property(e => e._25)
                    .HasColumnName("25")
                    .HasMaxLength(4000);

                entity.Property(e => e._26)
                    .HasColumnName("26")
                    .HasMaxLength(4000);

                entity.Property(e => e._27)
                    .HasColumnName("27")
                    .HasMaxLength(4000);

                entity.Property(e => e._28)
                    .HasColumnName("28")
                    .HasMaxLength(4000);

                entity.Property(e => e._29)
                    .HasColumnName("29")
                    .HasMaxLength(4000);

                entity.Property(e => e._3)
                    .HasColumnName("3")
                    .HasMaxLength(4000);

                entity.Property(e => e._30)
                    .HasColumnName("30")
                    .HasMaxLength(4000);

                entity.Property(e => e._31)
                    .HasColumnName("31")
                    .HasMaxLength(4000);

                entity.Property(e => e._32)
                    .HasColumnName("32")
                    .HasMaxLength(4000);

                entity.Property(e => e._33)
                    .HasColumnName("33")
                    .HasMaxLength(4000);

                entity.Property(e => e._34)
                    .HasColumnName("34")
                    .HasMaxLength(4000);

                entity.Property(e => e._35)
                    .HasColumnName("35")
                    .HasMaxLength(4000);

                entity.Property(e => e._36)
                    .HasColumnName("36")
                    .HasMaxLength(4000);

                entity.Property(e => e._37)
                    .HasColumnName("37")
                    .HasMaxLength(4000);

                entity.Property(e => e._38)
                    .HasColumnName("38")
                    .HasMaxLength(4000);

                entity.Property(e => e._39)
                    .HasColumnName("39")
                    .HasMaxLength(4000);

                entity.Property(e => e._4)
                    .HasColumnName("4")
                    .HasMaxLength(4000);

                entity.Property(e => e._40)
                    .HasColumnName("40")
                    .HasMaxLength(4000);

                entity.Property(e => e._41)
                    .HasColumnName("41")
                    .HasMaxLength(4000);

                entity.Property(e => e._42)
                    .HasColumnName("42")
                    .HasMaxLength(4000);

                entity.Property(e => e._43)
                    .HasColumnName("43")
                    .HasMaxLength(4000);

                entity.Property(e => e._44)
                    .HasColumnName("44")
                    .HasMaxLength(4000);

                entity.Property(e => e._45)
                    .HasColumnName("45")
                    .HasMaxLength(4000);

                entity.Property(e => e._46)
                    .HasColumnName("46")
                    .HasMaxLength(4000);

                entity.Property(e => e._47)
                    .HasColumnName("47")
                    .HasMaxLength(4000);

                entity.Property(e => e._48)
                    .HasColumnName("48")
                    .HasMaxLength(4000);

                entity.Property(e => e._49)
                    .HasColumnName("49")
                    .HasMaxLength(4000);

                entity.Property(e => e._5)
                    .HasColumnName("5")
                    .HasMaxLength(4000);

                entity.Property(e => e._50)
                    .HasColumnName("50")
                    .HasMaxLength(4000);

                entity.Property(e => e._6)
                    .HasColumnName("6")
                    .HasMaxLength(4000);

                entity.Property(e => e._7)
                    .HasColumnName("7")
                    .HasMaxLength(4000);

                entity.Property(e => e._8)
                    .HasColumnName("8")
                    .HasMaxLength(4000);

                entity.Property(e => e._9)
                    .HasColumnName("9")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<Provinces>(entity =>
            {
                entity.HasIndex(e => e.Code)
                    .HasName("UX_Provinces_Code")
                    .IsUnique();

                entity.Property(e => e.NameInEnglish)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.NameInThai)
                    .IsRequired()
                    .HasMaxLength(150);
            });

            modelBuilder.Entity<ReIndex>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("_ReIndex");

                entity.Property(e => e.Index)
                    .HasColumnName("_Index")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.TableName)
                    .HasColumnName("table_name")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<SalesReport>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Customer)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.Number)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ScmManifest432Dc>(entity =>
            {
                entity.HasKey(e => e.PId)
                    .HasName("SCM_MANIFEST_432_PK");

                entity.ToTable("SCM_MANIFEST_432_DC");

                entity.HasIndex(e => new { e.ProcStatCode, e.LastInvcDateTime })
                    .HasName("SCM_MANIFEST_432_IDX1");

                entity.Property(e => e.PId)
                    .HasColumnName("P_ID")
                    .HasColumnType("decimal(38, 30)");

                entity.Property(e => e.Bol)
                    .HasColumnName("BOL")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CartonNbr)
                    .IsRequired()
                    .HasColumnName("CARTON_NBR")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CartonQty)
                    .HasColumnName("CARTON_QTY")
                    .HasColumnType("decimal(38, 30)");

                entity.Property(e => e.CdMasterId)
                    .HasColumnName("CD_MASTER_ID")
                    .HasColumnType("decimal(9, 0)");

                entity.Property(e => e.Co)
                    .IsRequired()
                    .HasColumnName("CO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CrcBatchDateTime)
                    .HasColumnName("CRC_BATCH_DATE_TIME")
                    .HasColumnType("datetime2(0)");

                entity.Property(e => e.CrcBatchId)
                    .HasColumnName("CRC_BATCH_ID")
                    .HasColumnType("decimal(38, 30)");

                entity.Property(e => e.CustPoNbr)
                    .HasColumnName("CUST_PO_NBR")
                    .HasMaxLength(26)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerOrder)
                    .HasColumnName("CUSTOMER_ORDER")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DistroNbr)
                    .HasColumnName("DISTRO_NBR")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Div)
                    .IsRequired()
                    .HasColumnName("DIV")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.LastInvcDateTime)
                    .HasColumnName("LAST_INVC_DATE_TIME")
                    .HasColumnType("datetime2(0)");

                entity.Property(e => e.LoadNbr)
                    .IsRequired()
                    .HasColumnName("LOAD_NBR")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PktCtrlNbr)
                    .HasColumnName("PKT_CTRL_NBR")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PltId)
                    .HasColumnName("PLT_ID")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProcStatCode)
                    .HasColumnName("PROC_STAT_CODE")
                    .HasColumnType("decimal(2, 0)");

                entity.Property(e => e.Qty)
                    .HasColumnName("QTY")
                    .HasColumnType("decimal(38, 30)");

                entity.Property(e => e.QtyShip)
                    .HasColumnName("QTY_SHIP")
                    .HasColumnType("decimal(38, 30)");

                entity.Property(e => e.ShipVia)
                    .HasColumnName("SHIP_VIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.ShpmtNbr)
                    .HasColumnName("SHPMT_NBR")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SizeDesc)
                    .HasColumnName("SIZE_DESC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SkuDesc)
                    .HasColumnName("SKU_DESC")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.SubPack)
                    .HasColumnName("SUB_PACK")
                    .HasColumnType("decimal(9, 2)");

                entity.Property(e => e.Units)
                    .HasColumnName("UNITS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Weight)
                    .HasColumnName("WEIGHT")
                    .HasColumnType("decimal(38, 30)");

                entity.Property(e => e.Whse)
                    .HasColumnName("WHSE")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ScmManifest432Fdc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SCM_MANIFEST_432_FDC");

                entity.Property(e => e.Bol)
                    .HasColumnName("BOL")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CartonNbr)
                    .IsRequired()
                    .HasColumnName("CARTON_NBR")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CartonQty)
                    .HasColumnName("CARTON_QTY")
                    .HasColumnType("decimal(38, 30)");

                entity.Property(e => e.CdMasterId)
                    .HasColumnName("CD_MASTER_ID")
                    .HasColumnType("decimal(9, 0)");

                entity.Property(e => e.Co)
                    .IsRequired()
                    .HasColumnName("CO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CrcBatchDateTime)
                    .HasColumnName("CRC_BATCH_DATE_TIME")
                    .HasColumnType("datetime2(0)");

                entity.Property(e => e.CrcBatchId)
                    .HasColumnName("CRC_BATCH_ID")
                    .HasColumnType("decimal(38, 30)");

                entity.Property(e => e.CustPoNbr)
                    .HasColumnName("CUST_PO_NBR")
                    .HasMaxLength(26)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerOrder)
                    .HasColumnName("CUSTOMER_ORDER")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DistroNbr)
                    .HasColumnName("DISTRO_NBR")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Div)
                    .IsRequired()
                    .HasColumnName("DIV")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.LastInvcDateTime)
                    .HasColumnName("LAST_INVC_DATE_TIME")
                    .HasColumnType("datetime2(0)");

                entity.Property(e => e.LoadNbr)
                    .IsRequired()
                    .HasColumnName("LOAD_NBR")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PId)
                    .HasColumnName("P_ID")
                    .HasColumnType("decimal(38, 30)");

                entity.Property(e => e.PktCtrlNbr)
                    .HasColumnName("PKT_CTRL_NBR")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PltId)
                    .HasColumnName("PLT_ID")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProcStatCode)
                    .HasColumnName("PROC_STAT_CODE")
                    .HasColumnType("decimal(2, 0)");

                entity.Property(e => e.Qty)
                    .HasColumnName("QTY")
                    .HasColumnType("decimal(38, 30)");

                entity.Property(e => e.QtyShip)
                    .HasColumnName("QTY_SHIP")
                    .HasColumnType("decimal(38, 30)");

                entity.Property(e => e.ShipVia)
                    .HasColumnName("SHIP_VIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.ShpmtNbr)
                    .HasColumnName("SHPMT_NBR")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SizeDesc)
                    .HasColumnName("SIZE_DESC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SkuDesc)
                    .HasColumnName("SKU_DESC")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.SubPack)
                    .HasColumnName("SUB_PACK")
                    .HasColumnType("decimal(9, 2)");

                entity.Property(e => e.Units)
                    .HasColumnName("UNITS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Weight)
                    .HasColumnName("WEIGHT")
                    .HasColumnType("decimal(38, 30)");

                entity.Property(e => e.Whse)
                    .HasColumnName("WHSE")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ShortWave1>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.F7).HasMaxLength(255);

                entity.Property(e => e.Group)
                    .HasColumnName("GROUP")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductCategoryName)
                    .HasColumnName("ProductCategory_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<SnapDashboard>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("snap___dashboard");

                entity.Property(e => e.DocDate).HasColumnType("date");

                entity.Property(e => e.DocZone)
                    .HasColumnName("Doc_ZONE")
                    .HasMaxLength(1000);

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(1000);

                entity.Property(e => e.OverallStatus)
                    .HasColumnName("Overall_Status")
                    .HasMaxLength(1000);

                entity.Property(e => e.OverallStatusCode)
                    .HasColumnName("Overall_StatusCode")
                    .HasMaxLength(1000);

                entity.Property(e => e.PickStatus)
                    .HasColumnName("Pick_Status")
                    .HasMaxLength(1000);

                entity.Property(e => e.PickStatusCode)
                    .HasColumnName("Pick_StatusCode")
                    .HasMaxLength(1000);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(1000);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(1000);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(1000);

                entity.Property(e => e.RowIndex).ValueGeneratedOnAdd();

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(1000);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(1000);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(1000);
            });

            modelBuilder.Entity<SnapImCallcenter>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("snap_im_callcenter");

                entity.HasIndex(e => e.CallCenterIndex)
                    .HasName("IX_snap_im_callcenter");

                entity.Property(e => e.CallCenterDate)
                    .HasColumnName("CallCenter_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CallCenterIndex).HasColumnName("CallCenter_Index");

                entity.Property(e => e.CallCenterNo)
                    .IsRequired()
                    .HasColumnName("CallCenter_No")
                    .HasMaxLength(50);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PutawayStatus).HasColumnName("Putaway_Status");

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(200);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<SnapImCallcenteritem>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("snap_im_callcenteritem");

                entity.HasIndex(e => e.CallCenterIndex);

                entity.HasIndex(e => e.CallCenterItemIndex)
                    .HasName("IX_snap_im_callcenteritem");

                entity.HasIndex(e => e.PlanGoodsIssueIndex);

                entity.HasIndex(e => e.PlanGoodsIssueItemIndex);

                entity.HasIndex(e => e.PlanGoodsIssueNo);

                entity.Property(e => e.CallCenterIndex).HasColumnName("CallCenter_Index");

                entity.Property(e => e.CallCenterItemIndex).HasColumnName("CallCenterItem_Index");

                entity.Property(e => e.CallCenterRemark)
                    .HasColumnName("CallCenter_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MarshalQty)
                    .HasColumnName("Marshal_Qty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.MarshalRatio)
                    .HasColumnName("Marshal_Ratio")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.MarshalTotalQty)
                    .HasColumnName("Marshal_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<SnapImGoodsIssue>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("snap_im_GoodsIssue");

                entity.HasIndex(e => e.DocumentStatus);

                entity.HasIndex(e => e.GoodsIssueIndex)
                    .HasName("IX_snap_im_GoodsIssue");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CancelStatus).HasColumnName("Cancel_Status");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueDate)
                    .HasColumnName("GoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.RunWaveStatus).HasColumnName("RunWave_Status");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WaveIndex).HasColumnName("Wave_Index");
            });

            modelBuilder.Entity<SnapImGoodsIssueItemLocation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("snap_im_GoodsIssueItemLocation");

                entity.HasIndex(e => e.GoodsIssueIndex);

                entity.HasIndex(e => e.GoodsIssueItemLocationIndex)
                    .HasName("IX_snap_im_GoodsIssueItemLocation");

                entity.HasIndex(e => e.LocationIndex);

                entity.HasIndex(e => e.RefDocumentIndex);

                entity.HasIndex(e => e.RefDocumentItemIndex);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CancelStatus).HasColumnName("Cancel_Status");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemIndex).HasColumnName("GoodsIssueItem_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MashallQty)
                    .HasColumnName("Mashall_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.MashallStatus).HasColumnName("Mashall_Status");

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PickingBy)
                    .HasColumnName("Picking_By")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingDate)
                    .HasColumnName("Picking_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PickingProductConversionIndex).HasColumnName("Picking_ProductConversion_Index");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingRef1)
                    .HasColumnName("Picking_Ref1")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingRef2)
                    .HasColumnName("Picking_Ref2")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<SnapImPlanGoodsIssue>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("snap_im_PlanGoodsIssue");

                entity.HasIndex(e => e.DocumentStatus);

                entity.HasIndex(e => e.PlanGoodsIssueDueDate);

                entity.HasIndex(e => e.PlanGoodsIssueIndex)
                    .HasName("IX_snap_im_PlanGoodsIssue");

                entity.HasIndex(e => e.PlanGoodsIssueNo);

                entity.HasIndex(e => e.RoundIndex);

                entity.HasIndex(e => e.RouteIndex);

                entity.Property(e => e.CalCpn2Discount)
                    .HasColumnName("Cal_Cpn2Discount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalCpn9Discount)
                    .HasColumnName("Cal_Cpn9Discount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalEvoucherDiscount)
                    .HasColumnName("Cal_EvoucherDiscount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalGrandTotal)
                    .HasColumnName("Cal_GrandTotal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalPromotionDiscount)
                    .HasColumnName("Cal_PromotionDiscount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalTotalAfterDiscount)
                    .HasColumnName("Cal_TotalAfterDiscount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CountryIndex).HasColumnName("Country_Index");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateDateFile)
                    .HasColumnName("Create_Date_File")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DistrictIndex).HasColumnName("District_Index");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(500);

                entity.Property(e => e.DocumentRemarkSub)
                    .HasColumnName("Document_Remark_Sub")
                    .HasMaxLength(500);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.InvoiceAddress)
                    .HasColumnName("Invoice_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.InvoiceAddressName)
                    .HasColumnName("Invoice_AddressName")
                    .HasMaxLength(500);

                entity.Property(e => e.InvoiceCompanyName)
                    .HasColumnName("Invoice_CompanyName")
                    .HasMaxLength(200);

                entity.Property(e => e.InvoiceName)
                    .HasColumnName("Invoice_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.InvoiceRemark)
                    .HasColumnName("Invoice_Remark")
                    .HasMaxLength(500);

                entity.Property(e => e.InvoiceTaxNo)
                    .HasColumnName("Invoice_TaxNo")
                    .HasMaxLength(50);

                entity.Property(e => e.InvoiceTelephone)
                    .HasColumnName("Invoice_Telephone")
                    .HasMaxLength(50);

                entity.Property(e => e.IsConfirmShipmentFms).HasColumnName("IsConfirmShipmentFMS");

                entity.Property(e => e.IsConfirmShipmentFmsDate)
                    .HasColumnName("IsConfirmShipmentFMS_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.IsPostPickConfirmDate)
                    .HasColumnName("IsPostPickConfirm_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsPostShippmentDispatchDate)
                    .HasColumnName("IsPostShippmentDispatch_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentIssuer)
                    .HasColumnName("Payment_Issuer")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PostcodeIndex).HasColumnName("Postcode_Index");

                entity.Property(e => e.ProvinceIndex).HasColumnName("Province_Index");

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefPlanGoodsIssueIndex).HasColumnName("Ref_PlanGoodsIssue_Index");

                entity.Property(e => e.RefPlanGoodsIssueNo)
                    .HasColumnName("Ref_PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefWavePickIndex).HasColumnName("Ref_WavePick_index");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RoundTime)
                    .HasColumnName("Round_Time")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToAddress)
                    .HasColumnName("ShipTo_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.ShipToAddressName)
                    .HasColumnName("ShipTo_AddressName")
                    .HasMaxLength(500);

                entity.Property(e => e.ShipToCompanyName)
                    .HasColumnName("ShipTo_CompanyName")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToRemark)
                    .HasColumnName("ShipTo_Remark")
                    .HasMaxLength(500);

                entity.Property(e => e.ShipToTaxNo)
                    .HasColumnName("ShipTo_TaxNo")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToTelephone)
                    .HasColumnName("ShipTo_Telephone")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToAddress)
                    .HasColumnName("SoldTo_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.SoldToAddressCus)
                    .HasColumnName("SoldTo_Address_Cus")
                    .HasMaxLength(500);

                entity.Property(e => e.SoldToCountryIndex).HasColumnName("SoldTo_Country_Index");

                entity.Property(e => e.SoldToDistrictIndex).HasColumnName("SoldTo_District_Index");

                entity.Property(e => e.SoldToEmail)
                    .HasColumnName("SoldTo_Email")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToEmailCus)
                    .HasColumnName("SoldTo_Email_Cus")
                    .HasMaxLength(100);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToNameCus)
                    .HasColumnName("SoldTo_Name_Cus")
                    .HasMaxLength(500);

                entity.Property(e => e.SoldToPhone)
                    .HasColumnName("SoldTo_Phone")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToPhoneCus)
                    .HasColumnName("SoldTo_Phone_Cus")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToPostcodeIndex).HasColumnName("SoldTo_Postcode_Index");

                entity.Property(e => e.SoldToProvinceIndex).HasColumnName("SoldTo_Province_Index");

                entity.Property(e => e.SoldToSubDistrictIndex).HasColumnName("SoldTo_SubDistrict_Index");

                entity.Property(e => e.SoldToT1c)
                    .HasColumnName("SoldTo_T1C")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToT1cphone)
                    .HasColumnName("SoldTo_T1CPhone")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToTel)
                    .HasColumnName("SoldTo_Tel")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusDescRms)
                    .HasColumnName("Status_Desc_RMS")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusDropSt)
                    .HasColumnName("StatusDropST")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusDropStDate)
                    .HasColumnName("StatusDropST_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.StatusEdi)
                    .HasColumnName("Status_EDI")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusReason)
                    .HasColumnName("Status_Reason")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusRms)
                    .HasColumnName("Status_RMS")
                    .HasMaxLength(200);

                entity.Property(e => e.StplanGoodsIssueDueDate)
                    .HasColumnName("STPlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SubDistrictIndex).HasColumnName("SubDistrict_Index");

                entity.Property(e => e.SubOrderId)
                    .HasColumnName("SubOrderID")
                    .HasMaxLength(100);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.VendorId)
                    .HasColumnName("Vendor_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehousePhone)
                    .HasColumnName("Warehouse_Phone")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<SnapImPlanGoodsIssueItem>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("snap_im_PlanGoodsIssueItem");

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ImageUri).HasMaxLength(200);

                entity.Property(e => e.IsQa).HasColumnName("IsQA");

                entity.Property(e => e.IsWeightByPiece)
                    .HasColumnName("Is_WeightByPiece")
                    .HasMaxLength(50);

                entity.Property(e => e.IsWeightItem)
                    .HasColumnName("Is_WeightItem")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueSize)
                    .HasColumnName("PlanGoodsIssue_Size")
                    .HasMaxLength(200);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.QaBy)
                    .HasColumnName("QA_By")
                    .HasMaxLength(200);

                entity.Property(e => e.QaDate)
                    .HasColumnName("QA_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyInnerPack)
                    .HasColumnName("Qty_Inner_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyQa)
                    .HasColumnName("QtyQA")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyRemark)
                    .HasColumnName("Qty_Remark")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtySupPack)
                    .HasColumnName("Qty_Sup_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RunWaveStatus).HasColumnName("RunWave_Status");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ZoneCode).HasMaxLength(50);
            });

            modelBuilder.Entity<SnapImPos>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("snap_im_pos");

                entity.HasIndex(e => e.PosIndex)
                    .HasName("IX_snap_im_pos");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ConfirmBy).HasMaxLength(200);

                entity.Property(e => e.ConfirmDate).HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PosDate)
                    .HasColumnName("POS_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PosIndex).HasColumnName("POS_Index");

                entity.Property(e => e.PosNo)
                    .IsRequired()
                    .HasColumnName("POS_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PutawayStatus).HasColumnName("Putaway_Status");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<SnapImPositem>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("snap_im_positem");

                entity.HasIndex(e => e.PlanGoodsIssueIndex);

                entity.HasIndex(e => e.PlanGoodsIssueItemIndex);

                entity.HasIndex(e => e.PosIndex);

                entity.HasIndex(e => e.PositemIndex)
                    .HasName("IX_snap_im_positem");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PosIndex).HasColumnName("POS_Index");

                entity.Property(e => e.PosRemark)
                    .HasColumnName("POS_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.PositemIndex).HasColumnName("POSItem_Index");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<SnapImTask>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("snap_im_Task");

                entity.HasIndex(e => e.TaskIndex)
                    .HasName("IX_snap_im_Task");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DoTaskBy)
                    .HasColumnName("DoTask_By")
                    .HasMaxLength(200);

                entity.Property(e => e.DoTaskDate)
                    .HasColumnName("DoTask_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ProcessIndex).HasColumnName("Process_Index");

                entity.Property(e => e.TaskGroupId)
                    .HasColumnName("TaskGroup_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskGroupIndex).HasColumnName("TaskGroup_Index");

                entity.Property(e => e.TaskGroupName)
                    .HasColumnName("TaskGroup_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);
            });

            modelBuilder.Entity<SnapImTaskItem>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("snap_im_TaskItem");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ImageUri).HasMaxLength(400);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PickingBy)
                    .HasColumnName("Picking_By")
                    .HasMaxLength(100);

                entity.Property(e => e.PickingDate)
                    .HasColumnName("Picking_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionId)
                    .HasColumnName("Plan_ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionIndex).HasColumnName("Plan_ProductConversion_Index");

                entity.Property(e => e.PlanProductConversionName)
                    .HasColumnName("Plan_ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanRatio)
                    .HasColumnName("Plan_Ratio")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionBarcode).HasMaxLength(400);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPiece).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.SplitQty)
                    .HasColumnName("splitQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<SnapWmTagOut>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("snap_wm_TagOut");

                entity.HasIndex(e => e.RefDocumentNo)
                    .HasName("IX_snap_wm_TagOut_2");

                entity.HasIndex(e => e.TagOutIndex)
                    .HasName("IX_snap_wm_TagOut");

                entity.HasIndex(e => e.TagOutNo)
                    .HasName("IX_snap_wm_TagOut_1");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsPrint).HasColumnName("isPrint");

                entity.Property(e => e.LocationConfirmId)
                    .HasColumnName("Location_Confirm_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationConfirmIndex).HasColumnName("Location_Confirm_Index");

                entity.Property(e => e.LocationConfirmName)
                    .HasColumnName("Location_Confirm_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutRefNo1)
                    .HasColumnName("TagOutRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo2)
                    .HasColumnName("TagOutRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo3)
                    .HasColumnName("TagOutRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo4)
                    .HasColumnName("TagOutRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo5)
                    .HasColumnName("TagOutRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");
            });

            modelBuilder.Entity<SnapWmTagOutItem>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("snap_wm_TagOutItem");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CartonNo)
                    .HasColumnName("Carton_No")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemIndex).HasColumnName("GoodsIssueItem_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationConfirmId)
                    .HasColumnName("Location_Confirm_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationConfirmIndex).HasColumnName("Location_Confirm_Index");

                entity.Property(e => e.LocationConfirmName)
                    .HasColumnName("Location_Confirm_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.TagOutItemIndex).HasColumnName("TagOutItem_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutRefNo1)
                    .HasColumnName("TagOutRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo2)
                    .HasColumnName("TagOutRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo3)
                    .HasColumnName("TagOutRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo4)
                    .HasColumnName("TagOutRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo5)
                    .HasColumnName("TagOutRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<SnapWmTagoutpick>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("snap_wm_tagoutpick");

                entity.HasIndex(e => e.TagOutPickIndex)
                    .HasName("IX_snap_wm_tagoutpick");

                entity.HasIndex(e => e.TagOutPickNo);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ConfirmTagOutQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingBy)
                    .HasColumnName("Picking_By")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingDate)
                    .HasColumnName("Picking_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.SuggestLocationName)
                    .HasColumnName("SuggestLocation_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickRefNo1)
                    .HasColumnName("TagOutPickRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickRefNo2)
                    .HasColumnName("TagOutPickRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickRefNo3)
                    .HasColumnName("TagOutPickRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickRefNo4)
                    .HasColumnName("TagOutPickRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickRefNo5)
                    .HasColumnName("TagOutPickRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickSize)
                    .HasColumnName("TagOutPick_Size")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");
            });

            modelBuilder.Entity<Subdistricts>(entity =>
            {
                entity.HasIndex(e => e.Code)
                    .HasName("UX_Subdistricts_Code")
                    .IsUnique();

                entity.HasIndex(e => e.DistrictId);

                entity.HasIndex(e => e.ZipCode)
                    .HasName("UX_Subdistricts_ZipCode");

                entity.Property(e => e.Latitude).HasColumnType("decimal(6, 3)");

                entity.Property(e => e.Longitude).HasColumnType("decimal(6, 3)");

                entity.Property(e => e.NameInEnglish).HasMaxLength(150);

                entity.Property(e => e.NameInThai)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.HasOne(d => d.District)
                    .WithMany(p => p.Subdistricts)
                    .HasForeignKey(d => d.DistrictId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Subdistricts_Districts");
            });

            modelBuilder.Entity<SyAutoNumber>(entity =>
            {
                entity.HasKey(e => e.SysKey);

                entity.ToTable("Sy_AutoNumber");

                entity.Property(e => e.SysKey)
                    .HasColumnName("Sys_Key")
                    .HasMaxLength(50);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SysText)
                    .HasColumnName("Sys_Text")
                    .HasMaxLength(200);

                entity.Property(e => e.SysValue).HasColumnName("Sys_Value");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<SyConfig>(entity =>
            {
                entity.HasKey(e => e.ConfigIndex);

                entity.ToTable("sy_Config");

                entity.Property(e => e.ConfigIndex).HasColumnName("Config_Index");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConfigKey)
                    .HasColumnName("Config_Key")
                    .HasMaxLength(100);

                entity.Property(e => e.ConfigName)
                    .HasColumnName("Config_Name")
                    .HasMaxLength(1000);

                entity.Property(e => e.ConfigValue)
                    .HasColumnName("Config_Value")
                    .HasMaxLength(1000);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<SyConfigDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sy_config_detail");

                entity.Property(e => e.ConfigIndex).HasColumnName("Config_Index");

                entity.Property(e => e.ConfigKey)
                    .HasColumnName("Config_Key")
                    .HasMaxLength(100);

                entity.Property(e => e.ConfigValue)
                    .HasColumnName("Config_Value")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<SyDocumentTypeRef>(entity =>
            {
                entity.HasKey(e => e.DocumentTypeRefIndex);

                entity.ToTable("sy_DocumentTypeRef");

                entity.Property(e => e.DocumentTypeRefIndex)
                    .HasColumnName("DocumentTypeRef_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIdTo)
                    .HasColumnName("DocumentType_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeIndexTo).HasColumnName("DocumentType_Index_To");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentTypeNameTo)
                    .HasColumnName("DocumentType_Name_To")
                    .HasMaxLength(200);

                entity.Property(e => e.ProcessId)
                    .HasColumnName("Process_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessIndex).HasColumnName("Process_Index");

                entity.Property(e => e.ProcessName)
                    .HasColumnName("Process_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<SyLogInterface>(entity =>
            {
                entity.HasKey(e => e.LogIndex);

                entity.ToTable("sy_LogInterface");

                entity.Property(e => e.LogIndex).HasColumnName("log_index");

                entity.Property(e => e.DocumentIndex).HasColumnName("Document_Index");

                entity.Property(e => e.DocumentItemIndex).HasColumnName("DocumentItem_Index");

                entity.Property(e => e.DocumentNo)
                    .HasColumnName("Document_No")
                    .HasMaxLength(100);

                entity.Property(e => e.LogAbsoluteuri)
                    .HasColumnName("log_absoluteuri")
                    .HasMaxLength(1000);

                entity.Property(e => e.LogDate)
                    .HasColumnName("log_date")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LogName)
                    .HasColumnName("log_Name")
                    .HasMaxLength(100);

                entity.Property(e => e.LogRequestbody).HasColumnName("log_requestbody");

                entity.Property(e => e.LogStatus).HasColumnName("log_Status");
            });

            modelBuilder.Entity<SyMenu>(entity =>
            {
                entity.HasKey(e => e.MenuIndex);

                entity.ToTable("sy_Menu");

                entity.Property(e => e.MenuIndex)
                    .HasColumnName("Menu_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.MenuControlName)
                    .HasColumnName("MenuControl_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MenuId)
                    .HasColumnName("Menu_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.MenuName)
                    .HasColumnName("Menu_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MenuSecondName)
                    .HasColumnName("Menu_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.MenuThirdName)
                    .HasColumnName("Menu_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.MenuTypeIndex).HasColumnName("MenuType_Index");

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.MenuTypeIndexNavigation)
                    .WithMany(p => p.SyMenu)
                    .HasForeignKey(d => d.MenuTypeIndex)
                    .HasConstraintName("FK_sy_Menu_sy_MenuType");
            });

            modelBuilder.Entity<SyMenuType>(entity =>
            {
                entity.HasKey(e => e.MenuTypeIndex);

                entity.ToTable("sy_MenuType");

                entity.Property(e => e.MenuTypeIndex)
                    .HasColumnName("MenuType_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.MenuTypeId)
                    .HasColumnName("MenuType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.MenuTypeName)
                    .HasColumnName("MenuType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<SyProcess>(entity =>
            {
                entity.HasKey(e => e.ProcessIndex);

                entity.ToTable("sy_Process");

                entity.Property(e => e.ProcessIndex)
                    .HasColumnName("Process_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.ProcessId)
                    .HasColumnName("Process_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessName)
                    .HasColumnName("Process_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<SyProcessStatus>(entity =>
            {
                entity.HasKey(e => e.ProcessStatusIndex);

                entity.ToTable("sy_ProcessStatus");

                entity.Property(e => e.ProcessStatusIndex)
                    .HasColumnName("ProcessStatus_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.ProcessIndex).HasColumnName("Process_Index");

                entity.Property(e => e.ProcessStatusId)
                    .HasColumnName("ProcessStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<SyRuleConditionField>(entity =>
            {
                entity.HasKey(e => e.RuleConditionFieldIndex);

                entity.ToTable("sy_RuleConditionField");

                entity.Property(e => e.RuleConditionFieldIndex)
                    .HasColumnName("RuleConditionField_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsDestination).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSearch).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSort).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSource).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.ProcessIndex).HasColumnName("Process_Index");

                entity.Property(e => e.RuleConditionFieldName)
                    .HasColumnName("RuleConditionField_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.ProcessIndexNavigation)
                    .WithMany(p => p.SyRuleConditionField)
                    .HasForeignKey(d => d.ProcessIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_sy_RuleConditionField_sy_Process");
            });

            modelBuilder.Entity<SyRuleConditionOperation>(entity =>
            {
                entity.HasKey(e => e.RuleConditionOperationIndex);

                entity.ToTable("sy_RuleConditionOperation");

                entity.Property(e => e.RuleConditionOperationIndex)
                    .HasColumnName("RuleConditionOperation_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDelete).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem).HasDefaultValueSql("((0))");

                entity.Property(e => e.RuleConditionFieldIndex).HasColumnName("RuleConditionField_Index");

                entity.Property(e => e.RuleConditionOperation).HasMaxLength(200);

                entity.Property(e => e.RuleConditionOperationType).HasMaxLength(200);

                entity.Property(e => e.StatusId)
                    .HasColumnName("Status_Id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.RuleConditionFieldIndexNavigation)
                    .WithMany(p => p.SyRuleConditionOperation)
                    .HasForeignKey(d => d.RuleConditionFieldIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_sy_RuleConditionOperation_sy_RuleConditionField");
            });

            modelBuilder.Entity<SySuggestPutawayByProduct>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sy_SuggestPutawayByProduct");

                entity.HasIndex(e => e.ProductIndex)
                    .HasName("IX_sy_SuggestPutawayByProduct");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MaxStock)
                    .HasColumnName("Max_Stock")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.MinStock)
                    .HasColumnName("Min_Stock")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.SuggestPutawayByProductIndex).HasColumnName("SuggestPutawayByProduct_Index");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<SySuggestPutawayByZoneProduct>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sy_SuggestPutawayByZoneProduct");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.SuggestPutawayByZoneProductIndex).HasColumnName("SuggestPutawayByZoneProduct_Index");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<SyUserLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sy_UserLog");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.UserId)
                    .HasColumnName("User_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.UserIndex).HasColumnName("User_Index");

                entity.Property(e => e.UserKey).HasColumnName("User_Key");

                entity.Property(e => e.UserLogIndex).HasColumnName("UserLog_Index");

                entity.Property(e => e.UserName)
                    .HasColumnName("User_Name")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TempDataCount>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_data_count");

                entity.Property(e => e.A)
                    .HasColumnName("a")
                    .HasMaxLength(255);

                entity.Property(e => e.B)
                    .HasColumnName("b")
                    .HasMaxLength(255);

                entity.Property(e => e.C)
                    .HasColumnName("c")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TempDataSoh>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_data_soh");

                entity.Property(e => e.BrCost)
                    .HasColumnName("BR_COST")
                    .HasMaxLength(255);

                entity.Property(e => e.BrStock)
                    .HasColumnName("BR_STOCK")
                    .HasMaxLength(255);

                entity.Property(e => e.DateTime)
                    .HasColumnName("DATE_TIME")
                    .HasMaxLength(255);

                entity.Property(e => e.F2)
                    .HasColumnName("f2")
                    .HasMaxLength(255);

                entity.Property(e => e.F6)
                    .HasColumnName("f6")
                    .HasMaxLength(255);

                entity.Property(e => e.PrCode)
                    .HasColumnName("PR_CODE")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TempDtlDistro20190420>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_dtl_distro_20190420");

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsReceiveIndex).HasColumnName("PlanGoodsReceive_Index");

                entity.Property(e => e.PlanGoodsReceiveItemIndex).HasColumnName("PlanGoodsReceiveItem_Index");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyInnerPack)
                    .HasColumnName("Qty_Inner_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtySupPack)
                    .HasColumnName("Qty_Sup_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<TempHdrDistro20190420>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_hdr_distro_20190420");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsReceiveDate)
                    .HasColumnName("PlanGoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsReceiveDueDate)
                    .HasColumnName("PlanGoodsReceive_Due_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsReceiveIndex).HasColumnName("PlanGoodsReceive_Index");

                entity.Property(e => e.PlanGoodsReceiveNo)
                    .HasColumnName("PlanGoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TempIndex).HasColumnName("temp_index");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.UserAssignKey).HasMaxLength(200);

                entity.Property(e => e.VendorId)
                    .HasColumnName("Vendor_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorIndex).HasColumnName("Vendor_Index");

                entity.Property(e => e.VendorName)
                    .HasColumnName("Vendor_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TempImGoodReceiveItems>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_im_GoodReceiveItems");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveDockDoor)
                    .HasColumnName("GoodsReceive_DockDoor")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveIndex)
                    .HasColumnName("GoodsReceive_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveItemIndex)
                    .HasColumnName("GoodsReceiveItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveRemark)
                    .HasColumnName("GoodsReceive_Remark")
                    .HasMaxLength(255);

                entity.Property(e => e.IsUse).HasColumnName("is_use");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusIndex)
                    .HasColumnName("ItemStatus_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.LineNum).HasMaxLength(255);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PalletIndex)
                    .HasColumnName("Pallet_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionIndex)
                    .HasColumnName("ProductConversion_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductIndex)
                    .HasColumnName("Product_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(255);

                entity.Property(e => e.RefDocumentIndex)
                    .HasColumnName("Ref_Document_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.RefDocumentItemIndex)
                    .HasColumnName("Ref_DocumentItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(255);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(255);

                entity.Property(e => e.RefProcessIndex)
                    .HasColumnName("Ref_Process_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<TempImGoodReceiveItemsPrd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_im_GoodReceiveItems_Prd");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveDockDoor)
                    .HasColumnName("GoodsReceive_DockDoor")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveIndex)
                    .HasColumnName("GoodsReceive_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveItemIndex)
                    .HasColumnName("GoodsReceiveItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveRemark)
                    .HasColumnName("GoodsReceive_Remark")
                    .HasMaxLength(255);

                entity.Property(e => e.IsUse).HasColumnName("is_use");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusIndex)
                    .HasColumnName("ItemStatus_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.LineNum).HasMaxLength(255);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PalletIndex)
                    .HasColumnName("Pallet_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionIndex)
                    .HasColumnName("ProductConversion_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductIndex)
                    .HasColumnName("Product_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(255);

                entity.Property(e => e.RefDocumentIndex)
                    .HasColumnName("Ref_Document_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.RefDocumentItemIndex)
                    .HasColumnName("Ref_DocumentItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(255);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(255);

                entity.Property(e => e.RefProcessIndex)
                    .HasColumnName("Ref_Process_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<TempImGoodsReceiveItemLocation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_im_GoodsReceiveItemLocation");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveIndex)
                    .HasColumnName("GoodsReceive_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveItemIndex)
                    .HasColumnName("GoodsReceiveItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveItemLocationIndex)
                    .HasColumnName("GoodsReceiveItemLocation_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.IsUse).HasColumnName("is_use");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusIndex)
                    .HasColumnName("ItemStatus_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationIndex)
                    .HasColumnName("Location_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerIndex)
                    .HasColumnName("Owner_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionIndex)
                    .HasColumnName("ProductConversion_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductIndex)
                    .HasColumnName("Product_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(255);

                entity.Property(e => e.PutawayBy)
                    .HasColumnName("Putaway_By")
                    .HasMaxLength(255);

                entity.Property(e => e.PutawayDate)
                    .HasColumnName("Putaway_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PutawayStatus).HasColumnName("Putaway_Status");

                entity.Property(e => e.SuggestLocationIndex)
                    .HasColumnName("Suggest_Location_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.TagIndex)
                    .HasColumnName("Tag_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.TagItemIndex)
                    .HasColumnName("TagItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<TempImGoodsReceiveItemLocationPrd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_im_GoodsReceiveItemLocation_Prd");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveIndex)
                    .HasColumnName("GoodsReceive_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveItemIndex)
                    .HasColumnName("GoodsReceiveItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveItemLocationIndex)
                    .HasColumnName("GoodsReceiveItemLocation_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.IsUse).HasColumnName("is_use");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusIndex)
                    .HasColumnName("ItemStatus_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationIndex)
                    .HasColumnName("Location_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerIndex)
                    .HasColumnName("Owner_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionIndex)
                    .HasColumnName("ProductConversion_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductIndex)
                    .HasColumnName("Product_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(255);

                entity.Property(e => e.PutawayBy)
                    .HasColumnName("Putaway_By")
                    .HasMaxLength(255);

                entity.Property(e => e.PutawayDate)
                    .HasColumnName("Putaway_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PutawayStatus).HasColumnName("Putaway_Status");

                entity.Property(e => e.SuggestLocationIndex)
                    .HasColumnName("Suggest_Location_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.TagIndex)
                    .HasColumnName("Tag_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.TagItemIndex)
                    .HasColumnName("TagItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<TempImGoodsreceiveItem>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_im_goodsreceiveItem");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveDockDoor)
                    .HasColumnName("GoodsReceive_DockDoor")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveRemark)
                    .HasColumnName("GoodsReceive_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PalletIndex).HasColumnName("Pallet_Index");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(50);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<TempIssue>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.BackOrderStatus).HasMaxLength(255);

                entity.Property(e => e.CalCpn2Discount).HasColumnName("Cal_Cpn2Discount");

                entity.Property(e => e.CalCpn9Discount).HasColumnName("Cal_Cpn9Discount");

                entity.Property(e => e.CalEvoucherDiscount).HasColumnName("Cal_EvoucherDiscount");

                entity.Property(e => e.CalGrandTotal).HasColumnName("Cal_GrandTotal");

                entity.Property(e => e.CalPromotionDiscount).HasColumnName("Cal_PromotionDiscount");

                entity.Property(e => e.CalTotalAfterDiscount).HasColumnName("Cal_TotalAfterDiscount");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.CountryIndex)
                    .HasColumnName("Country_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateDateFile)
                    .HasColumnName("Create_Date_File")
                    .HasMaxLength(255);

                entity.Property(e => e.DistrictIndex)
                    .HasColumnName("District_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentPriorityStatus)
                    .HasColumnName("DocumentPriority_Status")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRemarkSub)
                    .HasColumnName("Document_Remark_Sub")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentTypeIndex)
                    .HasColumnName("DocumentType_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.F106).HasMaxLength(255);

                entity.Property(e => e.InvoiceAddress)
                    .HasColumnName("Invoice_Address")
                    .HasMaxLength(255);

                entity.Property(e => e.InvoiceCompanyName)
                    .HasColumnName("Invoice_CompanyName")
                    .HasMaxLength(255);

                entity.Property(e => e.InvoiceName)
                    .HasColumnName("Invoice_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.InvoiceRemark)
                    .HasColumnName("Invoice_Remark")
                    .HasMaxLength(255);

                entity.Property(e => e.InvoiceTaxNo)
                    .HasColumnName("Invoice_TaxNo")
                    .HasMaxLength(255);

                entity.Property(e => e.InvoiceTelephone).HasColumnName("Invoice_Telephone");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerIndex)
                    .HasColumnName("Owner_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(255);

                entity.Property(e => e.PaymentIssuer)
                    .HasColumnName("Payment_Issuer")
                    .HasMaxLength(255);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(255);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsIssueIndex)
                    .HasColumnName("PlanGoodsIssue_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(255);

                entity.Property(e => e.PostcodeIndex)
                    .HasColumnName("Postcode_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProvinceIndex)
                    .HasColumnName("Province_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ReasonCodeIndex)
                    .HasColumnName("ReasonCode_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.RefPlanGoodsIssueIndex)
                    .HasColumnName("Ref_PlanGoodsIssue_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.RefPlanGoodsIssueNo)
                    .HasColumnName("Ref_PlanGoodsIssue_No")
                    .HasMaxLength(255);

                entity.Property(e => e.RoundId).HasColumnName("Round_Id");

                entity.Property(e => e.RoundIndex)
                    .HasColumnName("Round_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.RoundTime)
                    .HasColumnName("Round_Time")
                    .HasMaxLength(255);

                entity.Property(e => e.RouteId).HasColumnName("Route_Id");

                entity.Property(e => e.RouteIndex)
                    .HasColumnName("Route_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ShipToAddress)
                    .HasColumnName("ShipTo_Address")
                    .HasMaxLength(255);

                entity.Property(e => e.ShipToCompanyName)
                    .HasColumnName("ShipTo_CompanyName")
                    .HasMaxLength(255);

                entity.Property(e => e.ShipToId).HasColumnName("ShipTo_Id");

                entity.Property(e => e.ShipToIndex)
                    .HasColumnName("ShipTo_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ShipToRemark)
                    .HasColumnName("ShipTo_Remark")
                    .HasMaxLength(255);

                entity.Property(e => e.ShipToTaxNo)
                    .HasColumnName("ShipTo_TaxNo")
                    .HasMaxLength(255);

                entity.Property(e => e.ShipToTelephone).HasColumnName("ShipTo_Telephone");

                entity.Property(e => e.SoldToAddress)
                    .HasColumnName("SoldTo_Address")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToAddressCus)
                    .HasColumnName("SoldTo_Address_Cus")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToCountryIndex)
                    .HasColumnName("SoldTo_Country_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToDistrictIndex)
                    .HasColumnName("SoldTo_District_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToEmail)
                    .HasColumnName("SoldTo_Email")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToEmailCus)
                    .HasColumnName("SoldTo_Email_Cus")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToIndex)
                    .HasColumnName("SoldTo_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToNameCus)
                    .HasColumnName("SoldTo_Name_Cus")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToPhone)
                    .HasColumnName("SoldTo_Phone")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToPhoneCus)
                    .HasColumnName("SoldTo_Phone_Cus")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToPostcodeIndex)
                    .HasColumnName("SoldTo_Postcode_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToProvinceIndex)
                    .HasColumnName("SoldTo_Province_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToSubDistrictIndex)
                    .HasColumnName("SoldTo_SubDistrict_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToT1c)
                    .HasColumnName("SoldTo_T1C")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToT1cphone)
                    .HasColumnName("SoldTo_T1CPhone")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToTel)
                    .HasColumnName("SoldTo_Tel")
                    .HasMaxLength(255);

                entity.Property(e => e.StatusDescRms)
                    .HasColumnName("Status_Desc_RMS")
                    .HasMaxLength(255);

                entity.Property(e => e.StatusEdi)
                    .HasColumnName("Status_EDI")
                    .HasMaxLength(255);

                entity.Property(e => e.StatusReason)
                    .HasColumnName("Status_Reason")
                    .HasMaxLength(255);

                entity.Property(e => e.StatusRms)
                    .HasColumnName("Status_RMS")
                    .HasMaxLength(255);

                entity.Property(e => e.StplanGoodsIssueDueDate)
                    .HasColumnName("STPlanGoodsIssue_Due_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.SubDistrictIndex)
                    .HasColumnName("SubDistrict_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.UserAssign).HasMaxLength(255);

                entity.Property(e => e.VendorId)
                    .HasColumnName("Vendor_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(255);

                entity.Property(e => e.WarehouseIndex)
                    .HasColumnName("Warehouse_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.WarehouseIndexTo)
                    .HasColumnName("Warehouse_Index_To")
                    .HasMaxLength(255);

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(255);

                entity.Property(e => e.WarehousePhone)
                    .HasColumnName("Warehouse_Phone")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TempIssueItem>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.ImageUri).HasMaxLength(255);

                entity.Property(e => e.IsQa)
                    .HasColumnName("IsQA")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusIndex)
                    .HasColumnName("ItemStatus_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.PlanGoodsIssueIndex)
                    .HasColumnName("PlanGoodsIssue_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.PlanGoodsIssueItemIndex)
                    .HasColumnName("PlanGoodsIssueItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.PlanGoodsIssueSize)
                    .HasColumnName("PlanGoodsIssue_Size")
                    .HasMaxLength(255);

                entity.Property(e => e.Price).HasMaxLength(255);

                entity.Property(e => e.ProductConversionId).HasColumnName("ProductConversion_Id");

                entity.Property(e => e.ProductConversionIndex)
                    .HasColumnName("ProductConversion_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductIndex)
                    .HasColumnName("Product_Index")
                    .HasColumnType("datetime");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(255);

                entity.Property(e => e.QaBy)
                    .HasColumnName("QA_By")
                    .HasMaxLength(255);

                entity.Property(e => e.QaDate)
                    .HasColumnName("QA_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.QtyInnerPack)
                    .HasColumnName("Qty_Inner_Pack")
                    .HasMaxLength(255);

                entity.Property(e => e.QtyQa)
                    .HasColumnName("QtyQA")
                    .HasMaxLength(255);

                entity.Property(e => e.QtySupPack)
                    .HasColumnName("Qty_Sup_Pack")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(255);

                entity.Property(e => e.UnitHeight).HasMaxLength(255);

                entity.Property(e => e.UnitLength).HasMaxLength(255);

                entity.Property(e => e.UnitPrice).HasMaxLength(255);

                entity.Property(e => e.UnitVolume).HasMaxLength(255);

                entity.Property(e => e.UnitWeight).HasMaxLength(255);

                entity.Property(e => e.UnitWidth).HasMaxLength(255);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.Volume).HasMaxLength(255);

                entity.Property(e => e.Weight).HasMaxLength(255);

                entity.Property(e => e.ZoneCode).HasMaxLength(255);
            });

            modelBuilder.Entity<TempLocation20190610>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Temp_Location_20190610");

                entity.Property(e => e.Barcode).HasMaxLength(255);

                entity.Property(e => e.Dept).HasMaxLength(255);

                entity.Property(e => e.F13)
                    .HasColumnName("f13")
                    .HasMaxLength(255);

                entity.Property(e => e.Group).HasMaxLength(255);

                entity.Property(e => e.Location)
                    .HasColumnName("Location ")
                    .HasMaxLength(255);

                entity.Property(e => e.Location1)
                    .HasColumnName("Location 1")
                    .HasMaxLength(255);

                entity.Property(e => e.NonSale)
                    .HasColumnName("Non-sale")
                    .HasMaxLength(255);

                entity.Property(e => e.Priority).HasMaxLength(255);

                entity.Property(e => e.ProductDiscruptionEng)
                    .HasColumnName("Product discruption ENG")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductDiscruptionTha)
                    .HasColumnName("Product discruption THA")
                    .HasMaxLength(255);

                entity.Property(e => e.RecevingBarcode)
                    .HasColumnName("Receving barcode")
                    .HasMaxLength(255);

                entity.Property(e => e.SubZone)
                    .HasColumnName("Sub zone")
                    .HasMaxLength(255);

                entity.Property(e => e.ZoneCode)
                    .HasColumnName("Zone Code")
                    .HasMaxLength(255);

                entity.Property(e => e.ZoneColor)
                    .HasColumnName("Zone color")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TempLocationChill>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_location_chill");

                entity.Property(e => e.IsNew)
                    .HasColumnName("is_new")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationId)
                    .HasColumnName("location_id")
                    .HasMaxLength(255);

                entity.Property(e => e.PickingSeq)
                    .HasColumnName("Picking_Seq")
                    .HasMaxLength(255);

                entity.Property(e => e.PutAwaySeq)
                    .HasColumnName("PutAway_Seq")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TempPackItem>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_pack_item");

                entity.Property(e => e.Component)
                    .IsRequired()
                    .HasColumnName("COMPONENT")
                    .HasMaxLength(16);

                entity.Property(e => e.ComponentItemDesc)
                    .HasColumnName("component_item_desc")
                    .HasMaxLength(200);

                entity.Property(e => e.PackItemDesc)
                    .HasColumnName("pack_item_desc")
                    .HasMaxLength(200);

                entity.Property(e => e.PackNo)
                    .IsRequired()
                    .HasColumnName("PACK_NO")
                    .HasMaxLength(16);

                entity.Property(e => e.PackQty)
                    .HasColumnName("PACK_QTY")
                    .HasColumnType("decimal(18, 3)");
            });

            modelBuilder.Entity<TempPackItemAmb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_pack_item_amb");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.Loose)
                    .HasColumnName("loose")
                    .HasMaxLength(255);

                entity.Property(e => e.LooseWms)
                    .HasColumnName("loose_wms")
                    .HasMaxLength(255);

                entity.Property(e => e.Pack)
                    .HasColumnName("pack")
                    .HasMaxLength(255);

                entity.Property(e => e.PackSize)
                    .HasColumnName("pack_size")
                    .HasMaxLength(255);

                entity.Property(e => e.PackSizeWms)
                    .HasColumnName("pack_size_wms")
                    .HasMaxLength(255);

                entity.Property(e => e.PackWms)
                    .HasColumnName("pack_wms")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TempPickNotPos>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_pick_not_pos");

                entity.Property(e => e.ProductId)
                    .HasColumnName("product_id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductName)
                    .HasColumnName("product_name")
                    .HasMaxLength(255);

                entity.Property(e => e.QtyPicked)
                    .HasColumnName("qty_picked")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TempPlanGoodsIssue>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.BackOrderStatus).HasMaxLength(255);

                entity.Property(e => e.CalCpn2Discount).HasColumnName("Cal_Cpn2Discount");

                entity.Property(e => e.CalCpn9Discount).HasColumnName("Cal_Cpn9Discount");

                entity.Property(e => e.CalEvoucherDiscount).HasColumnName("Cal_EvoucherDiscount");

                entity.Property(e => e.CalGrandTotal).HasColumnName("Cal_GrandTotal");

                entity.Property(e => e.CalPromotionDiscount).HasColumnName("Cal_PromotionDiscount");

                entity.Property(e => e.CalTotalAfterDiscount).HasColumnName("Cal_TotalAfterDiscount");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.CountryIndex)
                    .HasColumnName("Country_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateDateFile)
                    .HasColumnName("Create_Date_File")
                    .HasMaxLength(255);

                entity.Property(e => e.DistrictIndex)
                    .HasColumnName("District_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentPriorityStatus)
                    .HasColumnName("DocumentPriority_Status")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRemarkSub)
                    .HasColumnName("Document_Remark_Sub")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentTypeIndex)
                    .HasColumnName("DocumentType_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.F106).HasMaxLength(255);

                entity.Property(e => e.InvoiceAddress)
                    .HasColumnName("Invoice_Address")
                    .HasMaxLength(255);

                entity.Property(e => e.InvoiceCompanyName)
                    .HasColumnName("Invoice_CompanyName")
                    .HasMaxLength(255);

                entity.Property(e => e.InvoiceName)
                    .HasColumnName("Invoice_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.InvoiceRemark)
                    .HasColumnName("Invoice_Remark")
                    .HasMaxLength(255);

                entity.Property(e => e.InvoiceTaxNo)
                    .HasColumnName("Invoice_TaxNo")
                    .HasMaxLength(255);

                entity.Property(e => e.InvoiceTelephone).HasColumnName("Invoice_Telephone");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerIndex)
                    .HasColumnName("Owner_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(255);

                entity.Property(e => e.PaymentIssuer)
                    .HasColumnName("Payment_Issuer")
                    .HasMaxLength(255);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(255);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsIssueIndex)
                    .HasColumnName("PlanGoodsIssue_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(255);

                entity.Property(e => e.PostcodeIndex)
                    .HasColumnName("Postcode_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProvinceIndex)
                    .HasColumnName("Province_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ReasonCodeIndex)
                    .HasColumnName("ReasonCode_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.RefPlanGoodsIssueIndex)
                    .HasColumnName("Ref_PlanGoodsIssue_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.RefPlanGoodsIssueNo)
                    .HasColumnName("Ref_PlanGoodsIssue_No")
                    .HasMaxLength(255);

                entity.Property(e => e.RoundId).HasColumnName("Round_Id");

                entity.Property(e => e.RoundIndex)
                    .HasColumnName("Round_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.RoundTime)
                    .HasColumnName("Round_Time")
                    .HasMaxLength(255);

                entity.Property(e => e.RouteId).HasColumnName("Route_Id");

                entity.Property(e => e.RouteIndex)
                    .HasColumnName("Route_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ShipToAddress)
                    .HasColumnName("ShipTo_Address")
                    .HasMaxLength(255);

                entity.Property(e => e.ShipToCompanyName)
                    .HasColumnName("ShipTo_CompanyName")
                    .HasMaxLength(255);

                entity.Property(e => e.ShipToId).HasColumnName("ShipTo_Id");

                entity.Property(e => e.ShipToIndex)
                    .HasColumnName("ShipTo_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ShipToRemark)
                    .HasColumnName("ShipTo_Remark")
                    .HasMaxLength(255);

                entity.Property(e => e.ShipToTaxNo)
                    .HasColumnName("ShipTo_TaxNo")
                    .HasMaxLength(255);

                entity.Property(e => e.ShipToTelephone).HasColumnName("ShipTo_Telephone");

                entity.Property(e => e.SoldToAddress)
                    .HasColumnName("SoldTo_Address")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToAddressCus)
                    .HasColumnName("SoldTo_Address_Cus")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToCountryIndex)
                    .HasColumnName("SoldTo_Country_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToDistrictIndex)
                    .HasColumnName("SoldTo_District_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToEmail)
                    .HasColumnName("SoldTo_Email")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToEmailCus)
                    .HasColumnName("SoldTo_Email_Cus")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToIndex)
                    .HasColumnName("SoldTo_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToNameCus)
                    .HasColumnName("SoldTo_Name_Cus")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToPhone)
                    .HasColumnName("SoldTo_Phone")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToPhoneCus)
                    .HasColumnName("SoldTo_Phone_Cus")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToPostcodeIndex)
                    .HasColumnName("SoldTo_Postcode_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToProvinceIndex)
                    .HasColumnName("SoldTo_Province_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToSubDistrictIndex)
                    .HasColumnName("SoldTo_SubDistrict_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToT1c)
                    .HasColumnName("SoldTo_T1C")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToT1cphone)
                    .HasColumnName("SoldTo_T1CPhone")
                    .HasMaxLength(255);

                entity.Property(e => e.SoldToTel)
                    .HasColumnName("SoldTo_Tel")
                    .HasMaxLength(255);

                entity.Property(e => e.StatusDescRms)
                    .HasColumnName("Status_Desc_RMS")
                    .HasMaxLength(255);

                entity.Property(e => e.StatusEdi)
                    .HasColumnName("Status_EDI")
                    .HasMaxLength(255);

                entity.Property(e => e.StatusReason)
                    .HasColumnName("Status_Reason")
                    .HasMaxLength(255);

                entity.Property(e => e.StatusRms)
                    .HasColumnName("Status_RMS")
                    .HasMaxLength(255);

                entity.Property(e => e.StplanGoodsIssueDueDate)
                    .HasColumnName("STPlanGoodsIssue_Due_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.SubDistrictIndex)
                    .HasColumnName("SubDistrict_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.UserAssign).HasMaxLength(255);

                entity.Property(e => e.VendorId)
                    .HasColumnName("Vendor_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(255);

                entity.Property(e => e.WarehouseIndex)
                    .HasColumnName("Warehouse_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.WarehouseIndexTo)
                    .HasColumnName("Warehouse_Index_To")
                    .HasMaxLength(255);

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(255);

                entity.Property(e => e.WarehousePhone)
                    .HasColumnName("Warehouse_Phone")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TempPlanGoodsIssueItem>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.ImageUri).HasMaxLength(255);

                entity.Property(e => e.IsQa)
                    .HasColumnName("IsQA")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusIndex)
                    .HasColumnName("ItemStatus_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.PlanGoodsIssueIndex)
                    .HasColumnName("PlanGoodsIssue_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.PlanGoodsIssueItemIndex)
                    .HasColumnName("PlanGoodsIssueItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.PlanGoodsIssueSize)
                    .HasColumnName("PlanGoodsIssue_Size")
                    .HasMaxLength(255);

                entity.Property(e => e.Price).HasMaxLength(255);

                entity.Property(e => e.ProductConversionId).HasColumnName("ProductConversion_Id");

                entity.Property(e => e.ProductConversionIndex)
                    .HasColumnName("ProductConversion_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductIndex)
                    .HasColumnName("Product_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(255);

                entity.Property(e => e.QaBy)
                    .HasColumnName("QA_By")
                    .HasMaxLength(255);

                entity.Property(e => e.QaDate)
                    .HasColumnName("QA_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.QtyInnerPack)
                    .HasColumnName("Qty_Inner_Pack")
                    .HasMaxLength(255);

                entity.Property(e => e.QtyQa)
                    .HasColumnName("QtyQA")
                    .HasMaxLength(255);

                entity.Property(e => e.QtySupPack)
                    .HasColumnName("Qty_Sup_Pack")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(255);

                entity.Property(e => e.UnitHeight).HasMaxLength(255);

                entity.Property(e => e.UnitLength).HasMaxLength(255);

                entity.Property(e => e.UnitPrice).HasMaxLength(255);

                entity.Property(e => e.UnitVolume).HasMaxLength(255);

                entity.Property(e => e.UnitWeight).HasMaxLength(255);

                entity.Property(e => e.UnitWidth).HasMaxLength(255);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.Volume).HasMaxLength(255);

                entity.Property(e => e.Weight).HasMaxLength(255);

                entity.Property(e => e.ZoneCode).HasMaxLength(255);
            });

            modelBuilder.Entity<TempPosDeduct>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_pos_deduct");

                entity.Property(e => e.PackUnit)
                    .HasColumnName("Pack_unit")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(255);

                entity.Property(e => e.QtyDeductStock)
                    .HasColumnName("qty_deduct_stock")
                    .HasMaxLength(255);

                entity.Property(e => e.SmallestUnit)
                    .HasColumnName("smallest_unit")
                    .HasMaxLength(255);

                entity.Property(e => e.Transfer)
                    .HasColumnName("transfer")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TempProductRtw>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_product_rtw");

                entity.Property(e => e.Barcode)
                    .HasColumnName("barcode")
                    .HasMaxLength(255);

                entity.Property(e => e.Qty)
                    .HasColumnName("qty")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TempProductStock>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_product_stock");

                entity.Property(e => e.Barcode)
                    .HasColumnName("barcode")
                    .HasMaxLength(255);

                entity.Property(e => e.Qty)
                    .HasColumnName("qty")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TempProductStockRaw>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_product_stock_raw");

                entity.Property(e => e.Barcode)
                    .HasColumnName("barcode")
                    .HasMaxLength(255);

                entity.Property(e => e.Qty)
                    .HasColumnName("qty")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TempProductStockRecount>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_product_stock_recount");

                entity.Property(e => e.Barcode)
                    .HasColumnName("barcode")
                    .HasMaxLength(255);

                entity.Property(e => e.Qty)
                    .HasColumnName("qty")
                    .HasMaxLength(255);

                entity.Property(e => e.RecountQty)
                    .HasColumnName("recount_qty")
                    .HasMaxLength(255);

                entity.Property(e => e.RoundSeq)
                    .HasColumnName("ROUND_SEQ")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TempProductStockRecountRaw>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_product_stock_recount_raw");

                entity.Property(e => e.Barcode)
                    .HasColumnName("barcode")
                    .HasMaxLength(255);

                entity.Property(e => e.Qty)
                    .HasColumnName("qty")
                    .HasMaxLength(255);

                entity.Property(e => e.RecountQty)
                    .HasColumnName("recount_qty")
                    .HasMaxLength(255);

                entity.Property(e => e.RoundSeq)
                    .HasColumnName("ROUND_SEQ")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TempSnapAllocate>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_snap_allocate");

                entity.HasIndex(e => e.QtyPicked)
                    .HasName("IX_temp_snap_allocate_1");

                entity.HasIndex(e => new { e.PlangoodsissueNo, e.ProductId })
                    .HasName("IX_temp_snap_allocate");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlangoodsissueNo)
                    .IsRequired()
                    .HasColumnName("plangoodsissue_no")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductId)
                    .HasColumnName("product_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("product_name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyAllocated)
                    .HasColumnName("qty_allocated")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.QtyPicked)
                    .HasColumnName("qty_picked")
                    .HasColumnType("decimal(38, 6)");
            });

            modelBuilder.Entity<TempSnapStock>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_snap_stock");

                entity.HasIndex(e => e.ProductId)
                    .HasName("IX_temp_snap_stock");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.BinBalanceQtyReserve)
                    .HasColumnName("BinBalance_QtyReserve")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("product_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("product_name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TempStockDummy>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_stock_dummy");

                entity.Property(e => e.Barcode)
                    .HasColumnName("barcode")
                    .HasMaxLength(255);

                entity.Property(e => e.Qty)
                    .HasColumnName("qty")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TempSySuggestputawaybyproduct>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_sy_suggestputawaybyproduct");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MaxStock)
                    .HasColumnName("Max_Stock")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.MinStock)
                    .HasColumnName("Min_Stock")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.SuggestPutawayByProductIndex).HasColumnName("SuggestPutawayByProduct_Index");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<TempTableExp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_table_exp");

                entity.Property(e => e.Barcode)
                    .HasColumnName("barcode")
                    .HasMaxLength(50);

                entity.Property(e => e.Expdate)
                    .HasColumnName("expdate")
                    .HasMaxLength(30);

                entity.Property(e => e.ExpdateDate)
                    .HasColumnName("expdate_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Mfgdate)
                    .HasColumnName("mfgdate")
                    .HasMaxLength(30);

                entity.Property(e => e.MfgdateDate)
                    .HasColumnName("mfgdate_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ProductId)
                    .HasColumnName("product_id")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<TempWmBinBalance>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_wm_BinBalance");

                entity.Property(e => e.BinBalanceIndex)
                    .HasColumnName("BinBalance_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.BinBalanceQtyBal).HasColumnName("BinBalance_QtyBal");

                entity.Property(e => e.BinBalanceQtyBegin).HasColumnName("BinBalance_QtyBegin");

                entity.Property(e => e.BinBalanceQtyReserve).HasColumnName("BinBalance_QtyReserve");

                entity.Property(e => e.BinBalanceRatio).HasColumnName("BinBalance_Ratio");

                entity.Property(e => e.BinBalanceStatus).HasColumnName("BinBalance_Status");

                entity.Property(e => e.BinBalanceVolumeBal).HasColumnName("BinBalance_VolumeBal");

                entity.Property(e => e.BinBalanceVolumeBegin).HasColumnName("BinBalance_VolumeBegin");

                entity.Property(e => e.BinBalanceVolumeReserve).HasColumnName("BinBalance_VolumeReserve");

                entity.Property(e => e.BinBalanceWeightBal).HasColumnName("BinBalance_WeightBal");

                entity.Property(e => e.BinBalanceWeightBegin).HasColumnName("BinBalance_WeightBegin");

                entity.Property(e => e.BinBalanceWeightReserve).HasColumnName("BinBalance_WeightReserve");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasColumnType("datetime");

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("exp_date")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveDate)
                    .HasColumnName("GoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveExpDate)
                    .HasColumnName("GoodsReceive_EXP_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveIndex)
                    .HasColumnName("GoodsReceive_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveItemIndex)
                    .HasColumnName("GoodsReceiveItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveItemLocationIndex)
                    .HasColumnName("GoodsReceiveItemLocation_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveMfgDate)
                    .HasColumnName("GoodsReceive_MFG_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveNo)
                    .HasColumnName("GoodsReceive_No")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveProductConversionId)
                    .HasColumnName("GoodsReceive_ProductConversion_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveProductConversionIndex)
                    .HasColumnName("GoodsReceive_ProductConversion_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveProductConversionName)
                    .HasColumnName("GoodsReceive_ProductConversion_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.GrIndex)
                    .HasColumnName("GR_index")
                    .HasMaxLength(255);

                entity.Property(e => e.GrLine).HasColumnName("GR_line");

                entity.Property(e => e.GrNo)
                    .HasColumnName("GR_no")
                    .HasMaxLength(255);

                entity.Property(e => e.GrNo1)
                    .HasColumnName("gr_no1")
                    .HasMaxLength(255);

                entity.Property(e => e.IsUse).HasColumnName("is_use");

                entity.Property(e => e.IsUse1)
                    .HasColumnName("IsUse")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusIndex)
                    .HasColumnName("ItemStatus_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationId)
                    .HasColumnName("location_id")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationId1)
                    .HasColumnName("Location_Id1")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationIndex)
                    .HasColumnName("Location_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationType)
                    .HasColumnName("location_type")
                    .HasMaxLength(255);

                entity.Property(e => e.LotNo)
                    .HasColumnName("lot_no")
                    .HasMaxLength(255);

                entity.Property(e => e.LpnIndex)
                    .HasColumnName("LPN_index")
                    .HasMaxLength(255);

                entity.Property(e => e.LpnNo)
                    .HasColumnName("LPN_no")
                    .HasMaxLength(255);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("mfg_date")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("owner_id")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerId1)
                    .HasColumnName("Owner_Id1")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerIndex)
                    .HasColumnName("Owner_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionIndex)
                    .HasColumnName("ProductConversion_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductIndex)
                    .HasColumnName("Product_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(255);

                entity.Property(e => e.Qty).HasColumnName("qty");

                entity.Property(e => e.QtyLoose).HasColumnName("qty_loose");

                entity.Property(e => e.Ratio).HasColumnName("ratio");

                entity.Property(e => e.ReceiveDate)
                    .HasColumnName("receive_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.SkuBrcd)
                    .HasColumnName("sku_brcd")
                    .HasMaxLength(255);

                entity.Property(e => e.StatusId)
                    .HasColumnName("status_id")
                    .HasMaxLength(255);

                entity.Property(e => e.TagIndex)
                    .HasColumnName("Tag_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.TagItemIndex)
                    .HasColumnName("TagItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf11).HasColumnName("UDF_11");

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf21).HasColumnName("UDF_21");

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf31).HasColumnName("UDF_31");

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf41).HasColumnName("UDF_41");

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf51).HasColumnName("UDF_51");

                entity.Property(e => e.Uom)
                    .HasColumnName("uom")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.Warehouse)
                    .HasColumnName("warehouse")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TempWmBinBalancePrd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_wm_BinBalance_Prd");

                entity.Property(e => e.BinBalanceIndex)
                    .HasColumnName("BinBalance_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.BinBalanceQtyBal).HasColumnName("BinBalance_QtyBal");

                entity.Property(e => e.BinBalanceQtyBegin).HasColumnName("BinBalance_QtyBegin");

                entity.Property(e => e.BinBalanceQtyReserve).HasColumnName("BinBalance_QtyReserve");

                entity.Property(e => e.BinBalanceRatio).HasColumnName("BinBalance_Ratio");

                entity.Property(e => e.BinBalanceStatus).HasColumnName("BinBalance_Status");

                entity.Property(e => e.BinBalanceVolumeBal).HasColumnName("BinBalance_VolumeBal");

                entity.Property(e => e.BinBalanceVolumeBegin).HasColumnName("BinBalance_VolumeBegin");

                entity.Property(e => e.BinBalanceVolumeReserve).HasColumnName("BinBalance_VolumeReserve");

                entity.Property(e => e.BinBalanceWeightBal).HasColumnName("BinBalance_WeightBal");

                entity.Property(e => e.BinBalanceWeightBegin).HasColumnName("BinBalance_WeightBegin");

                entity.Property(e => e.BinBalanceWeightReserve).HasColumnName("BinBalance_WeightReserve");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasColumnType("datetime");

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("exp_date")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveDate)
                    .HasColumnName("GoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveExpDate)
                    .HasColumnName("GoodsReceive_EXP_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveIndex)
                    .HasColumnName("GoodsReceive_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveItemIndex)
                    .HasColumnName("GoodsReceiveItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveItemLocationIndex)
                    .HasColumnName("GoodsReceiveItemLocation_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveMfgDate)
                    .HasColumnName("GoodsReceive_MFG_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveNo)
                    .HasColumnName("GoodsReceive_No")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveProductConversionId)
                    .HasColumnName("GoodsReceive_ProductConversion_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveProductConversionIndex)
                    .HasColumnName("GoodsReceive_ProductConversion_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveProductConversionName)
                    .HasColumnName("GoodsReceive_ProductConversion_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.GrIndex)
                    .HasColumnName("GR_index")
                    .HasMaxLength(255);

                entity.Property(e => e.GrLine).HasColumnName("GR_line");

                entity.Property(e => e.GrNo)
                    .HasColumnName("GR_no")
                    .HasMaxLength(255);

                entity.Property(e => e.GrNo1)
                    .HasColumnName("gr_no1")
                    .HasMaxLength(255);

                entity.Property(e => e.IsUse).HasColumnName("is_use");

                entity.Property(e => e.IsUse1)
                    .HasColumnName("IsUse")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusIndex)
                    .HasColumnName("ItemStatus_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationId)
                    .HasColumnName("location_id")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationId1)
                    .HasColumnName("Location_Id1")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationIndex)
                    .HasColumnName("Location_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationType)
                    .HasColumnName("location_type")
                    .HasMaxLength(255);

                entity.Property(e => e.LotNo)
                    .HasColumnName("lot_no")
                    .HasMaxLength(255);

                entity.Property(e => e.LpnIndex)
                    .HasColumnName("LPN_index")
                    .HasMaxLength(255);

                entity.Property(e => e.LpnNo)
                    .HasColumnName("LPN_no")
                    .HasMaxLength(255);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("mfg_date")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("owner_id")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerId1)
                    .HasColumnName("Owner_Id1")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerIndex)
                    .HasColumnName("Owner_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionIndex)
                    .HasColumnName("ProductConversion_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductIndex)
                    .HasColumnName("Product_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(255);

                entity.Property(e => e.Qty).HasColumnName("qty");

                entity.Property(e => e.QtyLoose).HasColumnName("qty_loose");

                entity.Property(e => e.Ratio).HasColumnName("ratio");

                entity.Property(e => e.ReceiveDate)
                    .HasColumnName("receive_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.SkuBrcd)
                    .HasColumnName("sku_brcd")
                    .HasMaxLength(255);

                entity.Property(e => e.StatusId)
                    .HasColumnName("status_id")
                    .HasMaxLength(255);

                entity.Property(e => e.TagIndex)
                    .HasColumnName("Tag_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.TagItemIndex)
                    .HasColumnName("TagItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf11).HasColumnName("UDF_11");

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf21).HasColumnName("UDF_21");

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf31).HasColumnName("UDF_31");

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf41).HasColumnName("UDF_41");

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf51).HasColumnName("UDF_51");

                entity.Property(e => e.Uom)
                    .HasColumnName("uom")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasMaxLength(255);

                entity.Property(e => e.Warehouse)
                    .HasColumnName("warehouse")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TempWmTag>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_wm_Tag");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.F2).HasMaxLength(255);

                entity.Property(e => e.IsUse).HasColumnName("is_use");

                entity.Property(e => e.PalletIndex)
                    .HasColumnName("Pallet_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.PalletNo)
                    .HasColumnName("Pallet_No")
                    .HasMaxLength(255);

                entity.Property(e => e.TagIndex)
                    .HasColumnName("Tag_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(255);

                entity.Property(e => e.TagRefNo1)
                    .HasColumnName("TagRef_No1")
                    .HasMaxLength(255);

                entity.Property(e => e.TagRefNo2)
                    .HasColumnName("TagRef_No2")
                    .HasMaxLength(255);

                entity.Property(e => e.TagRefNo3)
                    .HasColumnName("TagRef_No3")
                    .HasMaxLength(255);

                entity.Property(e => e.TagRefNo4)
                    .HasColumnName("TagRef_No4")
                    .HasMaxLength(255);

                entity.Property(e => e.TagRefNo5)
                    .HasColumnName("TagRef_No5")
                    .HasMaxLength(255);

                entity.Property(e => e.TagStatus).HasColumnName("Tag_Status");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(255);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<TempWmTagItem>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_wm_TagItem");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveIndex)
                    .HasColumnName("GoodsReceive_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveItemIndex)
                    .HasColumnName("GoodsReceiveItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.IsUse).HasColumnName("is_use");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusIndex)
                    .HasColumnName("ItemStatus_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionIndex)
                    .HasColumnName("ProductConversion_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductIndex)
                    .HasColumnName("Product_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(255);

                entity.Property(e => e.TagIndex)
                    .HasColumnName("Tag_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.TagItemIndex)
                    .HasColumnName("TagItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(255);

                entity.Property(e => e.TagRefNo1)
                    .HasColumnName("TagRef_No1")
                    .HasMaxLength(255);

                entity.Property(e => e.TagRefNo2)
                    .HasColumnName("TagRef_No2")
                    .HasMaxLength(255);

                entity.Property(e => e.TagRefNo3)
                    .HasColumnName("TagRef_No3")
                    .HasMaxLength(255);

                entity.Property(e => e.TagRefNo4)
                    .HasColumnName("TagRef_No4")
                    .HasMaxLength(255);

                entity.Property(e => e.TagRefNo5)
                    .HasColumnName("TagRef_No5")
                    .HasMaxLength(255);

                entity.Property(e => e.TagStatus).HasColumnName("Tag_Status");

                entity.Property(e => e.Udf1).HasColumnName("UDF_1");

                entity.Property(e => e.Udf2).HasColumnName("UDF_2");

                entity.Property(e => e.Udf3).HasColumnName("UDF_3");

                entity.Property(e => e.Udf4).HasColumnName("UDF_4");

                entity.Property(e => e.Udf5).HasColumnName("UDF_5");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<TempWmTagItemPrd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_wm_TagItem_Prd");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveIndex)
                    .HasColumnName("GoodsReceive_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.GoodsReceiveItemIndex)
                    .HasColumnName("GoodsReceiveItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.IsUse).HasColumnName("is_use");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusIndex)
                    .HasColumnName("ItemStatus_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionIndex)
                    .HasColumnName("ProductConversion_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductIndex)
                    .HasColumnName("Product_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(255);

                entity.Property(e => e.TagIndex)
                    .HasColumnName("Tag_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.TagItemIndex)
                    .HasColumnName("TagItem_Index")
                    .HasMaxLength(255);

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(255);

                entity.Property(e => e.TagRefNo1)
                    .HasColumnName("TagRef_No1")
                    .HasMaxLength(255);

                entity.Property(e => e.TagRefNo2)
                    .HasColumnName("TagRef_No2")
                    .HasMaxLength(255);

                entity.Property(e => e.TagRefNo3)
                    .HasColumnName("TagRef_No3")
                    .HasMaxLength(255);

                entity.Property(e => e.TagRefNo4)
                    .HasColumnName("TagRef_No4")
                    .HasMaxLength(255);

                entity.Property(e => e.TagRefNo5)
                    .HasColumnName("TagRef_No5")
                    .HasMaxLength(255);

                entity.Property(e => e.TagStatus).HasColumnName("Tag_Status");

                entity.Property(e => e.Udf1).HasColumnName("UDF_1");

                entity.Property(e => e.Udf2).HasColumnName("UDF_2");

                entity.Property(e => e.Udf3).HasColumnName("UDF_3");

                entity.Property(e => e.Udf4).HasColumnName("UDF_4");

                entity.Property(e => e.Udf5).HasColumnName("UDF_5");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(255);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<ViewAssignTask>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_AssignTask");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TaskGroupId)
                    .HasColumnName("TaskGroup_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskGroupIndex).HasColumnName("TaskGroup_Index");

                entity.Property(e => e.TaskGroupName)
                    .HasColumnName("TaskGroup_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.UserAssign).HasMaxLength(200);
            });

            modelBuilder.Entity<ViewAssignTaskCart>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_AssignTaskCart");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TaskGroupId)
                    .HasColumnName("TaskGroup_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskGroupIndex).HasColumnName("TaskGroup_Index");

                entity.Property(e => e.TaskGroupName)
                    .HasColumnName("TaskGroup_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.UserAssign).HasMaxLength(200);
            });

            modelBuilder.Entity<ViewAssignTaskCartSku>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_AssignTaskCartSKU");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TaskGroupId)
                    .HasColumnName("TaskGroup_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskGroupIndex).HasColumnName("TaskGroup_Index");

                entity.Property(e => e.TaskGroupName)
                    .HasColumnName("TaskGroup_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.UserAssign).HasMaxLength(200);
            });

            modelBuilder.Entity<ViewAutoConfirmShipmentPos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_AutoConfirmShipmentPOS");

                entity.Property(e => e.CalGrandTotal)
                    .HasColumnName("Cal_GrandTotal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ConfirmMarshallNo)
                    .HasColumnName("ConfirmMarshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.IsConfirmShipmentFms).HasColumnName("IsConfirmShipmentFMS");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PosIndex).HasColumnName("POS_Index");

                entity.Property(e => e.PosNo)
                    .IsRequired()
                    .HasColumnName("POS_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyPos)
                    .HasColumnName("QtyPOS")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.QtySo).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SubOrderId).HasMaxLength(100);
            });

            modelBuilder.Entity<ViewAutoPosshipmentDispatch>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_AutoPOSShipmentDispatch");

                entity.Property(e => e.CalGrandTotal)
                    .HasColumnName("Cal_GrandTotal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ConfirmMarshallNo)
                    .HasColumnName("ConfirmMarshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PosIndex).HasColumnName("POS_Index");

                entity.Property(e => e.PosNo)
                    .IsRequired()
                    .HasColumnName("POS_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyPos)
                    .HasColumnName("QtyPOS")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.QtySo).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewAutoPosshippmentDispatchProduct>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_AutoPOSShippmentDispatchProduct");

                entity.Property(e => e.MarshallTaskPick).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ReplaceStatus).HasColumnName("Replace_Status");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TruckLoadIndex).HasColumnName("TruckLoad_Index");

                entity.Property(e => e.TruckLoadNo)
                    .HasColumnName("TruckLoad_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewAutoTask>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_AutoTask");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.User).HasMaxLength(200);

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewBinBalance>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_BinBalance");

                entity.Property(e => e.BinBalanceIndex).HasColumnName("BinBalance_Index");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyReserve)
                    .HasColumnName("BinBalance_QtyReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceRatio)
                    .HasColumnName("BinBalance_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsReceiveExpDate)
                    .HasColumnName("GoodsReceive_EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewBinBalanceLocation>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_BinBalanceLocation");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationTypeId)
                    .HasColumnName("LocationType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationTypeIndex).HasColumnName("LocationType_Index");

                entity.Property(e => e.LocationTypeName)
                    .HasColumnName("LocationType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewBinBalanceLocationManual>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_BinBalanceLocationManual");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationTypeId)
                    .HasColumnName("LocationType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationTypeIndex).HasColumnName("LocationType_Index");

                entity.Property(e => e.LocationTypeName)
                    .HasColumnName("LocationType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCallCenter>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CallCenter");

                entity.Property(e => e.CallCenterDate)
                    .HasColumnName("CallCenter_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CallCenterIndex).HasColumnName("CallCenter_Index");

                entity.Property(e => e.Ccqty)
                    .HasColumnName("CCQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.CcqtyPlan)
                    .HasColumnName("CCQtyPlan")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.CctotalQty)
                    .HasColumnName("CCTotalQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(103);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanQty)
                    .HasColumnName("PlanQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(200);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToNameCus)
                    .HasColumnName("soldTo_Name_Cus")
                    .HasMaxLength(500);

                entity.Property(e => e.SoldToT1cphone)
                    .HasColumnName("soldTo_T1CPhone")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewCallCenterDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CallCenterDetail");

                entity.Property(e => e.CallCenterIndex).HasColumnName("CallCenter_Index");

                entity.Property(e => e.CatotalQty)
                    .HasColumnName("CATotalQty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.ProblemQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoCreatDate).HasColumnType("smalldatetime");

                entity.Property(e => e.SoDate).HasColumnType("smalldatetime");

                entity.Property(e => e.SoDueDate).HasColumnType("smalldatetime");

                entity.Property(e => e.SoNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.SoQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCallCenterItemDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CallCenterItemDetail");

                entity.Property(e => e.CallCenterIndex).HasColumnName("CallCenter_Index");

                entity.Property(e => e.CallCenterItemIndex).HasColumnName("CallCenterItem_Index");

                entity.Property(e => e.CallCenterNo)
                    .IsRequired()
                    .HasColumnName("CallCenter_No")
                    .HasMaxLength(50);

                entity.Property(e => e.CallCenterRemark)
                    .HasColumnName("CallCenter_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MarshalQty)
                    .HasColumnName("Marshal_Qty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.MarshalRatio)
                    .HasColumnName("Marshal_Ratio")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.MarshalTotalQty)
                    .HasColumnName("Marshal_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductId)
                    .HasColumnName("PlanProduct_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ReasonCodeId)
                    .IsRequired()
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(200);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .IsRequired()
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.ReplaceStatus).HasColumnName("Replace_Status");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewCartAssign>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartAssign");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueDate)
                    .HasColumnName("GoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickRefNo1)
                    .HasColumnName("TagOutPickRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickRefNo2)
                    .HasColumnName("TagOutPickRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickRefNo3)
                    .HasColumnName("TagOutPickRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickRefNo4)
                    .HasColumnName("TagOutPickRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickRefNo5)
                    .HasColumnName("TagOutPickRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.TagOutRefNo1)
                    .HasColumnName("TagOutRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo2)
                    .HasColumnName("TagOutRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");
            });

            modelBuilder.Entity<ViewCartAssignList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartAssignList");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationStatus).HasColumnName("GoodsIssueItemLocation_Status");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");
            });

            modelBuilder.Entity<ViewCartAssignListV2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartAssignListV2");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationStatus).HasColumnName("GoodsIssueItemLocation_Status");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");
            });

            modelBuilder.Entity<ViewCartAssignListV3>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartAssignListV3");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationStatus).HasColumnName("GoodsIssueItemLocation_Status");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");
            });

            modelBuilder.Entity<ViewCartAssignV2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartAssignV2");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewCartNumber>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartNumber");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GilDocumentStatus).HasColumnName("GIL_Document_Status");

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.UserAssign)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCartNumberAutoTask>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartNumber_AutoTask");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.UserAssign)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCartNumberDrop>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartNumber_Drop");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GilDocumentStatus).HasColumnName("GIL_Document_Status");

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.SuggestLocationName)
                    .IsRequired()
                    .HasColumnName("SuggestLocation_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.UserAssign)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCartNumberDropAutoTask>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartNumber_Drop_AutoTask");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GilDocumentStatus).HasColumnName("GIL_Document_Status");

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.SuggestLocationName)
                    .IsRequired()
                    .HasColumnName("SuggestLocation_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.UserAssign)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCartNumberPick>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartNumber_Pick");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GilDocumentStatus).HasColumnName("GIL_Document_Status");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.ImagePicture)
                    .HasColumnName("imagePicture")
                    .HasMaxLength(500);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionId)
                    .HasColumnName("Plan_ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionIndex).HasColumnName("Plan_ProductConversion_Index");

                entity.Property(e => e.PlanProductConversionName)
                    .HasColumnName("Plan_ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanRatio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionBarcode).HasMaxLength(200);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .IsRequired()
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.RemainTotalQty)
                    .HasColumnName("Remain_TotalQty")
                    .HasColumnType("numeric(19, 6)");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UserAssign)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCartNumberPickGroup>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartNumber_PickGroup");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ImagePicture)
                    .HasColumnName("imagePicture")
                    .HasMaxLength(500);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionId)
                    .HasColumnName("Plan_ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionIndex).HasColumnName("Plan_ProductConversion_Index");

                entity.Property(e => e.PlanProductConversionName)
                    .HasColumnName("Plan_ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanRatio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionBarcode).HasMaxLength(200);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .IsRequired()
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.RemainTotalQty)
                    .HasColumnName("Remain_TotalQty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.UserAssign)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCartNumberPickGroupV2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartNumber_PickGroupV2");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ImagePicture)
                    .HasColumnName("imagePicture")
                    .HasMaxLength(500);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionId)
                    .HasColumnName("Plan_ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionIndex).HasColumnName("Plan_ProductConversion_Index");

                entity.Property(e => e.PlanProductConversionName)
                    .HasColumnName("Plan_ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanRatio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionBarcode).HasMaxLength(200);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .IsRequired()
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.RemainTotalQty)
                    .HasColumnName("Remain_TotalQty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.UserAssign)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCartNumberPickGroupV3>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartNumber_PickGroupV3");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ImagePicture)
                    .HasColumnName("imagePicture")
                    .HasMaxLength(400);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionId)
                    .HasColumnName("Plan_ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionIndex).HasColumnName("Plan_ProductConversion_Index");

                entity.Property(e => e.PlanProductConversionName)
                    .HasColumnName("Plan_ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanRatio).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.ProductConversionBarcode).IsUnicode(false);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .IsRequired()
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.RemainTotalQty)
                    .HasColumnName("Remain_TotalQty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.UserAssign)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCartNumberPickGroupV3AutoTask>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartNumber_PickGroupV3_AutoTask");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ImagePicture)
                    .HasColumnName("imagePicture")
                    .HasMaxLength(400);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionId)
                    .HasColumnName("Plan_ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionIndex).HasColumnName("Plan_ProductConversion_Index");

                entity.Property(e => e.PlanProductConversionName)
                    .HasColumnName("Plan_ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanRatio).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.ProductConversionBarcode).HasMaxLength(400);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .IsRequired()
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.RemainTotalQty)
                    .HasColumnName("Remain_TotalQty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.UserAssign)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCartNumberPickV2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartNumber_PickV2");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GilDocumentStatus).HasColumnName("GIL_Document_Status");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.ImagePicture)
                    .HasColumnName("imagePicture")
                    .HasMaxLength(500);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionId)
                    .HasColumnName("Plan_ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionIndex).HasColumnName("Plan_ProductConversion_Index");

                entity.Property(e => e.PlanProductConversionName)
                    .HasColumnName("Plan_ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanRatio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionBarcode).HasMaxLength(200);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .IsRequired()
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.RemainTotalQty)
                    .HasColumnName("Remain_TotalQty")
                    .HasColumnType("numeric(19, 6)");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UserAssign)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCartNumberPickV3>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartNumber_PickV3");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.ImagePicture)
                    .HasColumnName("imagePicture")
                    .HasMaxLength(400);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionId)
                    .HasColumnName("Plan_ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionIndex).HasColumnName("Plan_ProductConversion_Index");

                entity.Property(e => e.PlanProductConversionName)
                    .HasColumnName("Plan_ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanRatio).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.ProductConversionBarcode).HasMaxLength(400);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .IsRequired()
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.RemainTotalQty)
                    .HasColumnName("Remain_TotalQty")
                    .HasColumnType("numeric(19, 6)");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UserAssign)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCartNumberPickV3AutoTask>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartNumber_PickV3_AutoTask");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.ImagePicture)
                    .HasColumnName("imagePicture")
                    .HasMaxLength(400);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionId)
                    .HasColumnName("Plan_ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionIndex).HasColumnName("Plan_ProductConversion_Index");

                entity.Property(e => e.PlanProductConversionName)
                    .HasColumnName("Plan_ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanRatio).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.ProductConversionBarcode).HasMaxLength(400);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .IsRequired()
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.RemainTotalQty)
                    .HasColumnName("Remain_TotalQty")
                    .HasColumnType("numeric(19, 6)");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UserAssign)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCartonList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CartonList");

                entity.Property(e => e.BinBalanceIndex).HasColumnName("BinBalance_Index");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyReserve)
                    .HasColumnName("BinBalance_QtyReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemIndex).HasColumnName("GoodsIssueItem_Index");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationConfirmId)
                    .HasColumnName("Location_Confirm_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationConfirmIndex).HasColumnName("Location_Confirm_Index");

                entity.Property(e => e.LocationConfirmName)
                    .HasColumnName("Location_Confirm_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCheckCartAssignPicking>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CheckCartAssignPicking");

                entity.Property(e => e.ConfirmTagOutQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodIssueItemLocationStatus).HasColumnName("GoodIssueItemLocation_Status");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionRatio)
                    .HasColumnName("ProductConversion_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.TagoutNo)
                    .HasColumnName("TAgout_no")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UserAssign).HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCheckCartAssignPickingV2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CheckCartAssignPickingV2");

                entity.Property(e => e.ConfirmTagOutQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodIssueItemLocationStatus).HasColumnName("GoodIssueItemLocation_Status");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionRatio)
                    .HasColumnName("ProductConversion_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.TagoutNo)
                    .HasColumnName("TAgout_no")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UserAssign).HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCheckDocumentStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CheckDocumentStatus");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GrdocumentStatus).HasColumnName("GRDocument_Status");

                entity.Property(e => e.PlanGoodsReceiveNo)
                    .HasColumnName("PlanGoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGrdocumentStatus).HasColumnName("PlanGRDocument_Status");
            });

            modelBuilder.Entity<ViewCheckDupMarshal>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CheckDupMarshal");

                entity.Property(e => e.CountMarshallIndex).HasColumnName("CountMarshall_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");
            });

            modelBuilder.Entity<ViewCheckDupPos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CheckDupPOS");

                entity.Property(e => e.CountPosIndex).HasColumnName("CountPOS_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");
            });

            modelBuilder.Entity<ViewCheckGoodsReceiveConfirm>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CheckGoodsReceiveConfirm");

                entity.Property(e => e.BinBalanceIndex).HasColumnName("BinBalance_Index");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyBegin)
                    .HasColumnName("BinBalance_QtyBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyReserve)
                    .HasColumnName("BinBalance_QtyReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceRatio)
                    .HasColumnName("BinBalance_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceStatus).HasColumnName("BinBalance_Status");

                entity.Property(e => e.BinBalanceVolumeBal)
                    .HasColumnName("BinBalance_VolumeBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceVolumeBegin)
                    .HasColumnName("BinBalance_VolumeBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceVolumeReserve)
                    .HasColumnName("BinBalance_VolumeReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightBal)
                    .HasColumnName("BinBalance_WeightBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightBegin)
                    .HasColumnName("BinBalance_WeightBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightReserve)
                    .HasColumnName("BinBalance_WeightReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ContainerTypeId)
                    .HasColumnName("ContainerType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ContainerTypeIndex).HasColumnName("ContainerType_Index");

                entity.Property(e => e.ContainerTypeName)
                    .HasColumnName("ContainerType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DockDoorId)
                    .HasColumnName("DockDoor_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DockDoorIndex).HasColumnName("DockDoor_Index");

                entity.Property(e => e.DockDoorName)
                    .HasColumnName("DockDoor_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Expr10).HasMaxLength(200);

                entity.Property(e => e.Expr11).HasMaxLength(200);

                entity.Property(e => e.Expr12).HasMaxLength(200);

                entity.Property(e => e.Expr13).HasColumnType("datetime");

                entity.Property(e => e.Expr14).HasMaxLength(200);

                entity.Property(e => e.Expr15).HasColumnType("datetime");

                entity.Property(e => e.Expr16).HasMaxLength(200);

                entity.Property(e => e.Expr17).HasColumnType("datetime");

                entity.Property(e => e.Expr2)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Expr3)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Expr5)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Expr6).HasColumnType("datetime");

                entity.Property(e => e.Expr7).HasMaxLength(200);

                entity.Property(e => e.Expr8).HasMaxLength(200);

                entity.Property(e => e.Expr9).HasMaxLength(200);

                entity.Property(e => e.GoodsReceiveDate)
                    .HasColumnName("GoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveExpDate)
                    .HasColumnName("GoodsReceive_EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveItemLocationIndex).HasColumnName("GoodsReceiveItemLocation_Index");

                entity.Property(e => e.GoodsReceiveMfgDate)
                    .HasColumnName("GoodsReceive_MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveNo)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.GoodsReceiveProductConversionId)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.GoodsReceiveProductConversionIndex).HasColumnName("GoodsReceive_ProductConversion_Index");

                entity.Property(e => e.GoodsReceiveProductConversionName)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.IsUse).HasMaxLength(200);

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.PutawayStatus).HasColumnName("Putaway_Status");

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.VehicleTypeId)
                    .HasColumnName("VehicleType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.VehicleTypeIndex).HasColumnName("VehicleType_Index");

                entity.Property(e => e.VehicleTypeName)
                    .HasColumnName("VehicleType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCheckGr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CheckGR");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Expr10).HasMaxLength(200);

                entity.Property(e => e.Expr11).HasMaxLength(200);

                entity.Property(e => e.Expr12).HasMaxLength(200);

                entity.Property(e => e.Expr13).HasMaxLength(200);

                entity.Property(e => e.Expr14).HasMaxLength(200);

                entity.Property(e => e.Expr15).HasColumnType("datetime");

                entity.Property(e => e.Expr16).HasMaxLength(200);

                entity.Property(e => e.Expr17).HasColumnType("datetime");

                entity.Property(e => e.Expr18).HasMaxLength(200);

                entity.Property(e => e.Expr19).HasColumnType("datetime");

                entity.Property(e => e.Expr2).HasMaxLength(200);

                entity.Property(e => e.Expr20).HasMaxLength(50);

                entity.Property(e => e.Expr22)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Expr23)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.Expr24).HasMaxLength(200);

                entity.Property(e => e.Expr25).HasMaxLength(200);

                entity.Property(e => e.Expr26).HasMaxLength(50);

                entity.Property(e => e.Expr28)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Expr29)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.Expr3).HasMaxLength(200);

                entity.Property(e => e.Expr30).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Expr31).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Expr32).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Expr34)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Expr35)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.Expr36).HasColumnType("datetime");

                entity.Property(e => e.Expr37).HasColumnType("datetime");

                entity.Property(e => e.Expr38).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Expr39).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Expr4).HasMaxLength(200);

                entity.Property(e => e.Expr40).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Expr41).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Expr42).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Expr43).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Expr44).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Expr45).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Expr46).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Expr47).HasMaxLength(200);

                entity.Property(e => e.Expr48).HasMaxLength(200);

                entity.Property(e => e.Expr49).HasMaxLength(200);

                entity.Property(e => e.Expr5).HasMaxLength(200);

                entity.Property(e => e.Expr50).HasMaxLength(200);

                entity.Property(e => e.Expr51).HasMaxLength(200);

                entity.Property(e => e.Expr53).HasMaxLength(200);

                entity.Property(e => e.Expr54).HasMaxLength(200);

                entity.Property(e => e.Expr55).HasMaxLength(200);

                entity.Property(e => e.Expr56).HasMaxLength(200);

                entity.Property(e => e.Expr57).HasMaxLength(200);

                entity.Property(e => e.Expr58).HasMaxLength(200);

                entity.Property(e => e.Expr59).HasColumnType("datetime");

                entity.Property(e => e.Expr6).HasMaxLength(200);

                entity.Property(e => e.Expr60).HasMaxLength(200);

                entity.Property(e => e.Expr61).HasColumnType("datetime");

                entity.Property(e => e.Expr62).HasMaxLength(200);

                entity.Property(e => e.Expr63).HasColumnType("datetime");

                entity.Property(e => e.Expr8).HasMaxLength(200);

                entity.Property(e => e.Expr9).HasMaxLength(200);

                entity.Property(e => e.GoodsReceiveDockDoor)
                    .HasColumnName("GoodsReceive_DockDoor")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveRemark)
                    .HasColumnName("GoodsReceive_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PalletIndex).HasColumnName("Pallet_Index");

                entity.Property(e => e.PlanGoodsReceiveDate)
                    .HasColumnName("PlanGoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsReceiveDueDate)
                    .HasColumnName("PlanGoodsReceive_Due_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsReceiveIndex).HasColumnName("PlanGoodsReceive_Index");

                entity.Property(e => e.PlanGoodsReceiveItemIndex).HasColumnName("PlanGoodsReceiveItem_Index");

                entity.Property(e => e.PlanGoodsReceiveNo)
                    .HasColumnName("PlanGoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(50);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.UserAssignKey).HasMaxLength(200);

                entity.Property(e => e.VendorId)
                    .HasColumnName("Vendor_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorIndex).HasColumnName("Vendor_Index");

                entity.Property(e => e.VendorName)
                    .HasColumnName("Vendor_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewCheckInsertCallCenter>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CheckInsertCallCenter");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.MarshallTaskPickTotalQty)
                    .HasColumnName("MarshallTaskPick_TotalQty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PlanRatio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PlanTotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .IsRequired()
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .IsRequired()
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .IsRequired()
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.ReplaceStatus).HasColumnName("Replace_Status");

                entity.Property(e => e.TotalBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewCheckMarshalPos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Check_Marshal_POS");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("date");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewCheckMarshall>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CheckMarshall");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MarshallIndex).HasColumnName("Marshall_Index");

                entity.Property(e => e.MarshallItemIndex).HasColumnName("MarshallItem_Index");

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewCheckMarshallTaskDup>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CheckMarshallTaskDUP");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");
            });

            modelBuilder.Entity<ViewCheckMaxPlletLocation>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CheckMaxPlletLocation");

                entity.Property(e => e.CountLpn).HasColumnName("CountLPN");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Lpn)
                    .HasColumnName("LPN")
                    .HasColumnType("numeric(19, 6)");

                entity.Property(e => e.MaxPallet)
                    .HasColumnName("Max_Pallet")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PutAwaySeq).HasColumnName("PutAway_Seq");
            });

            modelBuilder.Entity<ViewCheckPlanGr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CheckPlanGR");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Expr1).HasMaxLength(200);

                entity.Property(e => e.Expr10).HasMaxLength(200);

                entity.Property(e => e.Expr11).HasMaxLength(200);

                entity.Property(e => e.Expr12).HasMaxLength(200);

                entity.Property(e => e.Expr13).HasColumnType("datetime");

                entity.Property(e => e.Expr14).HasMaxLength(200);

                entity.Property(e => e.Expr15).HasColumnType("datetime");

                entity.Property(e => e.Expr16).HasMaxLength(200);

                entity.Property(e => e.Expr17).HasColumnType("datetime");

                entity.Property(e => e.Expr2).HasMaxLength(200);

                entity.Property(e => e.Expr3).HasMaxLength(200);

                entity.Property(e => e.Expr4).HasMaxLength(200);

                entity.Property(e => e.Expr5).HasMaxLength(200);

                entity.Property(e => e.Expr7).HasMaxLength(200);

                entity.Property(e => e.Expr8).HasMaxLength(200);

                entity.Property(e => e.Expr9).HasMaxLength(200);

                entity.Property(e => e.GoodsReceiveDockDoor)
                    .HasColumnName("GoodsReceive_DockDoor")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveRemark)
                    .HasColumnName("GoodsReceive_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PalletIndex).HasColumnName("Pallet_Index");

                entity.Property(e => e.PlanGoodsReceiveDate)
                    .HasColumnName("PlanGoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsReceiveDueDate)
                    .HasColumnName("PlanGoodsReceive_Due_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsReceiveIndex).HasColumnName("PlanGoodsReceive_Index");

                entity.Property(e => e.PlanGoodsReceiveNo)
                    .HasColumnName("PlanGoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(50);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.UserAssignKey).HasMaxLength(200);

                entity.Property(e => e.VendorId)
                    .HasColumnName("Vendor_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorIndex).HasColumnName("Vendor_Index");

                entity.Property(e => e.VendorName)
                    .HasColumnName("Vendor_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewCheckPosnotInsert>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CheckPOSNotInsert");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewCheckPosqtyPlanlessQty>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CheckPOSQtyPlanlessQty");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PosIndex).HasColumnName("POS_Index");

                entity.Property(e => e.PositemIndex).HasColumnName("POSItem_Index");

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCheckQtyPick>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CheckQtyPick");

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MarshallTaskPick).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.OrderQty)
                    .HasColumnName("Order_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyRemark)
                    .HasColumnName("Qty_Remark")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ReplaceStatus).HasColumnName("Replace_Status");

                entity.Property(e => e.ShipQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.WeightTotal).HasColumnType("numeric(38, 6)");
            });

            modelBuilder.Entity<ViewCheckQtyPickBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CheckQtyPick_bak");

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MarshallTaskPick).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.OrderQty)
                    .HasColumnName("Order_Qty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.ReplaceStatus).HasColumnName("Replace_Status");

                entity.Property(e => e.ShipQty).HasColumnType("decimal(38, 6)");

                entity.Property(e => e.WeightTotal).HasColumnType("decimal(38, 6)");
            });

            modelBuilder.Entity<ViewCheckUserAssign>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CheckUserAssign");

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.TagoutNo)
                    .HasColumnName("TAgout_no")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.UserAssign).HasMaxLength(200);
            });

            modelBuilder.Entity<ViewChkTagoutpickCtn>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_chkTagoutpickCTN");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.UserAssign).HasMaxLength(200);
            });

            modelBuilder.Entity<ViewChkTagoutpickCtnAutoTask>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_chkTagoutpickCTN_AutoTask");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.UserAssign).HasMaxLength(200);
            });

            modelBuilder.Entity<ViewConfirmDoc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ConfirmDoc");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.PlanGoodsReceiveIndex).HasColumnName("PlanGoodsReceive_Index");

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewConfirmGoodsIssue>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ConfirmGoodsIssue");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GidocumentStatus).HasColumnName("GIDocument_Status");

                entity.Property(e => e.GildocumentStatus).HasColumnName("GILDocument_Status");

                entity.Property(e => e.GilitemStatusId)
                    .IsRequired()
                    .HasColumnName("GILItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.GilitemStatusIndex).HasColumnName("GILItemStatus_Index");

                entity.Property(e => e.GilitemStatusName)
                    .IsRequired()
                    .HasColumnName("GILItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GiproductConversionId)
                    .IsRequired()
                    .HasColumnName("GIProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.GiproductConversionIndex).HasColumnName("GIProductConversion_Index");

                entity.Property(e => e.GiproductConversionName)
                    .IsRequired()
                    .HasColumnName("GIProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Giqty)
                    .HasColumnName("GIQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Giratio)
                    .HasColumnName("GIRatio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.GitotalQty)
                    .HasColumnName("GITotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.GoodsIssueDate)
                    .HasColumnName("GoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingBy)
                    .HasColumnName("Picking_By")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingDate)
                    .HasColumnName("Picking_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionId)
                    .HasColumnName("PlanProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanProductConversionIndex).HasColumnName("PlanProductConversion_Index");

                entity.Property(e => e.PlanProductConversionName)
                    .HasColumnName("PlanProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanQty)
                    .HasColumnName("PlanQTY")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PlanRatio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PlanTotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskIdocumentStatus).HasColumnName("TaskIDocument_Status");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TaskQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TaskRatio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TaskTotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TaskVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TaskWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewConfirmMarshall>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ConfirmMarshall");

                entity.Property(e => e.ConfirmMarshallNo)
                    .HasColumnName("ConfirmMarshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.MarshallIndex).HasColumnName("Marshall_Index");

                entity.Property(e => e.MarshallNo)
                    .IsRequired()
                    .HasColumnName("Marshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Msqty)
                    .HasColumnName("MSQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.MstotalQty)
                    .HasColumnName("MSTotalQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Pqty)
                    .HasColumnName("PQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PtotaolQty)
                    .HasColumnName("PTotaolQty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewConfirmMarshallDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ConfirmMarshallDetail");

                entity.Property(e => e.Cmiqty)
                    .HasColumnName("CMIQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.CmiqtyPlan)
                    .HasColumnName("CMIQtyPlan")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.CmitotalQty)
                    .HasColumnName("CMITotalQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.ConfirmMarshallIndex).HasColumnName("ConfirmMarshall_Index");

                entity.Property(e => e.ConfirmMarshallNo)
                    .IsRequired()
                    .HasColumnName("ConfirmMarshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewConfirmMarshallItemPickTicket>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ConfirmMarshallItemPickTicket");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ConfirmMarshallIndex).HasColumnName("ConfirmMarshall_Index");

                entity.Property(e => e.ConfirmMarshallItemIndex).HasColumnName("ConfirmMarshallItem_Index");

                entity.Property(e => e.ConfirmMarshallRemark)
                    .HasColumnName("ConfirmMarshall_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.PutToQty)
                    .HasColumnName("PutTo_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewConfirmMarshallpopup>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ConfirmMarshallpopup");

                entity.Property(e => e.ConfirmMarshallNo)
                    .HasColumnName("ConfirmMarshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.MarshallIndex).HasColumnName("Marshall_Index");

                entity.Property(e => e.MarshallNo)
                    .IsRequired()
                    .HasColumnName("Marshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Msqty)
                    .HasColumnName("MSQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.MstotalQty)
                    .HasColumnName("MSTotalQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Pqty)
                    .HasColumnName("PQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PtotaolQty)
                    .HasColumnName("PTotaolQty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewConfirmShipmentFms>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ConfirmShipmentFMS");

                entity.Property(e => e.ConfirmBy).HasMaxLength(200);

                entity.Property(e => e.IsConfirmShipmentFms).HasColumnName("IsConfirmShipmentFMS");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PosIndex).HasColumnName("POS_Index");

                entity.Property(e => e.PosNo)
                    .IsRequired()
                    .HasColumnName("POS_No")
                    .HasMaxLength(50);

                entity.Property(e => e.SubOrderId)
                    .HasColumnName("SubOrderID")
                    .HasMaxLength(100);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewCopyCheckPos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_CopyCheckPOS");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PosIndex).HasColumnName("POS_Index");

                entity.Property(e => e.PositemIndex).HasColumnName("POSItem_Index");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewDashboard>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Dashboard");

                entity.Property(e => e.A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ACode)
                    .HasColumnName("A_Code")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.B)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.BCode)
                    .HasColumnName("B_Code")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.C)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CCode)
                    .HasColumnName("C_Code")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.Date).HasColumnType("date");

                entity.Property(e => e.F)
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.FCode)
                    .HasColumnName("F_Code")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Seq).HasMaxLength(200);

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsFixedLength();
            });

            modelBuilder.Entity<ViewDiscount>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Discount");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");
            });

            modelBuilder.Entity<ViewDiscountType>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_DiscountType");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");
            });

            modelBuilder.Entity<ViewGenTaskGi>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GenTaskGI");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueDate)
                    .HasColumnName("GoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemIndex).HasColumnName("GoodsIssueItem_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSubTypeId)
                    .IsRequired()
                    .HasColumnName("ProductSubType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductSubTypeIndex).HasColumnName("ProductSubType_Index");

                entity.Property(e => e.ProductSubTypeName)
                    .IsRequired()
                    .HasColumnName("ProductSubType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductTypeId)
                    .IsRequired()
                    .HasColumnName("ProductType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductTypeIndex).HasColumnName("ProductType_Index");

                entity.Property(e => e.ProductTypeName)
                    .IsRequired()
                    .HasColumnName("ProductType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WorkAreaId)
                    .HasColumnName("WorkArea_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WorkAreaIndex).HasColumnName("WorkArea_Index");

                entity.Property(e => e.WorkAreaName)
                    .HasColumnName("WorkArea_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewGetIdPickingTool>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GetIdPickingTool");

                entity.Property(e => e.Count).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.Image)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MarshallTaskIndex).HasColumnName("MarshallTask_Index");

                entity.Property(e => e.MarshallTaskItemIndex).HasColumnName("MarshallTaskItem_Index");

                entity.Property(e => e.MarshallTaskNo)
                    .IsRequired()
                    .HasColumnName("MarshallTask_No")
                    .HasMaxLength(50);

                entity.Property(e => e.MarshallTaskRemark)
                    .HasColumnName("MarshallTask_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionRatio)
                    .HasColumnName("ProductConversion_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.ReplaceStatus).HasColumnName("Replace_Status");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewGetIdPickingToolV2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GetIdPickingToolV2");

                entity.Property(e => e.Count).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.Image)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.IsWeightByPiece)
                    .HasColumnName("Is_WeightByPiece")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MarshallTaskIndex).HasColumnName("MarshallTask_Index");

                entity.Property(e => e.MarshallTaskItemIndex).HasColumnName("MarshallTaskItem_Index");

                entity.Property(e => e.MarshallTaskNo)
                    .IsRequired()
                    .HasColumnName("MarshallTask_No")
                    .HasMaxLength(50);

                entity.Property(e => e.MarshallTaskRemark)
                    .HasColumnName("MarshallTask_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionRatio)
                    .HasColumnName("ProductConversion_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyRemark)
                    .HasColumnName("Qty_Remark")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.ReplaceStatus).HasColumnName("Replace_Status");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewGetLocationEquipment>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GetLocationEquipment");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationEquipmentId)
                    .HasColumnName("LocationEquipment_Id")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.LocationEquipmentIndex).HasColumnName("LocationEquipment_Index");

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<ViewGetLocationWorkArea>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GetLocationWorkArea");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationWorkAreaId)
                    .HasColumnName("LocationWorkArea_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationWorkAreaIndex).HasColumnName("LocationWorkArea_Index");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WorkAreaIndex).HasColumnName("WorkArea_Index");

                entity.Property(e => e.WorkAreaName)
                    .HasColumnName("WorkArea_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewGetPlanGoodsReceiveItem>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GetPlanGoodsReceiveItem");

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.PlanGoodsReceiveIndex).HasColumnName("PlanGoodsReceive_Index");

                entity.Property(e => e.PlanGoodsReceiveItemIndex).HasColumnName("PlanGoodsReceiveItem_Index");

                entity.Property(e => e.PlanGoodsReceiveNo)
                    .HasColumnName("PlanGoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyInnerPack)
                    .HasColumnName("Qty_Inner_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtySupPack)
                    .HasColumnName("Qty_Sup_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewGetScanProductDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GetScanProductDetail");

                entity.Property(e => e.BaseProductConversion).HasMaxLength(200);

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveNo)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductCategoryIndex).HasColumnName("ProductCategory_Index");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionRatio)
                    .HasColumnName("ProductConversion_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductItemLifeD).HasColumnName("ProductItemLife_D");

                entity.Property(e => e.ProductItemLifeM).HasColumnName("ProductItemLife_M");

                entity.Property(e => e.ProductItemLifeY).HasColumnName("ProductItemLife_Y");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSubTypeIndex).HasColumnName("ProductSubType_Index");

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductTypeIndex).HasColumnName("ProductType_Index");
            });

            modelBuilder.Entity<ViewGetTagItem>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GetTagItem");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveNo)
                    .HasColumnName("GoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Griratio)
                    .HasColumnName("GRIRatio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.GritotalQty)
                    .HasColumnName("GRITotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductProductConvertion)
                    .HasColumnName("Product_ProductConvertion")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagRefNo1)
                    .HasColumnName("TagRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.TagRefNo2)
                    .HasColumnName("TagRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.TagRefNo3)
                    .HasColumnName("TagRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.TagRefNo4)
                    .HasColumnName("TagRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.TagRefNo5)
                    .HasColumnName("TagRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.TagStatus).HasColumnName("Tag_Status");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(50);

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewGetZoneLocation>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GetZoneLocation");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneLocationId)
                    .HasColumnName("ZoneLocation_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneLocationIndex).HasColumnName("ZoneLocation_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewGiprocessStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GIProcessStatus");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueDate)
                    .HasColumnName("GoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewGitablelist>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GITablelist");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueDate)
                    .HasColumnName("GoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewGitablelistV2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GITablelistV2");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueDate)
                    .HasColumnName("GoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewGitablelistV3>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GITablelistV3");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueDate)
                    .HasColumnName("GoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RunWaveStatus).HasColumnName("RunWave_Status");

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewGoodsIssue>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GoodsIssue");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.GiCreateBy)
                    .HasColumnName("gi_Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");
            });

            modelBuilder.Entity<ViewGoodsIssueGenTask>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GoodsIssueGenTask");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CancelStatus).HasColumnName("Cancel_Status");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.Giqty)
                    .HasColumnName("GIQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.GitotalQty)
                    .HasColumnName("GITotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemIndex).HasColumnName("GoodsIssueItem_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MashallQty)
                    .HasColumnName("Mashall_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.MashallStatus).HasColumnName("Mashall_Status");

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PickingBy)
                    .HasColumnName("Picking_By")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingDate)
                    .HasColumnName("Picking_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PickingProductConversionIndex).HasColumnName("Picking_ProductConversion_Index");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingRef1)
                    .HasColumnName("Picking_Ref1")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingRef2)
                    .HasColumnName("Picking_Ref2")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSubTypeId)
                    .HasColumnName("ProductSubType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductSubTypeIndex).HasColumnName("ProductSubType_Index");

                entity.Property(e => e.ProductSubTypeName)
                    .HasColumnName("ProductSubType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductTypeId)
                    .HasColumnName("ProductType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductTypeIndex).HasColumnName("ProductType_Index");

                entity.Property(e => e.ProductTypeName)
                    .HasColumnName("ProductType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.TaskTotalQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewGoodsIssueGenTaskNoLock>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GoodsIssueGenTaskNoLock");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.Giqty)
                    .HasColumnName("GIQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.GitotalQty)
                    .HasColumnName("GITotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemIndex).HasColumnName("GoodsIssueItem_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.TaskTotalQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(38, 6)");
            });

            modelBuilder.Entity<ViewGoodsIssueGenTaskPickManual>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GoodsIssueGenTaskPickManual");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CancelStatus).HasColumnName("Cancel_Status");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.Giqty)
                    .HasColumnName("GIQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.GitotalQty)
                    .HasColumnName("GITotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemIndex).HasColumnName("GoodsIssueItem_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MashallQty)
                    .HasColumnName("Mashall_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.MashallStatus).HasColumnName("Mashall_Status");

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PickingBy)
                    .HasColumnName("Picking_By")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingDate)
                    .HasColumnName("Picking_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PickingProductConversionIndex).HasColumnName("Picking_ProductConversion_Index");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingRef1)
                    .HasColumnName("Picking_Ref1")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingRef2)
                    .HasColumnName("Picking_Ref2")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSubTypeId)
                    .HasColumnName("ProductSubType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductSubTypeIndex).HasColumnName("ProductSubType_Index");

                entity.Property(e => e.ProductSubTypeName)
                    .HasColumnName("ProductSubType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductTypeId)
                    .HasColumnName("ProductType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductTypeIndex).HasColumnName("ProductType_Index");

                entity.Property(e => e.ProductTypeName)
                    .HasColumnName("ProductType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.TaskTotalQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewGoodsIssueItemLocation>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GoodsIssueItemLocation");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemIndex).HasColumnName("GoodsIssueItem_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MashallQty)
                    .HasColumnName("Mashall_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.MashallStatus).HasColumnName("Mashall_Status");

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PickingBy)
                    .HasColumnName("Picking_By")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingDate)
                    .HasColumnName("Picking_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PickingProductConversionIndex).HasColumnName("Picking_ProductConversion_Index");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingRef1)
                    .HasColumnName("Picking_Ref1")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingRef2)
                    .HasColumnName("Picking_Ref2")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewGoodsReceiveItemAllocate>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GoodsReceiveItemAllocate");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveDockDoor)
                    .HasColumnName("GoodsReceive_DockDoor")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveRemark)
                    .HasColumnName("GoodsReceive_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PalletIndex).HasColumnName("Pallet_Index");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(50);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewGoodsReceivePending>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GoodsReceivePending");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.GrtotalQty)
                    .HasColumnName("GRTotalQty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.PlanGoodsReceiveIndex).HasColumnName("PlanGoodsReceive_Index");

                entity.Property(e => e.PlanGoodsReceiveItemIndex).HasColumnName("PlanGoodsReceiveItem_Index");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Total).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewGrProcessStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GrProcessStatus");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ContainerTypeId)
                    .HasColumnName("ContainerType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ContainerTypeIndex).HasColumnName("ContainerType_Index");

                entity.Property(e => e.ContainerTypeName)
                    .HasColumnName("ContainerType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DockDoorId)
                    .HasColumnName("DockDoor_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DockDoorIndex).HasColumnName("DockDoor_Index");

                entity.Property(e => e.DockDoorName)
                    .HasColumnName("DockDoor_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsReceiveDate)
                    .HasColumnName("GoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveNo)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PutawayStatus).HasColumnName("Putaway_Status");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagStatus).HasColumnName("Tag_Status");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.VehicleTypeId)
                    .HasColumnName("VehicleType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.VehicleTypeIndex).HasColumnName("VehicleType_Index");

                entity.Property(e => e.VehicleTypeName)
                    .HasColumnName("VehicleType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewGrProcessStatusStock>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GrProcessStatusStock");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ContainerTypeId)
                    .HasColumnName("ContainerType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ContainerTypeIndex).HasColumnName("ContainerType_Index");

                entity.Property(e => e.ContainerTypeName)
                    .HasColumnName("ContainerType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DockDoorId)
                    .HasColumnName("DockDoor_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DockDoorIndex).HasColumnName("DockDoor_Index");

                entity.Property(e => e.DockDoorName)
                    .HasColumnName("DockDoor_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsReceiveDate)
                    .HasColumnName("GoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveNo)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PutawayStatus).HasColumnName("Putaway_Status");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagStatus).HasColumnName("Tag_Status");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.VehicleTypeId)
                    .HasColumnName("VehicleType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.VehicleTypeIndex).HasColumnName("VehicleType_Index");

                entity.Property(e => e.VehicleTypeName)
                    .HasColumnName("VehicleType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewGrSuggest>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_GR_Suggest");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveDate)
                    .HasColumnName("GoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveItemLocationIndex).HasColumnName("GoodsReceiveItemLocation_Index");

                entity.Property(e => e.GoodsReceiveNo)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.GridocumentStatus).HasColumnName("GRIDocument_Status");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.PutawayStatus).HasColumnName("Putaway_Status");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(50);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewInquiryLocationDetails>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_InquiryLocationDetails");

                entity.Property(e => e.LocationBay)
                    .HasColumnName("Location_Bay")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.LocationDepth)
                    .HasColumnName("Location_Depth")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.LocationLevel)
                    .HasColumnName("Location_Level")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationTypeName)
                    .HasColumnName("LocationType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationWorkAreaId)
                    .HasColumnName("LocationWorkArea_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingSeq)
                    .HasColumnName("Picking_Seq")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PutAwaySeq)
                    .HasColumnName("PutAway_Seq")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewInquiryPutawaySuggestionLocation>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_InquiryPutawaySuggestionLocation");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.PutAwaySeq)
                    .HasColumnName("PutAway_Seq")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewInquirySku>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_InquirySKU");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveDate)
                    .HasColumnName("GoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveNo)
                    .HasColumnName("GoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ReceivingRef).HasMaxLength(200);

                entity.Property(e => e.StockAllocated).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.StockAvailable).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.StockOnhand)
                    .HasColumnName("StockONHand")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewInquirySkuAllocatedBy>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_InquirySKU_AllocatedBy");

                entity.Property(e => e.BinCardReserveQtyBal)
                    .HasColumnName("BinCardReserve_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewInquirySkuConversion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_InquirySKU_Conversion");

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionRatio)
                    .HasColumnName("ProductConversion_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.SkuconversionName)
                    .HasColumnName("SKUConversionName")
                    .HasMaxLength(401);
            });

            modelBuilder.Entity<ViewInquiryTask>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_InquiryTASK");

                entity.Property(e => e.BackOrderStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ProcessName)
                    .HasColumnName("Process_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RemarkDocument)
                    .HasColumnName("Remark_Document")
                    .HasMaxLength(50);

                entity.Property(e => e.SubRefDocumentNo)
                    .IsRequired()
                    .HasColumnName("Sub_Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskGroupName)
                    .IsRequired()
                    .HasColumnName("TaskGroup_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TaskRatio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TaskStatus)
                    .IsRequired()
                    .HasColumnName("Task_Status")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TaskTotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewMarShallAfterGi>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_MarShallAfterGI");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefItemNo1)
                    .HasColumnName("DocumentRefItem_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefItemNo2)
                    .HasColumnName("DocumentRefItem_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefItemNo3)
                    .HasColumnName("DocumentRefItem_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefItemNo4)
                    .HasColumnName("DocumentRefItem_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefItemNo5)
                    .HasColumnName("DocumentRefItem_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.Expr1).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProcessIndex).HasColumnName("Process_Index");

                entity.Property(e => e.ProcessName)
                    .HasColumnName("Process_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProvinceIndex).HasColumnName("Province_Index");

                entity.Property(e => e.Qty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.SoldToAddress)
                    .HasColumnName("SoldTo_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.SoldToCountryIndex).HasColumnName("SoldTo_Country_Index");

                entity.Property(e => e.SoldToDistrictIndex).HasColumnName("SoldTo_District_Index");

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewMarshalRelease>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_MarshalRelease");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGiBackOrder).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.PlanGiQty)
                    .HasColumnName("PlanGiQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.PlanGiTotalQty)
                    .HasColumnName("PlanGiTotalQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewMarshallDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_MarshallDetail");

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MarshallNo)
                    .IsRequired()
                    .HasColumnName("Marshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Msqty)
                    .HasColumnName("MSQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.MstotalQty)
                    .HasColumnName("MSTotalQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewMsUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_MS_User");

                entity.Property(e => e.UserGroupIndex).HasColumnName("UserGroup_Index");

                entity.Property(e => e.UserId)
                    .HasColumnName("User_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.UserIndex).HasColumnName("User_Index");

                entity.Property(e => e.UserName)
                    .HasColumnName("User_Name")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewOrderPerformanceByRound>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Order_Performance_By_Round");

                entity.Property(e => e.CanceledQty).HasColumnName("canceledQty");

                entity.Property(e => e.DocDate).HasColumnType("date");

                entity.Property(e => e.DoneQty).HasColumnName("doneQty");

                entity.Property(e => e.OrderQty).HasColumnName("orderQty");

                entity.Property(e => e.RemainQty).HasColumnName("remainQty");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewOrderPerformanceByRoute>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Order_Performance_By_Route");

                entity.Property(e => e.DocDate).HasColumnType("smalldatetime");

                entity.Property(e => e.OrderQty).HasColumnName("orderQty");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewOverallPerformanceStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Overall_Performance_Status");

                entity.Property(e => e.DocDate).HasColumnType("date");

                entity.Property(e => e.StatusName)
                    .IsRequired()
                    .HasColumnName("statusName")
                    .HasMaxLength(16)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ViewOverallPerformanceStatusExpress>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Overall_Performance_StatusExpress");

                entity.Property(e => e.DocDate).HasColumnType("date");

                entity.Property(e => e.StatusName)
                    .IsRequired()
                    .HasColumnName("statusName")
                    .HasMaxLength(16)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ViewPickConfirm>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PickConfirm");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductCategoryId)
                    .IsRequired()
                    .HasColumnName("ProductCategory_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductCategoryName)
                    .IsRequired()
                    .HasColumnName("ProductCategory_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductTypeId)
                    .IsRequired()
                    .HasColumnName("ProductType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductTypeName)
                    .IsRequired()
                    .HasColumnName("ProductType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SubOrderId)
                    .HasColumnName("SubOrderID")
                    .HasMaxLength(100);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewPickManual>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PickManual");

                entity.Property(e => e.BinBalanceIndex).HasColumnName("BinBalance_Index");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(19, 6)");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewPickManualCheckWave>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PickManualCheckWave");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(2, 2)");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueNo).HasColumnName("GoodsIssue_No");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewPickManualEquipmentItem>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PickManualEquipmentItem");

                entity.Property(e => e.EquipmentItemName)
                    .IsRequired()
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");
            });

            modelBuilder.Entity<ViewPickManualV2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PickManualV2");

                entity.Property(e => e.BinBalanceIndex).HasColumnName("BinBalance_Index");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(19, 6)");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewPickManualV3>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PickManualV3");

                entity.Property(e => e.BinBalanceIndex).HasColumnName("BinBalance_Index");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(19, 6)");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.IsWeightByPiece)
                    .IsRequired()
                    .HasColumnName("Is_WeightByPiece")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyRemark)
                    .HasColumnName("Qty_Remark")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPickManualV4>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PickManualV4");

                entity.Property(e => e.BinBalanceIndex).HasColumnName("BinBalance_Index");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(19, 6)");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.IsWeightByPiece)
                    .IsRequired()
                    .HasColumnName("Is_WeightByPiece")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyRemark)
                    .HasColumnName("Qty_Remark")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPickManualWaveBinBalance>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PickManualWaveBinBalance");

                entity.Property(e => e.BinBalanceIndex).HasColumnName("BinBalance_Index");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyBegin)
                    .HasColumnName("BinBalance_QtyBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyReserve)
                    .HasColumnName("BinBalance_QtyReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceRatio)
                    .HasColumnName("BinBalance_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceStatus).HasColumnName("BinBalance_Status");

                entity.Property(e => e.BinBalanceVolumeBal)
                    .HasColumnName("BinBalance_VolumeBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceVolumeBegin)
                    .HasColumnName("BinBalance_VolumeBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceVolumeReserve)
                    .HasColumnName("BinBalance_VolumeReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightBal)
                    .HasColumnName("BinBalance_WeightBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightBegin)
                    .HasColumnName("BinBalance_WeightBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightReserve)
                    .HasColumnName("BinBalance_WeightReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveDate)
                    .HasColumnName("GoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveExpDate)
                    .HasColumnName("GoodsReceive_EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveItemLocationIndex).HasColumnName("GoodsReceiveItemLocation_Index");

                entity.Property(e => e.GoodsReceiveMfgDate)
                    .HasColumnName("GoodsReceive_MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveNo)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.GoodsReceiveProductConversionId)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.GoodsReceiveProductConversionIndex).HasColumnName("GoodsReceive_ProductConversion_Index");

                entity.Property(e => e.GoodsReceiveProductConversionName)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.IsUse).HasMaxLength(200);

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductShelfLifeD).HasColumnName("ProductShelfLife_D");

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<ViewPickShort>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PickShort");

                entity.Property(e => e.Count).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MarshallIndex).HasColumnName("Marshall_Index");

                entity.Property(e => e.MarshallNo)
                    .IsRequired()
                    .HasColumnName("Marshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPickingPerformanceByRound>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Picking_Performance_By_Round");

                entity.Property(e => e.DocDate).HasColumnType("date");

                entity.Property(e => e.Fulfilled)
                    .HasColumnName("fulfilled")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.PickQty)
                    .HasColumnName("pickQty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Remain)
                    .HasColumnName("REmain")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.UnFulfilled)
                    .HasColumnName("unFulfilled")
                    .HasColumnType("numeric(38, 6)");
            });

            modelBuilder.Entity<ViewPickingPerformanceByZone>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Picking_Performance_By_Zone");

                entity.Property(e => e.DocDate).HasColumnType("date");

                entity.Property(e => e.Fulfilled)
                    .HasColumnName("fulfilled")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.PickQty)
                    .HasColumnName("pickQty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Remain)
                    .HasColumnName("REmain")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.UnFulfilled)
                    .HasColumnName("unFulfilled")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPickingRoute>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Picking_Route");

                entity.Property(e => e.DocDate).HasColumnType("date");

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPickingRouteOrder>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Picking_Route_Order");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ItemDocumentStatus).HasColumnName("ItemDocument_Status");

                entity.Property(e => e.OverallStatus)
                    .IsRequired()
                    .HasColumnName("Overall_Status")
                    .HasMaxLength(13);

                entity.Property(e => e.OverallStatusCode)
                    .IsRequired()
                    .HasColumnName("Overall_StatusCode")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewPickingRouteOrderBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Picking_Route_Order_Bak");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ItemDocumentStatus).HasColumnName("ItemDocument_Status");

                entity.Property(e => e.OverallStatus)
                    .IsRequired()
                    .HasColumnName("Overall_Status")
                    .HasMaxLength(13);

                entity.Property(e => e.OverallStatusCode)
                    .IsRequired()
                    .HasColumnName("Overall_StatusCode")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewPickingRouteOrderDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Picking_Route_OrderDetail");

                entity.Property(e => e.DocDate).HasColumnType("smalldatetime");

                entity.Property(e => e.DocZone)
                    .IsRequired()
                    .HasColumnName("Doc_ZONE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPickingRouteOrderDetailBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Picking_Route_OrderDetail_bak");

                entity.Property(e => e.DocDate).HasColumnType("smalldatetime");

                entity.Property(e => e.DocZone)
                    .HasColumnName("Doc_ZONE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPickingRouteOrderDetailSnap>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Picking_Route_OrderDetail_snap");

                entity.Property(e => e.DocDate).HasColumnType("smalldatetime");

                entity.Property(e => e.DocZone)
                    .IsRequired()
                    .HasColumnName("Doc_ZONE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPickingRouteOrderDetailStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Picking_Route_OrderDetail_Status");

                entity.Property(e => e.DocDate).HasColumnType("date");

                entity.Property(e => e.DocZone)
                    .IsRequired()
                    .HasColumnName("Doc_ZONE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.OverallStatus)
                    .HasColumnName("Overall_Status")
                    .HasMaxLength(13);

                entity.Property(e => e.OverallStatusCode)
                    .HasColumnName("Overall_StatusCode")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PickStatus)
                    .HasColumnName("Pick_Status")
                    .HasMaxLength(16);

                entity.Property(e => e.PickStatusCode)
                    .HasColumnName("Pick_StatusCode")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPickingRouteOrderDetailStatusBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Picking_Route_OrderDetail_Status_bak");

                entity.Property(e => e.DocDate).HasColumnType("date");

                entity.Property(e => e.DocZone)
                    .HasColumnName("Doc_ZONE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.OverallStatus)
                    .HasColumnName("Overall_Status")
                    .HasMaxLength(13);

                entity.Property(e => e.OverallStatusCode)
                    .HasColumnName("Overall_StatusCode")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PickStatus)
                    .HasColumnName("Pick_Status")
                    .HasMaxLength(16);

                entity.Property(e => e.PickStatusCode)
                    .HasColumnName("Pick_StatusCode")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPickingRouteOrderDetailStatusSnap>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Picking_Route_OrderDetail_Status_snap");

                entity.Property(e => e.DocDate).HasColumnType("date");

                entity.Property(e => e.DocZone)
                    .IsRequired()
                    .HasColumnName("Doc_ZONE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.OverallStatus)
                    .HasColumnName("Overall_Status")
                    .HasMaxLength(13);

                entity.Property(e => e.OverallStatusCode)
                    .HasColumnName("Overall_StatusCode")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PickStatus)
                    .HasColumnName("Pick_Status")
                    .HasMaxLength(16);

                entity.Property(e => e.PickStatusCode)
                    .HasColumnName("Pick_StatusCode")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPickingRouteOrderSnap>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Picking_Route_Order_snap");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ItemDocumentStatus).HasColumnName("ItemDocument_Status");

                entity.Property(e => e.OverallStatus)
                    .IsRequired()
                    .HasColumnName("Overall_Status")
                    .HasMaxLength(13);

                entity.Property(e => e.OverallStatusCode)
                    .IsRequired()
                    .HasColumnName("Overall_StatusCode")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewPickingStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Picking_Status");

                entity.Property(e => e.PickStatus)
                    .IsRequired()
                    .HasColumnName("Pick_Status")
                    .HasMaxLength(16);

                entity.Property(e => e.PickStatusCode)
                    .HasColumnName("Pick_StatusCode")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");
            });

            modelBuilder.Entity<ViewPickingStatusBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Picking_Status_bak");

                entity.Property(e => e.PickStatus)
                    .IsRequired()
                    .HasColumnName("Pick_Status")
                    .HasMaxLength(16);

                entity.Property(e => e.PickStatusCode)
                    .HasColumnName("Pick_StatusCode")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");
            });

            modelBuilder.Entity<ViewPickingStatusSnap>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Picking_Status_snap");

                entity.Property(e => e.PickStatus)
                    .IsRequired()
                    .HasColumnName("Pick_Status")
                    .HasMaxLength(16);

                entity.Property(e => e.PickStatusCode)
                    .HasColumnName("Pick_StatusCode")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");
            });

            modelBuilder.Entity<ViewPickingTool>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PickingTool");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MarshallIndex).HasColumnName("Marshall_Index");

                entity.Property(e => e.MarshallNo)
                    .IsRequired()
                    .HasColumnName("Marshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Msqty)
                    .HasColumnName("MSQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.MstotalQty)
                    .HasColumnName("MSTotalQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlangoodsissueNo)
                    .IsRequired()
                    .HasColumnName("plangoodsissue_no")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPicktickketCarton>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PicktickketCarton");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewPicktickketCartonPickManual>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PicktickketCartonPickManual");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewPicktickketCartonV2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PicktickketCartonV2");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewPlanCarton>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PlanCarton");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefPlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("Ref_PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewPlanGiautoPickConfirm>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PlanGIAutoPickConfirm");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewPlanGiautoPickConfirmForShipmentDispatch>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PlanGIAutoPickConfirmForShipmentDispatch");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewPlanGipickConfirm>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PlanGIPickConfirm");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewPlanGipopUpSearch>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PlanGIPopUpSearch");

                entity.Property(e => e.CalGrandTotal)
                    .HasColumnName("Cal_GrandTotal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CountryIndex).HasColumnName("Country_Index");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DistrictIndex).HasColumnName("District_Index");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(500);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PostcodeIndex).HasColumnName("Postcode_Index");

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProvinceIndex).HasColumnName("Province_Index");

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefPlanGoodsIssueIndex).HasColumnName("Ref_PlanGoodsIssue_Index");

                entity.Property(e => e.RefPlanGoodsIssueNo)
                    .HasColumnName("Ref_PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToAddress)
                    .HasColumnName("ShipTo_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToAddress)
                    .HasColumnName("SoldTo_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.SoldToCountryIndex).HasColumnName("SoldTo_Country_Index");

                entity.Property(e => e.SoldToDistrictIndex).HasColumnName("SoldTo_District_Index");

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToPostcodeIndex).HasColumnName("SoldTo_Postcode_Index");

                entity.Property(e => e.SoldToProvinceIndex).HasColumnName("SoldTo_Province_Index");

                entity.Property(e => e.SoldToSubDistrictIndex).HasColumnName("SoldTo_SubDistrict_Index");

                entity.Property(e => e.SubDistrictIndex).HasColumnName("SubDistrict_Index");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPlanGiprocessStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PlanGIProcessStatus");

                entity.Property(e => e.CalCpn2Discount)
                    .HasColumnName("Cal_Cpn2Discount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalCpn9Discount)
                    .HasColumnName("Cal_Cpn9Discount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalEvoucherDiscount)
                    .HasColumnName("Cal_EvoucherDiscount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalGrandTotal)
                    .HasColumnName("Cal_GrandTotal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalPromotionDiscount)
                    .HasColumnName("Cal_PromotionDiscount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalTotalAfterDiscount)
                    .HasColumnName("Cal_TotalAfterDiscount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CountryIndex).HasColumnName("Country_Index");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DistrictIndex).HasColumnName("District_Index");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(500);

                entity.Property(e => e.DocumentRemarkSub)
                    .HasColumnName("Document_Remark_Sub")
                    .HasMaxLength(500);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.InvoiceAddress)
                    .HasColumnName("Invoice_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.InvoiceAddressName)
                    .HasColumnName("Invoice_AddressName")
                    .HasMaxLength(500);

                entity.Property(e => e.InvoiceCompanyName)
                    .HasColumnName("Invoice_CompanyName")
                    .HasMaxLength(200);

                entity.Property(e => e.InvoiceName)
                    .HasColumnName("Invoice_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.InvoiceRemark)
                    .HasColumnName("Invoice_Remark")
                    .HasMaxLength(500);

                entity.Property(e => e.InvoiceTaxNo)
                    .HasColumnName("Invoice_TaxNo")
                    .HasMaxLength(50);

                entity.Property(e => e.InvoiceTelephone)
                    .HasColumnName("Invoice_Telephone")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentIssuer)
                    .HasColumnName("Payment_Issuer")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PostcodeIndex).HasColumnName("Postcode_Index");

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProvinceIndex).HasColumnName("Province_Index");

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefPlanGoodsIssueIndex).HasColumnName("Ref_PlanGoodsIssue_Index");

                entity.Property(e => e.RefPlanGoodsIssueNo)
                    .HasColumnName("Ref_PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToAddress)
                    .HasColumnName("ShipTo_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.ShipToAddressName)
                    .HasColumnName("ShipTo_AddressName")
                    .HasMaxLength(500);

                entity.Property(e => e.ShipToCompanyName)
                    .HasColumnName("ShipTo_CompanyName")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToRemark)
                    .HasColumnName("ShipTo_Remark")
                    .HasMaxLength(500);

                entity.Property(e => e.ShipToTaxNo)
                    .HasColumnName("ShipTo_TaxNo")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToTelephone)
                    .HasColumnName("ShipTo_Telephone")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToAddress)
                    .HasColumnName("SoldTo_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.SoldToAddressCus)
                    .HasColumnName("SoldTo_Address_Cus")
                    .HasMaxLength(500);

                entity.Property(e => e.SoldToCountryIndex).HasColumnName("SoldTo_Country_Index");

                entity.Property(e => e.SoldToDistrictIndex).HasColumnName("SoldTo_District_Index");

                entity.Property(e => e.SoldToEmail)
                    .HasColumnName("SoldTo_Email")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToEmailCus)
                    .HasColumnName("SoldTo_Email_Cus")
                    .HasMaxLength(100);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToNameCus)
                    .HasColumnName("SoldTo_Name_Cus")
                    .HasMaxLength(500);

                entity.Property(e => e.SoldToPhone)
                    .HasColumnName("SoldTo_Phone")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToPhoneCus)
                    .HasColumnName("SoldTo_Phone_Cus")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToPostcodeIndex).HasColumnName("SoldTo_Postcode_Index");

                entity.Property(e => e.SoldToProvinceIndex).HasColumnName("SoldTo_Province_Index");

                entity.Property(e => e.SoldToSubDistrictIndex).HasColumnName("SoldTo_SubDistrict_Index");

                entity.Property(e => e.SoldToT1c)
                    .HasColumnName("SoldTo_T1C")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToT1cphone)
                    .HasColumnName("SoldTo_T1CPhone")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToTel)
                    .HasColumnName("SoldTo_Tel")
                    .HasMaxLength(50);

                entity.Property(e => e.SubDistrictIndex).HasColumnName("SubDistrict_Index");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPlanGiprocessStatusV2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PlanGIProcessStatusV2");

                entity.Property(e => e.CalCpn2Discount)
                    .HasColumnName("Cal_Cpn2Discount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalCpn9Discount)
                    .HasColumnName("Cal_Cpn9Discount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalEvoucherDiscount)
                    .HasColumnName("Cal_EvoucherDiscount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalGrandTotal)
                    .HasColumnName("Cal_GrandTotal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalPromotionDiscount)
                    .HasColumnName("Cal_PromotionDiscount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CalTotalAfterDiscount)
                    .HasColumnName("Cal_TotalAfterDiscount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CountryIndex).HasColumnName("Country_Index");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DistrictIndex).HasColumnName("District_Index");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(500);

                entity.Property(e => e.DocumentRemarkSub)
                    .HasColumnName("Document_Remark_Sub")
                    .HasMaxLength(500);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.InvoiceAddress)
                    .HasColumnName("Invoice_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.InvoiceAddressName)
                    .HasColumnName("Invoice_AddressName")
                    .HasMaxLength(500);

                entity.Property(e => e.InvoiceCompanyName)
                    .HasColumnName("Invoice_CompanyName")
                    .HasMaxLength(200);

                entity.Property(e => e.InvoiceName)
                    .HasColumnName("Invoice_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.InvoiceRemark)
                    .HasColumnName("Invoice_Remark")
                    .HasMaxLength(500);

                entity.Property(e => e.InvoiceTaxNo)
                    .HasColumnName("Invoice_TaxNo")
                    .HasMaxLength(50);

                entity.Property(e => e.InvoiceTelephone)
                    .HasColumnName("Invoice_Telephone")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentIssuer)
                    .HasColumnName("Payment_Issuer")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PostcodeIndex).HasColumnName("Postcode_Index");

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProvinceIndex).HasColumnName("Province_Index");

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefPlanGoodsIssueIndex).HasColumnName("Ref_PlanGoodsIssue_Index");

                entity.Property(e => e.RefPlanGoodsIssueNo)
                    .HasColumnName("Ref_PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToAddress)
                    .HasColumnName("ShipTo_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.ShipToAddressName)
                    .HasColumnName("ShipTo_AddressName")
                    .HasMaxLength(500);

                entity.Property(e => e.ShipToCompanyName)
                    .HasColumnName("ShipTo_CompanyName")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToRemark)
                    .HasColumnName("ShipTo_Remark")
                    .HasMaxLength(500);

                entity.Property(e => e.ShipToTaxNo)
                    .HasColumnName("ShipTo_TaxNo")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToTelephone)
                    .HasColumnName("ShipTo_Telephone")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToAddress)
                    .HasColumnName("SoldTo_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.SoldToAddressCus)
                    .HasColumnName("SoldTo_Address_Cus")
                    .HasMaxLength(500);

                entity.Property(e => e.SoldToCountryIndex).HasColumnName("SoldTo_Country_Index");

                entity.Property(e => e.SoldToDistrictIndex).HasColumnName("SoldTo_District_Index");

                entity.Property(e => e.SoldToEmail)
                    .HasColumnName("SoldTo_Email")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToEmailCus)
                    .HasColumnName("SoldTo_Email_Cus")
                    .HasMaxLength(100);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToNameCus)
                    .HasColumnName("SoldTo_Name_Cus")
                    .HasMaxLength(500);

                entity.Property(e => e.SoldToPhone)
                    .HasColumnName("SoldTo_Phone")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToPhoneCus)
                    .HasColumnName("SoldTo_Phone_Cus")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToPostcodeIndex).HasColumnName("SoldTo_Postcode_Index");

                entity.Property(e => e.SoldToProvinceIndex).HasColumnName("SoldTo_Province_Index");

                entity.Property(e => e.SoldToSubDistrictIndex).HasColumnName("SoldTo_SubDistrict_Index");

                entity.Property(e => e.SoldToT1c)
                    .HasColumnName("SoldTo_T1C")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToT1cphone)
                    .HasColumnName("SoldTo_T1CPhone")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToTel)
                    .HasColumnName("SoldTo_Tel")
                    .HasMaxLength(50);

                entity.Property(e => e.SubDistrictIndex).HasColumnName("SubDistrict_Index");

                entity.Property(e => e.SubOrderId)
                    .HasColumnName("SubOrderID")
                    .HasMaxLength(100);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPlanGoodsIssue>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_planGoodsIssue");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.Msqty)
                    .HasColumnName("MSQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.MstotalQty)
                    .HasColumnName("MSTotalQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueSize)
                    .HasColumnName("PlanGoodsIssue_Size")
                    .HasMaxLength(200);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPlanGoodsIssueAfterRunWave>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PlanGoodsIssueAfterRunWave");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPlanGoodsIssueCarton>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PlanGoodsIssueCarton");

                entity.Property(e => e.DocumentRefNo1).HasColumnName("DocumentRef_No1");

                entity.Property(e => e.DocumentRefNo2).HasColumnName("DocumentRef_No2");

                entity.Property(e => e.DocumentRefNo3).HasColumnName("DocumentRef_No3");

                entity.Property(e => e.DocumentRefNo4).HasColumnName("DocumentRef_No4");

                entity.Property(e => e.DocumentRefNo5).HasColumnName("DocumentRef_No5");

                entity.Property(e => e.DocumentRemark).HasColumnName("Document_Remark");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate).HasColumnName("EXP_Date");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.ItemStatusId).HasColumnName("ItemStatus_Id");

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName).HasColumnName("ItemStatus_Name");

                entity.Property(e => e.MfgDate).HasColumnName("MFG_Date");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionId).HasColumnName("ProductConversion_Id");

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName).HasColumnName("ProductConversion_Name");

                entity.Property(e => e.ProductId).HasColumnName("Product_Id");

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot).HasColumnName("Product_Lot");

                entity.Property(e => e.ProductName).HasColumnName("Product_Name");

                entity.Property(e => e.ProductSecondName).HasColumnName("Product_SecondName");

                entity.Property(e => e.ProductThirdName).HasColumnName("Product_ThirdName");

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Udf3).HasColumnName("UDF_3");

                entity.Property(e => e.Udf4).HasColumnName("UDF_4");

                entity.Property(e => e.Udf5).HasColumnName("UDF_5");
            });

            modelBuilder.Entity<ViewPlanGoodsIssueItemInfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PlanGoodsIssueItemInfo");

                entity.Property(e => e.Count).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PluStatus).HasColumnName("PLU_Status");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyCancelled)
                    .HasColumnName("Qty_Cancelled")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyOrder)
                    .HasColumnName("Qty_Order")
                    .HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewPlanGoodsIssueItemPopup>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PlanGoodsIssueItemPopup");

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ImageUri).HasMaxLength(200);

                entity.Property(e => e.IsQa).HasColumnName("IsQA");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MarshallQty)
                    .HasColumnName("Marshall_Qty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.MarshallQtyBackOrder).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueSize)
                    .HasColumnName("PlanGoodsIssue_Size")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanTotalQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.QaBy)
                    .HasColumnName("QA_By")
                    .HasMaxLength(200);

                entity.Property(e => e.QaDate)
                    .HasColumnName("QA_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyInnerPack)
                    .HasColumnName("Qty_Inner_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyQa)
                    .HasColumnName("QtyQA")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtySupPack)
                    .HasColumnName("Qty_Sup_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RemainQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RemainTotalQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ZoneCode).HasMaxLength(50);
            });

            modelBuilder.Entity<ViewPlanGoodsIssueProcessStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PlanGoodsIssueProcessStatus");

                entity.Property(e => e.OverallStatus)
                    .IsRequired()
                    .HasColumnName("Overall_Status")
                    .HasMaxLength(25);

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPick).HasMaxLength(50);
            });

            modelBuilder.Entity<ViewPlanGoodsIssueReturnReceive>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PlanGoodsIssueReturnReceive");

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ImageUri).HasMaxLength(200);

                entity.Property(e => e.IsQa).HasColumnName("IsQA");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueSize)
                    .HasColumnName("PlanGoodsIssue_Size")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanTotalQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Price).HasColumnType("numeric(37, 12)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.QaBy)
                    .HasColumnName("QA_By")
                    .HasMaxLength(200);

                entity.Property(e => e.QaDate)
                    .HasColumnName("QA_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyInnerPack)
                    .HasColumnName("Qty_Inner_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyQa)
                    .HasColumnName("QtyQA")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtySupPack)
                    .HasColumnName("Qty_Sup_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(37, 12)");

                entity.Property(e => e.Weight).HasColumnType("numeric(37, 12)");

                entity.Property(e => e.ZoneCode).HasMaxLength(50);
            });

            modelBuilder.Entity<ViewPlanGoodsIssueReturnReceivePending>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PlanGoodsIssueReturnReceivePending");

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ImageUri).HasMaxLength(200);

                entity.Property(e => e.IsQa).HasColumnName("IsQA");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PgritotalQty)
                    .HasColumnName("PGRITotalQty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueSize)
                    .HasColumnName("PlanGoodsIssue_Size")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanTotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Price).HasColumnType("numeric(37, 12)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.QaBy)
                    .HasColumnName("QA_By")
                    .HasMaxLength(200);

                entity.Property(e => e.QaDate)
                    .HasColumnName("QA_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyInnerPack)
                    .HasColumnName("Qty_Inner_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyQa)
                    .HasColumnName("QtyQA")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtySupPack)
                    .HasColumnName("Qty_Sup_Pack")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Total).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(37, 12)");

                entity.Property(e => e.Weight).HasColumnType("numeric(37, 12)");

                entity.Property(e => e.ZoneCode).HasMaxLength(50);
            });

            modelBuilder.Entity<ViewPlanGoodsReceiveItem>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PlanGoodsReceiveItem");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GrtotalQty)
                    .HasColumnName("GRTotalQty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNum).HasMaxLength(50);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsReceiveIndex).HasColumnName("PlanGoodsReceive_Index");

                entity.Property(e => e.PlanGoodsReceiveItemIndex).HasColumnName("PlanGoodsReceiveItem_Index");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Total).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewPlanGrProcessStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PlanGrProcessStatus");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ItemDocumentRemark).HasColumnName("Item_Document_Remark");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsReceiveDate)
                    .HasColumnName("PlanGoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsReceiveDueDate)
                    .HasColumnName("PlanGoodsReceive_Due_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlanGoodsReceiveIndex).HasColumnName("PlanGoodsReceive_Index");

                entity.Property(e => e.PlanGoodsReceiveNo)
                    .HasColumnName("PlanGoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.UserAssignKey).HasMaxLength(200);

                entity.Property(e => e.VendorId)
                    .HasColumnName("Vendor_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorIndex).HasColumnName("Vendor_Index");

                entity.Property(e => e.VendorName)
                    .HasColumnName("Vendor_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPlanwave>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PLANWAVE");

                entity.Property(e => e.DocumentRefNo1)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .IsRequired()
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GitotalQty)
                    .HasColumnName("GITotalQty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.PlanGoodsIssueUdf1)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueUdf2)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueUdf3)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueUdf4)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueUdf5)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .IsRequired()
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .IsRequired()
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .IsRequired()
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyWave).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Udf1)
                    .IsRequired()
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .IsRequired()
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .IsRequired()
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .IsRequired()
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .IsRequired()
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPlanwavebyPlangi>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PLANWAVEbyPLANGI");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .IsRequired()
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GitotalQty)
                    .HasColumnName("GITotalQty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.ItemDocumentStatus).HasColumnName("ItemDocument_Status");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueUdf1)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueUdf2)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueUdf3)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueUdf4)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueUdf5)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ShipToAddress)
                    .HasColumnName("ShipTo_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToAddress)
                    .HasColumnName("SoldTo_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .IsRequired()
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .IsRequired()
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .IsRequired()
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .IsRequired()
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .IsRequired()
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewPlanwavebyPlanginoLock>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PLANWAVEbyPLANGINoLock");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .IsRequired()
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GitotalQty)
                    .HasColumnName("GITotalQty")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.ItemDocumentStatus).HasColumnName("ItemDocument_Status");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueUdf1)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueUdf2)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueUdf3)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueUdf4)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueUdf5)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ShipToAddress)
                    .HasColumnName("ShipTo_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToAddress)
                    .HasColumnName("SoldTo_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .IsRequired()
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .IsRequired()
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .IsRequired()
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .IsRequired()
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .IsRequired()
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewPopupTask>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PopupTask");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.TagKey)
                    .IsRequired()
                    .HasColumnName("tag_key")
                    .HasMaxLength(20);

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");
            });

            modelBuilder.Entity<ViewPos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_POS");

                entity.Property(e => e.CalGrandTotal)
                    .HasColumnName("Cal_GrandTotal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ConfirmMarshallNo)
                    .HasColumnName("ConfirmMarshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PosIndex).HasColumnName("POS_Index");

                entity.Property(e => e.PosNo)
                    .IsRequired()
                    .HasColumnName("POS_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyPos)
                    .HasColumnName("QtyPOS")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.QtySo).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPosdetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_POSDETAIL");

                entity.Property(e => e.CalGrandTotal)
                    .HasColumnName("Cal_GrandTotal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PosIndex).HasColumnName("POS_Index");

                entity.Property(e => e.PosNo)
                    .IsRequired()
                    .HasColumnName("POS_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PositemIndex).HasColumnName("POSItem_Index");

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UserAssign).HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPositem>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_POSItem");

                entity.Property(e => e.CalGrandTotal)
                    .HasColumnName("Cal_GrandTotal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ConfirmMarshallNo)
                    .HasColumnName("ConfirmMarshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.DeliveryAmount)
                    .HasColumnName("Delivery_Amount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.DeliveryBarcode)
                    .HasColumnName("Delivery_Barcode")
                    .HasMaxLength(50);

                entity.Property(e => e.DiscountsAmount)
                    .HasColumnName("Discounts_Amount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.DiscountsBarcode)
                    .HasColumnName("Discounts_Barcode")
                    .HasMaxLength(50);

                entity.Property(e => e.DiscountsType)
                    .HasColumnName("Discounts_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PosIndex).HasColumnName("POS_Index");

                entity.Property(e => e.PosNo)
                    .IsRequired()
                    .HasColumnName("POS_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PromotionsAmount)
                    .HasColumnName("Promotions_Amount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PromotionsApplied)
                    .HasColumnName("Promotions_Applied")
                    .HasMaxLength(500);

                entity.Property(e => e.PromotionsBarcode)
                    .HasColumnName("Promotions_Barcode")
                    .HasMaxLength(50);

                entity.Property(e => e.PromotionsCount)
                    .HasColumnName("Promotions_Count")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PromotionsLink)
                    .HasColumnName("Promotions_Link")
                    .HasMaxLength(50);

                entity.Property(e => e.PromotionsStep)
                    .HasColumnName("Promotions_Step")
                    .HasMaxLength(50);

                entity.Property(e => e.PromotionsType)
                    .HasColumnName("Promotions_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.QtyPos)
                    .HasColumnName("QtyPOS")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.QtySo).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPosshipmentDispatch>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_POSShipmentDispatch");

                entity.Property(e => e.CalGrandTotal)
                    .HasColumnName("Cal_GrandTotal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ConfirmMarshallNo)
                    .HasColumnName("ConfirmMarshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PosIndex).HasColumnName("POS_Index");

                entity.Property(e => e.PosNo)
                    .IsRequired()
                    .HasColumnName("POS_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyPos)
                    .HasColumnName("QtyPOS")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.QtySo).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPosshipmentDispatchBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_POSShipmentDispatch_bak");

                entity.Property(e => e.CalGrandTotal)
                    .HasColumnName("Cal_GrandTotal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ConfirmMarshallNo)
                    .HasColumnName("ConfirmMarshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PosIndex).HasColumnName("POS_Index");

                entity.Property(e => e.PosNo)
                    .IsRequired()
                    .HasColumnName("POS_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyPos)
                    .HasColumnName("QtyPOS")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.QtySo).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPosshipmentDispatchV2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_POSShipmentDispatchV2");

                entity.Property(e => e.CalGrandTotal)
                    .HasColumnName("Cal_GrandTotal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ConfirmMarshallNo)
                    .HasColumnName("ConfirmMarshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PosIndex).HasColumnName("POS_Index");

                entity.Property(e => e.PosNo)
                    .IsRequired()
                    .HasColumnName("POS_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyPos)
                    .HasColumnName("QtyPOS")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.QtySo).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPosshippmentDispatchItem>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_POSShippmentDispatchItem");

                entity.Property(e => e.CalGrandTotal)
                    .HasColumnName("Cal_GrandTotal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ConfirmMarshallNo)
                    .HasColumnName("ConfirmMarshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.DeliveryAmount)
                    .HasColumnName("Delivery_Amount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.DeliveryBarcode)
                    .HasColumnName("Delivery_Barcode")
                    .HasMaxLength(50);

                entity.Property(e => e.DiscountsAmount)
                    .HasColumnName("Discounts_Amount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.DiscountsBarcode)
                    .HasColumnName("Discounts_Barcode")
                    .HasMaxLength(50);

                entity.Property(e => e.DiscountsType)
                    .HasColumnName("Discounts_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PosIndex).HasColumnName("POS_Index");

                entity.Property(e => e.PosNo)
                    .IsRequired()
                    .HasColumnName("POS_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PromotionsAmount)
                    .HasColumnName("Promotions_Amount")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PromotionsApplied)
                    .HasColumnName("Promotions_Applied")
                    .HasMaxLength(2000);

                entity.Property(e => e.PromotionsBarcode)
                    .HasColumnName("Promotions_Barcode")
                    .HasMaxLength(50);

                entity.Property(e => e.PromotionsCount)
                    .HasColumnName("Promotions_Count")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PromotionsLink)
                    .HasColumnName("Promotions_Link")
                    .HasMaxLength(50);

                entity.Property(e => e.PromotionsStep)
                    .HasColumnName("Promotions_Step")
                    .HasMaxLength(50);

                entity.Property(e => e.PromotionsType)
                    .HasColumnName("Promotions_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.QtyPos)
                    .HasColumnName("QtyPOS")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.QtySo).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPosv2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_POSV2");

                entity.Property(e => e.CalGrandTotal)
                    .HasColumnName("Cal_GrandTotal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ConfirmMarshallNo)
                    .HasColumnName("ConfirmMarshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentCode)
                    .HasColumnName("Payment_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentType)
                    .HasColumnName("Payment_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PosIndex).HasColumnName("POS_Index");

                entity.Property(e => e.PosNo)
                    .IsRequired()
                    .HasColumnName("POS_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessStatusName)
                    .HasColumnName("ProcessStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyPos)
                    .HasColumnName("QtyPOS")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.QtySo).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewPreparePrintCartonRf>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PreparePrintCartonRF");

                entity.Property(e => e.ConfirmTagOutQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.SuggestLocationName)
                    .HasColumnName("SuggestLocation_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");
            });

            modelBuilder.Entity<ViewPreparePrintCartonRfv2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PreparePrintCartonRFV2");

                entity.Property(e => e.ConfirmTagOutQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.SuggestLocationName)
                    .HasColumnName("SuggestLocation_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");
            });

            modelBuilder.Entity<ViewPrintCarton>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PrintCarton");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentStatus1).HasColumnName("Document_Status_1");

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GiCreateBy)
                    .HasColumnName("gi_Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Msqty)
                    .HasColumnName("MSQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.MstotalQty)
                    .HasColumnName("MSTotalQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueSize)
                    .HasColumnName("PlanGoodsIssue_Size")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewProductByBarcode>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ProductByBarcode");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ProductCategoryIndex).HasColumnName("ProductCategory_Index");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductImagePath)
                    .HasColumnName("ProductImage_Path")
                    .HasMaxLength(500);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductItemLifeD).HasColumnName("ProductItemLife_D");

                entity.Property(e => e.ProductItemLifeM).HasColumnName("ProductItemLife_M");

                entity.Property(e => e.ProductItemLifeY).HasColumnName("ProductItemLife_Y");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSubTypeIndex).HasColumnName("ProductSubType_Index");

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductTypeIndex).HasColumnName("ProductType_Index");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<ViewProductConversionBarcode>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ProductConversionBarcode");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionBarcodeId)
                    .IsRequired()
                    .HasColumnName("ProductConversionBarcode_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionBarcodeIndex).HasColumnName("ProductConversionBarcode_Index");

                entity.Property(e => e.ProductConversionHeight)
                    .HasColumnName("ProductConversion_Height")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionLength)
                    .HasColumnName("ProductConversion_Length")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionRatio)
                    .HasColumnName("ProductConversion_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionVolume)
                    .HasColumnName("ProductConversion_Volume")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionVolumeRatio)
                    .HasColumnName("ProductConversion_VolumeRatio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionWeight)
                    .HasColumnName("ProductConversion_Weight")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionWidth)
                    .HasColumnName("ProductConversion_Width")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<ViewProductDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ProductDetail");

                entity.Property(e => e.BaseProductConversion).HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductCategoryId)
                    .IsRequired()
                    .HasColumnName("ProductCategory_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductCategoryIndex).HasColumnName("ProductCategory_Index");

                entity.Property(e => e.ProductCategoryName)
                    .IsRequired()
                    .HasColumnName("ProductCategory_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionBarcodeId)
                    .IsRequired()
                    .HasColumnName("ProductConversionBarcode_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionBarcodeIndex).HasColumnName("ProductConversionBarcode_Index");

                entity.Property(e => e.ProductConversionHeight)
                    .HasColumnName("ProductConversion_Height")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionLength)
                    .HasColumnName("ProductConversion_Length")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionRatio)
                    .HasColumnName("ProductConversion_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionVolume)
                    .HasColumnName("ProductConversion_Volume")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionVolumeRatio)
                    .HasColumnName("ProductConversion_VolumeRatio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionWeight)
                    .HasColumnName("ProductConversion_Weight")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionWidth)
                    .HasColumnName("ProductConversion_Width")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductItemLifeD).HasColumnName("ProductItemLife_D");

                entity.Property(e => e.ProductItemLifeM).HasColumnName("ProductItemLife_M");

                entity.Property(e => e.ProductItemLifeY).HasColumnName("ProductItemLife_Y");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSubTypeId)
                    .IsRequired()
                    .HasColumnName("ProductSubType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductSubTypeIndex).HasColumnName("ProductSubType_Index");

                entity.Property(e => e.ProductSubTypeName)
                    .IsRequired()
                    .HasColumnName("ProductSubType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductTypeId)
                    .IsRequired()
                    .HasColumnName("ProductType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductTypeIndex).HasColumnName("ProductType_Index");

                entity.Property(e => e.ProductTypeName)
                    .IsRequired()
                    .HasColumnName("ProductType_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewProductPopup>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ProductPopup");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ProductCategoryIndex).HasColumnName("ProductCategory_Index");

                entity.Property(e => e.ProductConversionHeight)
                    .HasColumnName("ProductConversion_Height")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionLength)
                    .HasColumnName("ProductConversion_Length")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionRatio)
                    .HasColumnName("ProductConversion_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionVolume)
                    .HasColumnName("ProductConversion_Volume")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionVolumeRatio)
                    .HasColumnName("ProductConversion_VolumeRatio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionWeight)
                    .HasColumnName("ProductConversion_Weight")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionWidth)
                    .HasColumnName("ProductConversion_Width")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductImagePath)
                    .HasColumnName("ProductImage_Path")
                    .HasMaxLength(500);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductItemLifeD).HasColumnName("ProductItemLife_D");

                entity.Property(e => e.ProductItemLifeM).HasColumnName("ProductItemLife_M");

                entity.Property(e => e.ProductItemLifeY).HasColumnName("ProductItemLife_Y");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSubTypeIndex).HasColumnName("ProductSubType_Index");

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductTypeIndex).HasColumnName("ProductType_Index");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<ViewRelocation>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Relocation");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemIndex).HasColumnName("GoodsIssueItem_Index");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewReportCartonLabel>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Report_CartonLabel");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsIssueDate)
                    .HasColumnName("GoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.IsPrint).HasColumnName("isPrint");

                entity.Property(e => e.ItemTotalQty).HasColumnName("ItemTotalQTY");

                entity.Property(e => e.MstotalQty).HasColumnName("MSTotalQTY");

                entity.Property(e => e.PickManual).HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueSize)
                    .HasColumnName("PlanGoodsIssue_Size")
                    .HasMaxLength(251);

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(253);

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToAddress)
                    .HasColumnName("ShipTo_Address")
                    .HasMaxLength(500);

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf5)
                    .HasColumnName("udf5")
                    .HasMaxLength(200);

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewReportGoodsReceiveNote>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Report_GoodsReceiveNote");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsReceiveDate)
                    .HasColumnName("GoodsReceive_Date")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.GoodsReceiveNo)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.GoodsReceiveRemark)
                    .HasColumnName("GoodsReceive_Remark")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsReceiveTime)
                    .HasColumnName("GoodsReceive_Time")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("decimal(38, 2)");

                entity.Property(e => e.RefDocumentLineNum)
                    .HasColumnName("Ref_Document_LineNum")
                    .HasMaxLength(50);

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Supplier)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewReportLoadManikest>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Report_loadManikest");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DriverName).HasMaxLength(200);

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToAddress).HasMaxLength(500);

                entity.Property(e => e.ShipToId).HasMaxLength(200);

                entity.Property(e => e.TruckLoadNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TruckNo).HasMaxLength(200);

                entity.Property(e => e.TruckReg).HasMaxLength(200);

                entity.Property(e => e.TruckType).HasMaxLength(200);
            });

            modelBuilder.Entity<ViewReportPickingSlip>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_Report_PickingSlip");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyPlan).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewReturnReceive>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ReturnReceive");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CountryIndex).HasColumnName("Country_Index");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DistrictIndex).HasColumnName("District_Index");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRemark)
                    .HasColumnName("Document_Remark")
                    .HasMaxLength(500);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RefPlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("Ref_PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIdTo)
                    .HasColumnName("Warehouse_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseIndexTo).HasColumnName("Warehouse_Index_To");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseNameTo)
                    .HasColumnName("Warehouse_Name_To")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewRunWave>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_RunWave");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.Piqty)
                    .HasColumnName("PIQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.PitotalQty)
                    .HasColumnName("PITotalQTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewScanQa>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ScanQA");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(200);

                entity.Property(e => e.IsQa).HasColumnName("IsQA");

                entity.Property(e => e.PickedBy).HasMaxLength(50);

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyBackOrder)
                    .HasColumnName("QtyBack_Order")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyQa)
                    .HasColumnName("QtyQA")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewShipmentDispatchCancel>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ShipmentDispatch_Cancel");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewShippmentDispatch>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ShippmentDispatch");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewShippmentDispatchDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ShippmentDispatchDetail");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TruckLoadIndex).HasColumnName("TruckLoad_Index");

                entity.Property(e => e.TruckLoadNo)
                    .IsRequired()
                    .HasColumnName("TruckLoad_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewShippmentDispatchProduct>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ShippmentDispatchProduct");

                entity.Property(e => e.BaseProductId)
                    .IsRequired()
                    .HasColumnName("base_product_id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentRefNo1)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumenttypeId)
                    .HasColumnName("documenttype_id")
                    .HasMaxLength(50);

                entity.Property(e => e.MarshallTaskPick).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ReplaceStatus).HasColumnName("Replace_Status");

                entity.Property(e => e.SerialFlag).HasColumnName("serial_flag");

                entity.Property(e => e.ShipQty).HasColumnType("decimal(38, 6)");

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SourceStore)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.SubOrderId)
                    .HasColumnName("SubOrderID")
                    .HasMaxLength(500);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TruckLoadIndex).HasColumnName("TruckLoad_Index");

                entity.Property(e => e.TruckLoadNo)
                    .HasColumnName("TruckLoad_No")
                    .HasMaxLength(50);

                entity.Property(e => e.WeightTotal).HasColumnType("decimal(38, 6)");
            });

            modelBuilder.Entity<ViewShippmentDispatchProductCancel>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ShippmentDispatchProduct_Cancel");

                entity.Property(e => e.BaseProductId)
                    .IsRequired()
                    .HasColumnName("base_product_id")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DocumentRefNo1)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .IsRequired()
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.MarshallTaskPick).HasColumnType("numeric(6, 6)");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(6, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductName).HasColumnName("Product_Name");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(6, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ReplaceStatus).HasColumnName("Replace_Status");

                entity.Property(e => e.SerialFlag).HasColumnName("serial_flag");

                entity.Property(e => e.ShipQty).HasColumnType("numeric(6, 6)");

                entity.Property(e => e.SoldtoId)
                    .HasColumnName("soldto_id")
                    .HasMaxLength(50);

                entity.Property(e => e.SourceStore)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.SubOrderId)
                    .HasColumnName("SubOrderID")
                    .HasMaxLength(500);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TruckLoadIndex).HasColumnName("TruckLoad_Index");

                entity.Property(e => e.TruckLoadNo).HasColumnName("TruckLoad_No");

                entity.Property(e => e.WeightTotal).HasColumnType("numeric(6, 6)");
            });

            modelBuilder.Entity<ViewShippmentDispatchProductV2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ShippmentDispatchProductV2");

                entity.Property(e => e.MarshallTaskPick).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ReplaceStatus).HasColumnName("Replace_Status");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TruckLoadIndex).HasColumnName("TruckLoad_Index");

                entity.Property(e => e.TruckLoadNo)
                    .HasColumnName("TruckLoad_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewShippmentDispatchTagOut>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ShippmentDispatchTagOut");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TruckLoadIndex).HasColumnName("TruckLoad_Index");

                entity.Property(e => e.TruckLoadNo)
                    .IsRequired()
                    .HasColumnName("TruckLoad_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewStgOutptInvsnap>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_STG_OUTPT_INVSNAP");

                entity.Property(e => e.BatchNbr).HasColumnName("BATCH_NBR");

                entity.Property(e => e.Co)
                    .IsRequired()
                    .HasColumnName("CO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Color).HasColumnName("COLOR");

                entity.Property(e => e.ColorSfx).HasColumnName("COLOR_SFX");

                entity.Property(e => e.DateProc)
                    .HasColumnName("DATE_PROC")
                    .HasColumnType("datetime");

                entity.Property(e => e.Div)
                    .IsRequired()
                    .HasColumnName("DIV")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DxsBatchId).HasColumnName("DXS_BATCH_ID");

                entity.Property(e => e.HoldQty).HasColumnName("HOLD_QTY");

                entity.Property(e => e.ProcStatCode)
                    .HasColumnName("PROC_STAT_CODE")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Qual).HasColumnName("QUAL");

                entity.Property(e => e.Season).HasColumnName("SEASON");

                entity.Property(e => e.SeasonYr).HasColumnName("SEASON_YR");

                entity.Property(e => e.SecDim).HasColumnName("SEC_DIM");

                entity.Property(e => e.SeqNo)
                    .HasColumnName("SEQ_NO")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.SizeDesc)
                    .IsRequired()
                    .HasColumnName("SIZE_DESC")
                    .HasMaxLength(50);

                entity.Property(e => e.SizeRangeCode).HasColumnName("SIZE_RANGE_CODE");

                entity.Property(e => e.SizeRelPosnInTable).HasColumnName("SIZE_REL_POSN_IN_TABLE");

                entity.Property(e => e.SkuBrcd)
                    .IsRequired()
                    .HasColumnName("SKU_BRCD")
                    .HasMaxLength(50);

                entity.Property(e => e.SkuId)
                    .IsRequired()
                    .HasColumnName("SKU_ID")
                    .HasMaxLength(50);

                entity.Property(e => e.SohQty)
                    .HasColumnName("SOH_QTY")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.StdCaseQty).HasColumnName("STD_CASE_QTY");

                entity.Property(e => e.StdPackQty).HasColumnName("STD_PACK_QTY");

                entity.Property(e => e.StdSubPackQty).HasColumnName("STD_SUB_PACK_QTY");

                entity.Property(e => e.Style).HasColumnName("STYLE");

                entity.Property(e => e.StyleSfx).HasColumnName("STYLE_SFX");

                entity.Property(e => e.SysUserId)
                    .IsRequired()
                    .HasColumnName("SYS_USER_ID")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SystemId)
                    .IsRequired()
                    .HasColumnName("SYSTEM_ID")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.Whse)
                    .IsRequired()
                    .HasColumnName("WHSE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.WmsFfcBatchId)
                    .HasColumnName("WMS_FFC_BATCH_ID")
                    .HasColumnType("numeric(2, 0)");
            });

            modelBuilder.Entity<ViewSumQtyBarcodeLocation>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_SumQtyBarcodeLocation");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyReserve)
                    .HasColumnName("BinBalance_QtyReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewSumQtyBinbalance>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_SumQtyBinbalance");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewSumQtyBinbalanceLpn>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_SumQtyBinbalanceLPN");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewSumQtyCarton>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_SumQtyCarton");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyReserve)
                    .HasColumnName("BinBalance_QtyReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewSumQtyLocation>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_SumQtyLocation");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyReserve)
                    .HasColumnName("BinBalance_QtyReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewSumQtyLpnNo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_SumQtyLpnNo");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyReserve)
                    .HasColumnName("BinBalance_QtyReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewSumTranferCarton>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_SumTranferCarton");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewTagOut>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TagOut");

                entity.Property(e => e.CartonNo)
                    .HasColumnName("Carton_No")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateDateItem)
                    .HasColumnName("Create_DateItem")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemIndex).HasColumnName("GoodsIssueItem_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.TagOutItemIndex).HasColumnName("TagOutItem_Index");

                entity.Property(e => e.TagOutItemStatus).HasColumnName("TagOutItem_Status");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutRefItemNo1)
                    .HasColumnName("TagOutRefItem_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefItemNo2)
                    .HasColumnName("TagOutRefItem_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefItemNo3)
                    .HasColumnName("TagOutRefItem_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefItemNo4)
                    .HasColumnName("TagOutRefItem_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefItemNo5)
                    .HasColumnName("TagOutRefItem_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo1)
                    .HasColumnName("TagOutRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo2)
                    .HasColumnName("TagOutRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo3)
                    .HasColumnName("TagOutRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo4)
                    .HasColumnName("TagOutRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo5)
                    .HasColumnName("TagOutRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.Udfitem1)
                    .HasColumnName("UDFItem_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udfitem2)
                    .HasColumnName("UDFItem_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udfitem3)
                    .HasColumnName("UDFItem_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udfitem4)
                    .HasColumnName("UDFItem_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udfitem5)
                    .HasColumnName("UDFItem_5")
                    .HasMaxLength(200);

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");
            });

            modelBuilder.Entity<ViewTaskCycleCount>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TaskCycleCount");

                entity.Property(e => e.CycleCountIndex).HasColumnName("CycleCount_Index");

                entity.Property(e => e.CycleCountItemIndex).HasColumnName("CycleCountItem_Index");

                entity.Property(e => e.CycleCountNo)
                    .HasColumnName("CycleCount_No")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.TaskGroupIndex).HasColumnName("TaskGroup_Index");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskNo)
                    .HasColumnName("Task_No")
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.UserAssign)
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.UserCount)
                    .HasMaxLength(50)
                    .IsFixedLength();
            });

            modelBuilder.Entity<ViewTaskDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TaskDetail");

                entity.Property(e => e.DocumentPriorityStatus).HasColumnName("DocumentPriority_Status");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskNo)
                    .IsRequired()
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskQty).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.TaskTotalQty).HasColumnType("numeric(38, 6)");
            });

            modelBuilder.Entity<ViewTaskGroupLocationWorkArea>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TaskGroupLocationWorkArea");

                entity.Property(e => e.TaskGroupId)
                    .IsRequired()
                    .HasColumnName("TaskGroup_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskGroupIndex).HasColumnName("TaskGroup_Index");

                entity.Property(e => e.TaskGroupName)
                    .IsRequired()
                    .HasColumnName("TaskGroup_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TaskGroupWorkAreaId)
                    .HasColumnName("TaskGroupWorkArea_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskGroupWorkAreaIndex).HasColumnName("TaskGroupWorkArea_Index");

                entity.Property(e => e.TaskGroupWorkAreaIsActive).HasColumnName("TaskGroupWorkArea_IsActive");

                entity.Property(e => e.TaskIsActive).HasColumnName("Task_IsActive");

                entity.Property(e => e.WorkAreaId)
                    .HasColumnName("WorkArea_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WorkAreaIndex).HasColumnName("WorkArea_Index");

                entity.Property(e => e.WorkAreaIsActive).HasColumnName("WorkArea_IsActive");

                entity.Property(e => e.WorkAreaName)
                    .HasColumnName("WorkArea_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewTaskPickList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TaskPickList");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueItemLocationStatus).HasColumnName("GoodsIssueItemLocation_Status");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SuggestLocationName)
                    .HasColumnName("SuggestLocation_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TaskNo)
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewTaskPickListDrop>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TaskPickList_Drop");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueItemLocationStatus).HasColumnName("GoodsIssueItemLocation_Status");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SuggestLocationName)
                    .HasColumnName("SuggestLocation_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TaskNo)
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewTaskPickListDrop2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TaskPickList_Drop_2");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueItemLocationStatus).HasColumnName("GoodsIssueItemLocation_Status");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SuggestLocationName)
                    .HasColumnName("SuggestLocation_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TaskNo)
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewTaskPickListDrop2AutoTask>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TaskPickList_Drop_2_AutoTask");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueItemLocationStatus).HasColumnName("GoodsIssueItemLocation_Status");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SuggestLocationName)
                    .HasColumnName("SuggestLocation_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TaskNo)
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewTaskPickListDropAutoTask>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TaskPickList_Drop_AutoTask");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueItemLocationStatus).HasColumnName("GoodsIssueItemLocation_Status");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SuggestLocationName)
                    .HasColumnName("SuggestLocation_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TaskNo)
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewTaskPickListV1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TaskPickList_V1");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueItemLocationStatus).HasColumnName("GoodsIssueItemLocation_Status");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SuggestLocationName)
                    .HasColumnName("SuggestLocation_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TaskNo)
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewTaskPickListV2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TaskPickList_V2");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueItemLocationStatus).HasColumnName("GoodsIssueItemLocation_Status");

                entity.Property(e => e.GoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.PlanGoodsIssueDate)
                    .HasColumnName("PlanGoodsIssue_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueDueDate)
                    .HasColumnName("PlanGoodsIssue_Due_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .IsRequired()
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RoundId)
                    .HasColumnName("Round_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteId)
                    .HasColumnName("Route_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToIndex).HasColumnName("ShipTo_Index");

                entity.Property(e => e.ShipToName)
                    .HasColumnName("ShipTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SoldToId)
                    .HasColumnName("SoldTo_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.SoldToIndex).HasColumnName("SoldTo_Index");

                entity.Property(e => e.SoldToName)
                    .HasColumnName("SoldTo_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SuggestLocationName)
                    .HasColumnName("SuggestLocation_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TaskNo)
                    .HasColumnName("Task_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewTaskPickShort>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TaskPickShort");

                entity.Property(e => e.Count).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.Image)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MarshallIndex).HasColumnName("Marshall_Index");

                entity.Property(e => e.MarshallNo)
                    .IsRequired()
                    .HasColumnName("Marshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.MarshallTaskIndex).HasColumnName("MarshallTask_Index");

                entity.Property(e => e.MarshallTaskItemIndex).HasColumnName("MarshallTaskItem_Index");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionRatio)
                    .HasColumnName("ProductConversion_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ReplaceStatus).HasColumnName("Replace_Status");

                entity.Property(e => e.TagKey)
                    .IsRequired()
                    .HasColumnName("tag_key")
                    .HasMaxLength(20);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewTaskPickShortV2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TaskPickShortV2");

                entity.Property(e => e.Count).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.Image)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.IsWeightByPiece)
                    .HasColumnName("Is_WeightByPiece")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MarshallIndex).HasColumnName("Marshall_Index");

                entity.Property(e => e.MarshallNo)
                    .IsRequired()
                    .HasColumnName("Marshall_No")
                    .HasMaxLength(50);

                entity.Property(e => e.MarshallTaskIndex).HasColumnName("MarshallTask_Index");

                entity.Property(e => e.MarshallTaskItemIndex).HasColumnName("MarshallTaskItem_Index");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PlanGoodsIssueIndex).HasColumnName("PlanGoodsIssue_Index");

                entity.Property(e => e.PlanGoodsIssueItemIndex).HasColumnName("PlanGoodsIssueItem_Index");

                entity.Property(e => e.PlanGoodsIssueNo)
                    .HasColumnName("PlanGoodsIssue_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionRatio)
                    .HasColumnName("ProductConversion_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyBackOrder).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.QtyRemark)
                    .HasColumnName("Qty_Remark")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ReplaceStatus).HasColumnName("Replace_Status");

                entity.Property(e => e.TagKey)
                    .IsRequired()
                    .HasColumnName("tag_key")
                    .HasMaxLength(20);

                entity.Property(e => e.TagType)
                    .IsRequired()
                    .HasColumnName("tag_type")
                    .HasMaxLength(10);

                entity.Property(e => e.TagValue)
                    .IsRequired()
                    .HasColumnName("tag_value")
                    .HasMaxLength(20);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewTaskPicktickket>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TaskPicktickket");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSubTypeId)
                    .IsRequired()
                    .HasColumnName("ProductSubType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductSubTypeName)
                    .IsRequired()
                    .HasColumnName("ProductSubType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductTypeId)
                    .IsRequired()
                    .HasColumnName("ProductType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductTypeName)
                    .IsRequired()
                    .HasColumnName("ProductType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewTaskPicktickketPickManual>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TaskPicktickketPickManual");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSubTypeId)
                    .IsRequired()
                    .HasColumnName("ProductSubType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductSubTypeName)
                    .IsRequired()
                    .HasColumnName("ProductSubType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductTypeId)
                    .IsRequired()
                    .HasColumnName("ProductType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductTypeName)
                    .IsRequired()
                    .HasColumnName("ProductType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewTaskPicktickketV2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TaskPicktickketV2");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.GoodsIssueNo)
                    .HasColumnName("GoodsIssue_No")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSubTypeId)
                    .IsRequired()
                    .HasColumnName("ProductSubType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductSubTypeName)
                    .IsRequired()
                    .HasColumnName("ProductSubType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductTypeId)
                    .IsRequired()
                    .HasColumnName("ProductType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductTypeName)
                    .IsRequired()
                    .HasColumnName("ProductType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewTranferCarton>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TranferCarton");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemIndex).HasColumnName("GoodsIssueItem_Index");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RowIndex).HasColumnName("Row_Index");

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ViewTranferCartonV2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TranferCartonV2");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingQty)
                    .HasColumnName("Picking_Qty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingRatio)
                    .HasColumnName("Picking_Ratio")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.PickingTotalQty)
                    .HasColumnName("Picking_TotalQty")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.Price).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ProductConversionBarcode)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TaskIndex).HasColumnName("Task_Index");

                entity.Property(e => e.TaskItemIndex).HasColumnName("TaskItem_Index");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UnitHeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitLength).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitPrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitVolume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWeight).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitWidth).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<ViewTruckLoadCarton>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_TruckLoadCarton");

                entity.Property(e => e.DueDate)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsLoadCarton).HasColumnName("IsLoad_Carton");

                entity.Property(e => e.LoadBy)
                    .HasColumnName("Load_By")
                    .HasMaxLength(200);

                entity.Property(e => e.LoadDate)
                    .HasColumnName("Load_Date")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LoadTime)
                    .HasColumnName("Load_Time")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentNo)
                    .IsRequired()
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(50);

                entity.Property(e => e.RoundIndex).HasColumnName("Round_Index");

                entity.Property(e => e.RoundName)
                    .HasColumnName("Round_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RouteIndex).HasColumnName("Route_Index");

                entity.Property(e => e.RouteName)
                    .HasColumnName("Route_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickIndex).HasColumnName("TagOutPick_Index");

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(200);

                entity.Property(e => e.TruckLoadIndex).HasColumnName("TruckLoad_Index");

                entity.Property(e => e.TruckLoadNo)
                    .IsRequired()
                    .HasColumnName("TruckLoad_No")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewUserTaskGroup>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_UserTaskGroup");

                entity.Property(e => e.TaskGroupId)
                    .IsRequired()
                    .HasColumnName("TaskGroup_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskGroupIndex).HasColumnName("TaskGroup_Index");

                entity.Property(e => e.TaskGroupName)
                    .IsRequired()
                    .HasColumnName("TaskGroup_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TaskGroupUserId)
                    .HasColumnName("TaskGroupUser_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.TaskGroupUserIndex).HasColumnName("TaskGroupUser_Index");

                entity.Property(e => e.UserId)
                    .HasColumnName("User_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.UserIndex).HasColumnName("User_Index");

                entity.Property(e => e.UserName)
                    .HasColumnName("User_Name")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ViewWaveBinBalance>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_WaveBinBalance");

                entity.Property(e => e.BinBalanceIndex).HasColumnName("BinBalance_Index");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyBegin)
                    .HasColumnName("BinBalance_QtyBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyReserve)
                    .HasColumnName("BinBalance_QtyReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceRatio)
                    .HasColumnName("BinBalance_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceStatus).HasColumnName("BinBalance_Status");

                entity.Property(e => e.BinBalanceVolumeBal)
                    .HasColumnName("BinBalance_VolumeBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceVolumeBegin)
                    .HasColumnName("BinBalance_VolumeBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceVolumeReserve)
                    .HasColumnName("BinBalance_VolumeReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightBal)
                    .HasColumnName("BinBalance_WeightBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightBegin)
                    .HasColumnName("BinBalance_WeightBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightReserve)
                    .HasColumnName("BinBalance_WeightReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveDate)
                    .HasColumnName("GoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveExpDate)
                    .HasColumnName("GoodsReceive_EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveItemLocationIndex).HasColumnName("GoodsReceiveItemLocation_Index");

                entity.Property(e => e.GoodsReceiveMfgDate)
                    .HasColumnName("GoodsReceive_MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveNo)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.GoodsReceiveProductConversionId)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.GoodsReceiveProductConversionIndex).HasColumnName("GoodsReceive_ProductConversion_Index");

                entity.Property(e => e.GoodsReceiveProductConversionName)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.IsUse).HasMaxLength(200);

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingSeq).HasColumnName("Picking_Seq");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductShelfLifeD).HasColumnName("ProductShelfLife_D");

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<ViewWaveRule>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_WaveRule");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ProcessIndex).HasColumnName("Process_Index");

                entity.Property(e => e.RuleId)
                    .HasColumnName("Rule_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RuleIndex).HasColumnName("Rule_Index");

                entity.Property(e => e.RuleName)
                    .HasColumnName("Rule_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("Status_Id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WaveId)
                    .HasColumnName("Wave_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WaveIndex).HasColumnName("Wave_Index");

                entity.Property(e => e.WaveName)
                    .HasColumnName("Wave_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WaveRuleId)
                    .HasColumnName("WaveRule_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WaveRuleIndex).HasColumnName("WaveRule_Index");

                entity.Property(e => e.WaveRuleSeq).HasColumnName("WaveRule_Seq");
            });

            modelBuilder.Entity<ViewWaveTemplate>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_WaveTemplate");

                entity.Property(e => e.ProcessId)
                    .HasColumnName("Process_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessIndex).HasColumnName("Process_Index");

                entity.Property(e => e.ProcessName)
                    .HasColumnName("Process_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RuleConditionFieldIndex).HasColumnName("RuleConditionField_Index");

                entity.Property(e => e.RuleConditionFieldName)
                    .HasColumnName("RuleConditionField_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RuleConditionIndex).HasColumnName("RuleCondition_Index");

                entity.Property(e => e.RuleConditionOperation).HasMaxLength(200);

                entity.Property(e => e.RuleConditionOperationIndex).HasColumnName("RuleConditionOperation_Index");

                entity.Property(e => e.RuleConditionOperationType).HasMaxLength(200);

                entity.Property(e => e.RuleConditionParam)
                    .HasColumnName("RuleCondition_Param")
                    .HasMaxLength(200);

                entity.Property(e => e.RuleConditionSeq).HasColumnName("RuleCondition_Seq");

                entity.Property(e => e.RuleId)
                    .HasColumnName("Rule_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.RuleIndex).HasColumnName("Rule_Index");

                entity.Property(e => e.RuleName)
                    .HasColumnName("Rule_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RuleSeq).HasColumnName("Rule_Seq");

                entity.Property(e => e.WaveId)
                    .HasColumnName("Wave_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WaveIndex).HasColumnName("Wave_Index");

                entity.Property(e => e.WaveName)
                    .HasColumnName("Wave_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WaveRuleId)
                    .HasColumnName("WaveRule_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WaveRuleIndex).HasColumnName("WaveRule_Index");

                entity.Property(e => e.WaveRuleSeq).HasColumnName("WaveRule_Seq");
            });

            modelBuilder.Entity<ViewZoneLocation>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_ZoneLocation");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationTypeId)
                    .HasColumnName("LocationType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationTypeIndex).HasColumnName("LocationType_Index");

                entity.Property(e => e.LocationTypeName)
                    .HasColumnName("LocationType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<WmBinBalance>(entity =>
            {
                entity.HasKey(e => e.BinBalanceIndex);

                entity.ToTable("wm_BinBalance");

                entity.HasIndex(e => e.GoodsReceiveIndex);

                entity.HasIndex(e => e.ItemStatusIndex);

                entity.HasIndex(e => e.LocationIndex);

                entity.HasIndex(e => e.LocationName);

                entity.HasIndex(e => e.ProductIndex);

                entity.HasIndex(e => e.TagIndex);

                entity.Property(e => e.BinBalanceIndex)
                    .HasColumnName("BinBalance_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.BatchId)
                    .HasColumnName("Batch_ID")
                    .HasMaxLength(20);

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyBegin)
                    .HasColumnName("BinBalance_QtyBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyReserve)
                    .HasColumnName("BinBalance_QtyReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceRatio)
                    .HasColumnName("BinBalance_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceStatus).HasColumnName("BinBalance_Status");

                entity.Property(e => e.BinBalanceVolumeBal)
                    .HasColumnName("BinBalance_VolumeBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceVolumeBegin)
                    .HasColumnName("BinBalance_VolumeBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceVolumeReserve)
                    .HasColumnName("BinBalance_VolumeReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightBal)
                    .HasColumnName("BinBalance_WeightBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightBegin)
                    .HasColumnName("BinBalance_WeightBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightReserve)
                    .HasColumnName("BinBalance_WeightReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveDate)
                    .HasColumnName("GoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveExpDate)
                    .HasColumnName("GoodsReceive_EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveItemLocationIndex).HasColumnName("GoodsReceiveItemLocation_Index");

                entity.Property(e => e.GoodsReceiveMfgDate)
                    .HasColumnName("GoodsReceive_MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveNo)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.GoodsReceiveProductConversionId)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.GoodsReceiveProductConversionIndex).HasColumnName("GoodsReceive_ProductConversion_Index");

                entity.Property(e => e.GoodsReceiveProductConversionName)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.IsUse).HasMaxLength(200);

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<WmBinCard>(entity =>
            {
                entity.HasKey(e => e.BinCardIndex);

                entity.ToTable("wm_BinCard");

                entity.HasIndex(e => e.RefDocumentIndex);

                entity.HasIndex(e => e.RefDocumentItemIndex);

                entity.HasIndex(e => e.TagItemIndex);

                entity.HasIndex(e => new { e.ProductId, e.ProductConversionId })
                    .HasName("NonClusteredIndex-20190527-165848");

                entity.Property(e => e.BinCardIndex)
                    .HasColumnName("BinCard_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.BinCardDate)
                    .HasColumnName("BinCard_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.BinCardNo)
                    .HasColumnName("BinCard_No")
                    .HasMaxLength(50);

                entity.Property(e => e.BinCardQtyIn)
                    .HasColumnName("BinCard_QtyIn")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinCardQtyOut)
                    .HasColumnName("BinCard_QtyOut")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinCardQtySign)
                    .HasColumnName("BinCard_QtySign")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinCardVolumeIn)
                    .HasColumnName("BinCard_VolumeIn")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinCardVolumeOut)
                    .HasColumnName("BinCard_VolumeOut")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinCardVolumeSign)
                    .HasColumnName("BinCard_VolumeSign")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinCardWeightIn)
                    .HasColumnName("BinCard_WeightIn")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinCardWeightOut)
                    .HasColumnName("BinCard_WeightOut")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinCardWeightSign)
                    .HasColumnName("BinCard_WeightSign")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CustomInterfaceFlag1)
                    .HasColumnName("Custom_Interface_Flag1")
                    .HasMaxLength(20);

                entity.Property(e => e.CustomInterfaceFlag2)
                    .HasColumnName("Custom_Interface_Flag2")
                    .HasMaxLength(20);

                entity.Property(e => e.CustomInterfaceFlag3)
                    .HasColumnName("Custom_Interface_Flag3")
                    .HasMaxLength(20);

                entity.Property(e => e.CustomInterfaceFlag4)
                    .HasColumnName("Custom_Interface_Flag4")
                    .HasMaxLength(20);

                entity.Property(e => e.CustomInterfaceFlag5)
                    .HasColumnName("Custom_Interface_Flag5")
                    .HasMaxLength(20);

                entity.Property(e => e.DocumentTypeId)
                    .IsRequired()
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .IsRequired()
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GoodsReceiveExpDate)
                    .HasColumnName("GoodsReceive_EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveExpDateTo)
                    .HasColumnName("GoodsReceive_EXP_Date_To")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveItemLocationIndex).HasColumnName("GoodsReceiveItemLocation_Index");

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIdTo)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusIndexTo).HasColumnName("ItemStatus_Index_To");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ItemStatusNameTo)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name_To")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIdTo)
                    .HasColumnName("Location_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationIndexTo).HasColumnName("Location_Index_To");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationNameTo)
                    .HasColumnName("Location_Name_To")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIdTo)
                    .IsRequired()
                    .HasColumnName("Owner_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerIndexTo).HasColumnName("Owner_Index_To");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerNameTo)
                    .IsRequired()
                    .HasColumnName("Owner_Name_To")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessIndex).HasColumnName("Process_Index");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIdTo)
                    .IsRequired()
                    .HasColumnName("Product_Id_To")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductIndexTo).HasColumnName("Product_Index_To");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductLotTo)
                    .HasColumnName("Product_Lot_To")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductNameTo)
                    .IsRequired()
                    .HasColumnName("Product_Name_To")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondNameTo)
                    .HasColumnName("Product_SecondName_To")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdNameTo)
                    .HasColumnName("Product_ThirdName_To")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagIndexTo).HasColumnName("Tag_Index_To");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagNoTo)
                    .HasColumnName("Tag_No_To")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.TagOutIndexTo).HasColumnName("TagOut_Index_To");

                entity.Property(e => e.TagOutItemIndex)
                    .HasColumnName("TagOutItem_Index")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutNoTo)
                    .HasColumnName("TagOut_No_To")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<WmBinCardLock>(entity =>
            {
                entity.HasKey(e => e.BinCardLockIndex);

                entity.ToTable("wm_BinCardLock");

                entity.Property(e => e.BinCardLockIndex)
                    .HasColumnName("BinCardLock_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.BinCardLockKey).HasColumnName("BinCardLock_Key");

                entity.Property(e => e.BinCardLockQtyBal)
                    .HasColumnName("BinCardLock_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinCardLockVolumeBal)
                    .HasColumnName("BinCardLock_VolumeBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinCardLockWeightBal)
                    .HasColumnName("BinCardLock_WeightBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");
            });

            modelBuilder.Entity<WmBinCardReserve>(entity =>
            {
                entity.HasKey(e => e.BinCardReserveIndex);

                entity.ToTable("wm_BinCardReserve");

                entity.HasIndex(e => e.RefDocumentItemIndex)
                    .HasName("Bincardreserver_test_index");

                entity.Property(e => e.BinCardReserveIndex)
                    .HasColumnName("BinCardReserve_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.BinBalanceIndex).HasColumnName("BinBalance_Index");

                entity.Property(e => e.BinCardReserveQtyBal)
                    .HasColumnName("BinCardReserve_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinCardReserveStatus).HasColumnName("BinCardReserve_Status");

                entity.Property(e => e.BinCardReserveVolumeBal)
                    .HasColumnName("BinCardReserve_VolumeBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinCardReserveWeightBal)
                    .HasColumnName("BinCardReserve_WeightBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveDate)
                    .HasColumnName("GoodsReceive_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveNo)
                    .HasColumnName("GoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessIndex).HasColumnName("Process_Index");

                entity.Property(e => e.ProductConversionId)
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefWaveIndex)
                    .HasColumnName("Ref_Wave_Index")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<WmBinbalancebackup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("wm_binbalancebackup");

                entity.Property(e => e.BinBalanceIndex).HasColumnName("BinBalance_Index");

                entity.Property(e => e.BinBalanceQtyBal)
                    .HasColumnName("BinBalance_QtyBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyBegin)
                    .HasColumnName("BinBalance_QtyBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceQtyReserve)
                    .HasColumnName("BinBalance_QtyReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceRatio)
                    .HasColumnName("BinBalance_Ratio")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceStatus).HasColumnName("BinBalance_Status");

                entity.Property(e => e.BinBalanceVolumeBal)
                    .HasColumnName("BinBalance_VolumeBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceVolumeBegin)
                    .HasColumnName("BinBalance_VolumeBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceVolumeReserve)
                    .HasColumnName("BinBalance_VolumeReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightBal)
                    .HasColumnName("BinBalance_WeightBal")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightBegin)
                    .HasColumnName("BinBalance_WeightBegin")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.BinBalanceWeightReserve)
                    .HasColumnName("BinBalance_WeightReserve")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveDate)
                    .HasColumnName("GoodsReceive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoodsReceiveExpDate)
                    .HasColumnName("GoodsReceive_EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.GoodsReceiveItemLocationIndex).HasColumnName("GoodsReceiveItemLocation_Index");

                entity.Property(e => e.GoodsReceiveMfgDate)
                    .HasColumnName("GoodsReceive_MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveNo)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_No")
                    .HasMaxLength(50);

                entity.Property(e => e.GoodsReceiveProductConversionId)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.GoodsReceiveProductConversionIndex).HasColumnName("GoodsReceive_ProductConversion_Index");

                entity.Property(e => e.GoodsReceiveProductConversionName)
                    .IsRequired()
                    .HasColumnName("GoodsReceive_ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.IsUse).HasMaxLength(200);

                entity.Property(e => e.ItemStatusId)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .IsRequired()
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .IsRequired()
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .IsRequired()
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<WmCycleCount>(entity =>
            {
                entity.HasKey(e => e.CycleCountIndex);

                entity.ToTable("wm_CycleCount");

                entity.Property(e => e.CycleCountIndex)
                    .HasColumnName("CycleCount_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CycleCountDate)
                    .HasColumnName("CycleCount_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CycleCountNo)
                    .IsRequired()
                    .HasColumnName("CycleCount_No")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.DocumentTypeId)
                    .HasColumnName("DocumentType_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentTypeIndex).HasColumnName("DocumentType_Index");

                entity.Property(e => e.DocumentTypeName)
                    .HasColumnName("DocumentType_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("Owner_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.OwnerIndex).HasColumnName("Owner_Index");

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("Warehouse_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.WarehouseIndex).HasColumnName("Warehouse_Index");

                entity.Property(e => e.WarehouseName)
                    .HasColumnName("Warehouse_Name")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<WmCycleCountDetail>(entity =>
            {
                entity.HasKey(e => e.CycleCountDetailIndex);

                entity.ToTable("wm_CycleCountDetail");

                entity.Property(e => e.CycleCountDetailIndex)
                    .HasColumnName("CycleCountDetail_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.AttibuteCount).HasColumnName("Attibute_Count");

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CycleCountIndex).HasColumnName("CycleCount_Index");

                entity.Property(e => e.CycleCountItemIndex).HasColumnName("CycleCountItem_Index");

                entity.Property(e => e.CycleCountNo)
                    .HasColumnName("CycleCount_No")
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.QtyBal)
                    .HasColumnName("Qty_Bal")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.QtyCount)
                    .HasColumnName("Qty_Count")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.QtyDiff)
                    .HasColumnName("Qty_Diff")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ReasonCodeId)
                    .HasColumnName("ReasonCode_Id")
                    .HasMaxLength(200);

                entity.Property(e => e.ReasonCodeIndex).HasColumnName("ReasonCode_Index");

                entity.Property(e => e.ReasonCodeName)
                    .HasColumnName("ReasonCode_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagItemIndex).HasColumnName("TagItem_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<WmCycleCountItem>(entity =>
            {
                entity.HasKey(e => e.CycleCountItemIndex);

                entity.ToTable("wm_CycleCountItem");

                entity.Property(e => e.CycleCountItemIndex)
                    .HasColumnName("CycleCountItem_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CycleCountBy)
                    .HasColumnName("CycleCount_By")
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.CycleCountDate)
                    .HasColumnName("CycleCount_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CycleCountIndex).HasColumnName("CycleCount_Index");

                entity.Property(e => e.CycleCountNo)
                    .HasColumnName("CycleCount_No")
                    .HasMaxLength(50);

                entity.Property(e => e.CycleCountStatus).HasColumnName("CycleCount_Status");

                entity.Property(e => e.DocumentRefNo1)
                    .HasColumnName("DocumentRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo2)
                    .HasColumnName("DocumentRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo3)
                    .HasColumnName("DocumentRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo4)
                    .HasColumnName("DocumentRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentRefNo5)
                    .HasColumnName("DocumentRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.ProductId)
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ZoneId)
                    .HasColumnName("Zone_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");

                entity.Property(e => e.ZoneName)
                    .HasColumnName("Zone_Name")
                    .HasMaxLength(50);

                entity.HasOne(d => d.CycleCountIndexNavigation)
                    .WithMany(p => p.WmCycleCountItem)
                    .HasForeignKey(d => d.CycleCountIndex)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_wm_CycleCountItem_wm_CycleCount");
            });

            modelBuilder.Entity<WmTag>(entity =>
            {
                entity.HasKey(e => e.TagIndex);

                entity.ToTable("wm_Tag");

                entity.HasIndex(e => e.TagNo)
                    .HasName("TagNoKeyIndex");

                entity.Property(e => e.TagIndex)
                    .HasColumnName("Tag_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PalletIndex).HasColumnName("Pallet_Index");

                entity.Property(e => e.PalletNo)
                    .HasColumnName("Pallet_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagRefNo1)
                    .HasColumnName("TagRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.TagRefNo2)
                    .HasColumnName("TagRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.TagRefNo3)
                    .HasColumnName("TagRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.TagRefNo4)
                    .HasColumnName("TagRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.TagRefNo5)
                    .HasColumnName("TagRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.TagStatus).HasColumnName("Tag_Status");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssigned)
                    .HasColumnName("User_Assigned")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<WmTagItem>(entity =>
            {
                entity.HasKey(e => e.TagItemIndex);

                entity.ToTable("wm_TagItem");

                entity.Property(e => e.TagItemIndex)
                    .HasColumnName("TagItem_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsReceiveIndex).HasColumnName("GoodsReceive_Index");

                entity.Property(e => e.GoodsReceiveItemIndex).HasColumnName("GoodsReceiveItem_Index");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TagIndex).HasColumnName("Tag_Index");

                entity.Property(e => e.TagNo)
                    .HasColumnName("Tag_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagRefNo1)
                    .HasColumnName("TagRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.TagRefNo2)
                    .HasColumnName("TagRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.TagRefNo3)
                    .HasColumnName("TagRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.TagRefNo4)
                    .HasColumnName("TagRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.TagRefNo5)
                    .HasColumnName("TagRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.TagStatus).HasColumnName("Tag_Status");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(50);

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");

                entity.HasOne(d => d.GoodsReceiveItemIndexNavigation)
                    .WithMany(p => p.WmTagItem)
                    .HasForeignKey(d => d.GoodsReceiveItemIndex)
                    .HasConstraintName("FK_wm_TagItem_im_GoodsReceiveItem");

                entity.HasOne(d => d.TagIndexNavigation)
                    .WithMany(p => p.WmTagItem)
                    .HasForeignKey(d => d.TagIndex)
                    .HasConstraintName("FK_wm_TagItem_wm_Tag");
            });

            modelBuilder.Entity<WmTagOut>(entity =>
            {
                entity.HasKey(e => e.TagOutIndex);

                entity.ToTable("wm_TagOut");

                entity.HasIndex(e => e.RefDocumentNo);

                entity.HasIndex(e => e.TagOutNo);

                entity.HasIndex(e => e.TagOutStatus);

                entity.Property(e => e.TagOutIndex)
                    .HasColumnName("TagOut_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CloseCartonBy)
                    .HasColumnName("CloseCarton_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CloseCartonDate)
                    .HasColumnName("CloseCarton_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CloseLoadDate)
                    .HasColumnName("CloseLoad_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsCrossdock).HasColumnName("Is_Crossdock");

                entity.Property(e => e.IsPrint).HasColumnName("isPrint");

                entity.Property(e => e.LoadDate)
                    .HasColumnName("Load_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.LocationConfirmId)
                    .HasColumnName("Location_Confirm_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationConfirmIndex).HasColumnName("Location_Confirm_Index");

                entity.Property(e => e.LocationConfirmName)
                    .HasColumnName("Location_Confirm_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutRefNo1)
                    .HasColumnName("TagOutRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo2)
                    .HasColumnName("TagOutRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo3)
                    .HasColumnName("TagOutRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo4)
                    .HasColumnName("TagOutRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo5)
                    .HasColumnName("TagOutRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");
            });

            modelBuilder.Entity<WmTagOutItem>(entity =>
            {
                entity.HasKey(e => e.TagOutItemIndex);

                entity.ToTable("wm_TagOutItem");

                entity.HasIndex(e => e.RefDocumentIndex);

                entity.HasIndex(e => e.RefDocumentItemIndex);

                entity.HasIndex(e => e.TagOutIndex);

                entity.HasIndex(e => e.TagOutNo)
                    .HasName("IX_wm_TagOutItemNO");

                entity.Property(e => e.TagOutItemIndex)
                    .HasColumnName("TagOutItem_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CartonNo)
                    .HasColumnName("Carton_No")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DistroNo)
                    .HasColumnName("Distro_No")
                    .HasMaxLength(50);

                entity.Property(e => e.ExpDate)
                    .HasColumnName("EXP_Date")
                    .HasColumnType("date");

                entity.Property(e => e.GoodsIssueIndex).HasColumnName("GoodsIssue_Index");

                entity.Property(e => e.GoodsIssueItemIndex).HasColumnName("GoodsIssueItem_Index");

                entity.Property(e => e.GoodsIssueItemLocationIndex).HasColumnName("GoodsIssueItemLocation_Index");

                entity.Property(e => e.ItemStatusId)
                    .HasColumnName("ItemStatus_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemStatusIndex).HasColumnName("ItemStatus_Index");

                entity.Property(e => e.ItemStatusName)
                    .HasColumnName("ItemStatus_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.LineNo).HasColumnName("Line_No");

                entity.Property(e => e.LocationConfirmId)
                    .HasColumnName("Location_Confirm_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationConfirmIndex).HasColumnName("Location_Confirm_Index");

                entity.Property(e => e.LocationConfirmName)
                    .HasColumnName("Location_Confirm_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.MfgDate)
                    .HasColumnName("MFG_Date")
                    .HasColumnType("date");

                entity.Property(e => e.ProductConversionId)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductConversionIndex).HasColumnName("ProductConversion_Index");

                entity.Property(e => e.ProductConversionName)
                    .IsRequired()
                    .HasColumnName("ProductConversion_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductId)
                    .IsRequired()
                    .HasColumnName("Product_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductIndex).HasColumnName("Product_Index");

                entity.Property(e => e.ProductLot)
                    .HasColumnName("Product_Lot")
                    .HasMaxLength(50);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasColumnName("Product_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductSecondName)
                    .HasColumnName("Product_SecondName")
                    .HasMaxLength(200);

                entity.Property(e => e.ProductThirdName)
                    .HasColumnName("Product_ThirdName")
                    .HasMaxLength(200);

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Ratio).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.TagOutIndex).HasColumnName("TagOut_Index");

                entity.Property(e => e.TagOutNo)
                    .HasColumnName("TagOut_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutRefNo1)
                    .HasColumnName("TagOutRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo2)
                    .HasColumnName("TagOutRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo3)
                    .HasColumnName("TagOutRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo4)
                    .HasColumnName("TagOutRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutRefNo5)
                    .HasColumnName("TagOutRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutStatus).HasColumnName("TagOut_Status");

                entity.Property(e => e.TotalQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Volume).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Weight).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<WmTagOutPick>(entity =>
            {
                entity.HasKey(e => e.TagOutPickIndex);

                entity.ToTable("wm_TagOutPick");

                entity.HasIndex(e => e.EquipmentId);

                entity.HasIndex(e => e.EquipmentIndex);

                entity.HasIndex(e => e.EquipmentItemId);

                entity.HasIndex(e => e.EquipmentItemIndex);

                entity.HasIndex(e => e.EquipmentItemName);

                entity.HasIndex(e => e.EquipmentName);

                entity.HasIndex(e => e.RefDocumentItemIndex);

                entity.HasIndex(e => e.TagOutPickNo);

                entity.HasIndex(e => e.TagOutPickStatus);

                entity.Property(e => e.TagOutPickIndex)
                    .HasColumnName("TagOutPick_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConfirmTagOutQty).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(200);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CustomInterfaceFlag1)
                    .HasColumnName("Custom_Interface_Flag1")
                    .HasMaxLength(20);

                entity.Property(e => e.CustomInterfaceFlag2)
                    .HasColumnName("Custom_Interface_Flag2")
                    .HasMaxLength(20);

                entity.Property(e => e.EquipmentId)
                    .HasColumnName("Equipment_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentIndex).HasColumnName("Equipment_Index");

                entity.Property(e => e.EquipmentItemDesc)
                    .HasColumnName("EquipmentItem_Desc")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentItemId)
                    .HasColumnName("EquipmentItem_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.EquipmentItemIndex).HasColumnName("EquipmentItem_Index");

                entity.Property(e => e.EquipmentItemName)
                    .HasColumnName("EquipmentItem_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.EquipmentName)
                    .HasColumnName("Equipment_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.PickingBy)
                    .HasColumnName("Picking_By")
                    .HasMaxLength(50);

                entity.Property(e => e.PickingDate)
                    .HasColumnName("Picking_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PickingStatus).HasColumnName("Picking_Status");

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.RefDocumentNo)
                    .HasColumnName("Ref_Document_No")
                    .HasMaxLength(200);

                entity.Property(e => e.RefProcessIndex).HasColumnName("Ref_Process_Index");

                entity.Property(e => e.SuggestLocationName)
                    .HasColumnName("SuggestLocation_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickNo)
                    .HasColumnName("TagOutPick_No")
                    .HasMaxLength(50);

                entity.Property(e => e.TagOutPickRefNo1)
                    .HasColumnName("TagOutPickRef_No1")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickRefNo2)
                    .HasColumnName("TagOutPickRef_No2")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickRefNo3)
                    .HasColumnName("TagOutPickRef_No3")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickRefNo4)
                    .HasColumnName("TagOutPickRef_No4")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickRefNo5)
                    .HasColumnName("TagOutPickRef_No5")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickSize)
                    .HasColumnName("TagOutPick_Size")
                    .HasMaxLength(200);

                entity.Property(e => e.TagOutPickStatus).HasColumnName("TagOutPick_Status");

                entity.Property(e => e.Udf1)
                    .HasColumnName("UDF_1")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf2)
                    .HasColumnName("UDF_2")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf3)
                    .HasColumnName("UDF_3")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf4)
                    .HasColumnName("UDF_4")
                    .HasMaxLength(200);

                entity.Property(e => e.Udf5)
                    .HasColumnName("UDF_5")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(200);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign).HasMaxLength(200);

                entity.Property(e => e.ZoneIndex).HasColumnName("Zone_Index");
            });

            modelBuilder.Entity<WmTaskCycleCount>(entity =>
            {
                entity.HasKey(e => e.TaskIndex);

                entity.ToTable("wm_TaskCycleCount");

                entity.Property(e => e.TaskIndex)
                    .HasColumnName("Task_Index")
                    .ValueGeneratedNever();

                entity.Property(e => e.CancelBy)
                    .HasColumnName("Cancel_By")
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.CancelDate)
                    .HasColumnName("Cancel_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("Create_By")
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.CreateDate)
                    .HasColumnName("Create_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DocumentStatus).HasColumnName("Document_Status");

                entity.Property(e => e.EndCount).HasColumnType("datetime");

                entity.Property(e => e.LocationId)
                    .HasColumnName("Location_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.LocationIndex).HasColumnName("Location_Index");

                entity.Property(e => e.LocationName)
                    .HasColumnName("Location_Name")
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.RefDocumentIndex).HasColumnName("Ref_Document_Index");

                entity.Property(e => e.RefDocumentItemIndex).HasColumnName("Ref_DocumentItem_Index");

                entity.Property(e => e.StartCount).HasColumnType("datetime");

                entity.Property(e => e.TaskGroupIndex).HasColumnName("TaskGroup_Index");

                entity.Property(e => e.TaskNo)
                    .HasColumnName("Task_No")
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("Update_By")
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("Update_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserAssign)
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.UserCount)
                    .HasMaxLength(50)
                    .IsFixedLength();
            });

            modelBuilder.Entity<ZzLocation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("zz_location");
            });

            modelBuilder.Entity<ZzXref>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("zz_xref");

                entity.Property(e => e.CreateDateTime)
                    .HasColumnName("CREATE_DATE_TIME")
                    .HasColumnType("datetime");

                entity.Property(e => e.Div)
                    .HasColumnName("DIV")
                    .HasMaxLength(255);

                entity.Property(e => e.InptXrefId).HasColumnName("INPT_XREF_ID");

                entity.Property(e => e.ModDateTime)
                    .HasColumnName("MOD_DATE_TIME")
                    .HasColumnType("datetime");

                entity.Property(e => e.ProcStatCode).HasColumnName("PROC_STAT_CODE");

                entity.Property(e => e.ScanQnty).HasColumnName("SCAN_QNTY");

                entity.Property(e => e.SkuBrcd).HasColumnName("SKU_BRCD");

                entity.Property(e => e.StatCode).HasColumnName("STAT_CODE");

                entity.Property(e => e.UserId)
                    .HasColumnName("USER_ID")
                    .HasMaxLength(255);

                entity.Property(e => e.VendorBrcd)
                    .HasColumnName("VENDOR_BRCD")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<OnwmsPuttostoreException>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("onwms_puttostore_exception");

                entity.Property(e => e.No).HasColumnName("no");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("create_by")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.DistroNo)
                    .HasColumnName("distro_no")
                    .HasMaxLength(20);

                entity.Property(e => e.DistrodtlStatus)
                    .HasColumnName("distrodtl_status")
                    .HasMaxLength(20);

                entity.Property(e => e.LineNo).HasColumnName("line_no");

                entity.Property(e => e.ProductId)
                    .HasColumnName("product_id")
                    .HasMaxLength(20);

                entity.Property(e => e.ProductName)
                    .HasColumnName("product_name")
                    .HasMaxLength(20);

                entity.Property(e => e.QtyPut)
                    .HasColumnName("qty_put")
                    .HasColumnType("numeric(10, 3)");

                entity.Property(e => e.StatusId)
                    .HasColumnName("status_id")
                    .HasMaxLength(20);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("update_by")
                    .HasMaxLength(20);

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("update_date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<ExwmsImportmonitorLog>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("exwms_importmonitor_log");

                entity.Property(e => e.No).HasColumnName("no");

                entity.Property(e => e.BatchId)
                    .HasColumnName("batch_id")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("create_by")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateByRaw)
                    .HasColumnName("create_by_raw")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateDateRaw)
                    .HasColumnName("create_date_raw")
                    .HasColumnType("datetime");

                entity.Property(e => e.ErrorCode)
                    .HasColumnName("error_code")
                    .HasMaxLength(20);

                entity.Property(e => e.ErrorDesc)
                    .HasColumnName("error_desc")
                    .HasMaxLength(50);

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasMaxLength(50);

                entity.Property(e => e.IsOver)
                    .HasColumnName("is_over")
                    .HasMaxLength(10);

                entity.Property(e => e.Line1)
                    .HasColumnName("line1")
                    .HasMaxLength(20);

                entity.Property(e => e.Line2)
                    .HasColumnName("line2")
                    .HasMaxLength(20);

                entity.Property(e => e.LocationId)
                    .HasColumnName("location_id")
                    .HasMaxLength(50);

                entity.Property(e => e.OperCode)
                    .HasColumnName("oper_code")
                    .HasMaxLength(20);

                entity.Property(e => e.PutawayType)
                    .HasColumnName("putaway_type")
                    .HasMaxLength(20);

                entity.Property(e => e.Row)
                    .HasColumnName("row")
                    .HasMaxLength(20);

                entity.Property(e => e.RowPrefix)
                    .HasColumnName("row_prefix")
                    .HasMaxLength(20);

                entity.Property(e => e.StatusCode)
                    .HasColumnName("status_code")
                    .HasMaxLength(20);

                entity.Property(e => e.Zone)
                    .HasColumnName("zone")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<ExwmsImportmonitorTemp>(entity =>
            {
                entity.HasKey(e => e.No);

                entity.ToTable("exwms_importmonitor_temp");

                entity.Property(e => e.No)
                    .HasColumnName("no")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BatchId)
                    .HasColumnName("batch_id")
                    .HasMaxLength(20);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("create_by")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateByRaw)
                    .HasColumnName("create_by_raw")
                    .HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnName("create_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreateDateRaw)
                    .HasColumnName("create_date_raw")
                    .HasColumnType("datetime");

                entity.Property(e => e.ErrorCode)
                    .HasColumnName("error_code")
                    .HasMaxLength(20);

                entity.Property(e => e.ErrorDesc)
                    .HasColumnName("error_desc")
                    .HasMaxLength(50);

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasMaxLength(50);

                entity.Property(e => e.IsOver)
                    .HasColumnName("is_over")
                    .HasMaxLength(10);

                entity.Property(e => e.Line1)
                    .HasColumnName("line1")
                    .HasMaxLength(20);

                entity.Property(e => e.Line2)
                    .HasColumnName("line2")
                    .HasMaxLength(20);

                entity.Property(e => e.LocationId)
                    .HasColumnName("location_id")
                    .HasMaxLength(50);

                entity.Property(e => e.OperCode)
                    .HasColumnName("oper_code")
                    .HasMaxLength(20);

                entity.Property(e => e.PutawayType)
                    .HasColumnName("putaway_type")
                    .HasMaxLength(20);

                entity.Property(e => e.Row)
                    .HasColumnName("row")
                    .HasMaxLength(20);

                entity.Property(e => e.RowPrefix)
                    .HasColumnName("row_prefix")
                    .HasMaxLength(20);

                entity.Property(e => e.StatusCode)
                    .HasColumnName("status_code")
                    .HasMaxLength(20);

                entity.Property(e => e.Zone)
                    .HasColumnName("zone")
                    .HasMaxLength(20);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }

    public class WMSContextDesignFactory : IDesignTimeDbContextFactory<WMSDB_PWBContext>
    {
        public WMSDB_PWBContext CreateDbContext(string[] args)
        {

            DbContextOptionsBuilder<WMSDB_PWBContext> optionsBuilder = new DbContextOptionsBuilder<WMSDB_PWBContext>();

            //var configuration = new ConfigurationBuilder()
            //                       .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
            //                       .AddJsonFile($"appsettings.json", optional: false, reloadOnChange: true)
            //                       .Build();

            //optionsBuilder.UseSqlServer("Data Source=CFHQFFMDB61\\CDSIMPUAT01;Initial Catalog = WMSDB_CFM_DEV;Trusted_Connection=True;Integrated Security=False;user id=cfrffmusr;password=ffmusr@cfr"); // fix to prod

            return new WMSDB_PWBContext(optionsBuilder.Options);
        }
    }
}
